var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractCategory.html",[0,0.262,1,3.96]],["body/classes/AbstractCategory.html",[0,0.364,1,6.737,2,1.036,3,0.052,4,0.046,5,0.046,6,10.121,7,7.042,8,0.211,9,0.706,10,6.336,11,5.393,12,2.199,13,0.913,14,6.336,15,0.42,16,0.004,17,5.205,18,0.42,19,7.042,20,0.978,21,7.042,22,1.283,23,7.042,24,7.042,25,7.042,26,0.052,27,0.003,28,0.004,29,0.003]],["title/classes/ActivityDto.html",[0,0.262,30,4.55]],["body/classes/ActivityDto.html",[0,0.379,2,1.079,3,0.054,4,0.048,5,0.048,8,0.219,9,0.723,11,5.488,15,0.4,16,0.004,18,0.4,20,0.992,26,0.054,27,0.003,28,0.004,29,0.003,30,7.932,31,5.04,32,7.33,33,5.084,34,1.609,35,7.879,36,7.33,37,7.33,38,7.33,39,0.241,40,7.33,41,6.588]],["title/classes/ActivityModel.html",[0,0.262,42,4.55]],["body/classes/ActivityModel.html",[0,0.366,2,1.041,3,0.052,4,0.046,5,0.046,8,0.212,9,0.708,11,5.404,12,2.204,15,0.421,16,0.004,17,4.638,18,0.421,20,0.98,22,1.287,26,0.052,27,0.003,28,0.004,29,0.003,33,5.006,34,1.585,35,7.76,39,0.233,41,6.36,42,7.765,43,7.077,44,9.327,45,7.077,46,7.077,47,7.077,48,7.077,49,7.077,50,7.077]],["title/components/AddContactsComponent.html",[51,0.946,52,1.593]],["body/components/AddContactsComponent.html",[0,0.182,3,0.026,4,0.023,5,0.023,8,0.16,9,0.438,13,0.801,15,0.358,16,0.004,18,0.369,22,0.962,26,0.026,27,0.002,28,0.002,29,0.002,34,1.098,39,0.213,51,1.206,52,2.269,53,1.727,54,1.137,55,1.153,56,1.153,57,1.153,58,8.951,59,8.044,60,3.519,61,1.575,62,2.116,63,1.093,64,3.044,65,3.378,66,2.632,67,5.756,68,1.75,69,6.459,70,1.75,71,5.343,72,6.412,73,1.122,74,4.802,75,5.343,76,2.362,77,5.343,78,3.505,79,5.051,80,0.331,81,2.496,82,4.571,83,5.343,84,1.155,85,1.127,86,3.387,87,5.373,88,3.519,89,3.966,90,3.519,91,4.802,92,3.519,93,1.514,94,1.996,95,5.343,96,3.519,97,3.519,98,3.519,99,5.343,100,3.519,101,0.689,102,0.681,103,4.01,104,3.966,105,0.564,106,2.161,107,2.039,108,2.039,109,2.928,110,1.153,111,3.163,112,4.094,113,3.163,114,3.281,115,4.794,116,3.163,117,3.519,118,1.051,119,3.519,120,3.014,121,3.281,122,3.966,123,3.789,124,2.02,125,0.905,126,1.75,127,1.727,128,1.153,129,2.362,130,1.153,131,1.153,132,1.107,133,1.75,134,1.107,135,1.153,136,1.107,137,1.153,138,1.093,139,0.705,140,2.99,141,1.107,142,1.831,143,2.362,144,1.093,145,1.107,146,1.153,147,1.107,148,1.75,149,1.093,150,1.137,151,1.107,152,0.905,153,1.153,154,1.093,155,1.153,156,1.093,157,1.153,158,1.107,159,1.153,160,1.107,161,1.153,162,1.107,163,1.153,164,1.153,165,1.093,166,1.024,167,1.107,168,1.153,169,1.107,170,1.153,171,1.107,172,0.986,173,1.153,174,1.107,175,1.153,176,1.107,177,1.153,178,1.107,179,1.516,180,1.093,181,1.107,182,1.153,183,1.107,184,1.037,185,1.107,186,1.248,187,1.093,188,1.107,189,1.153,190,1.107,191,0.905,192,1.153,193,1.107,194,1.137,195,1.153,196,1.107,197,1.153,198,1.107,199,1.153,200,1.093,201,0.986,202,1.107,203,1.153,204,1.078,205,1.153,206,1.107,207,1.153,208,1.107,209,1.107,210,1.107,211,1.535,212,1.093,213,1.107,214,1.248,215,1.153,216,1.093,217,1.107,218,1.153,219,1.107,220,1.107,221,0.894,222,1.153,223,1.153]],["title/classes/AddToCart.html",[0,0.262,224,2.718]],["body/classes/AddToCart.html",[0,0.502,2,0.669,3,0.034,4,0.03,5,0.03,8,0.136,9,0.529,12,1.524,13,0.633,15,0.437,16,0.005,18,0.364,20,0.651,22,1.461,26,0.073,27,0.002,28,0.003,29,0.002,39,0.213,66,1.83,80,0.809,84,0.728,85,0.711,101,0.89,102,0.88,139,1.292,186,2.312,201,1.807,214,1.062,224,3.462,225,1.856,226,2.71,227,1.861,228,3.256,229,4.623,230,4.182,231,1.723,232,2.312,233,4.548,234,4.467,235,6.451,236,7.496,237,3.643,238,2.028,239,4.024,240,1.307,241,2.501,242,3.044,243,2.566,244,0.911,245,2.566,246,2.566,247,2.566,248,2.566,249,1.183,250,2.385,251,2.501,252,2.394,253,3.132,254,1.751,255,2.332,256,2.501,257,1.575,258,2.501,259,2.501,260,2.635,261,3.462,262,2.635,263,2.281,264,2.635,265,2.501,266,2.71,267,2.501,268,1.801,269,2.566,270,1.183]],["title/components/AddToCartComponent.html",[51,0.946,132,1.593]],["body/components/AddToCartComponent.html",[0,0.15,3,0.021,4,0.019,5,0.019,8,0.087,9,0.376,13,0.637,15,0.334,16,0.005,18,0.373,26,0.021,27,0.001,28,0.002,29,0.001,34,0.97,39,0.285,51,1.066,52,0.911,53,1.484,54,0.936,55,0.949,56,0.949,57,0.949,61,1.354,62,1.87,63,0.899,64,3.002,65,3.331,66,2.584,68,1.505,70,1.505,73,0.964,76,2.128,78,3.013,80,0.272,84,0.735,85,0.718,93,1.487,94,2.086,101,0.567,102,1.104,104,3.989,105,0.464,118,1.704,122,3.41,125,0.744,126,1.505,127,1.484,128,0.949,129,2.128,130,0.949,131,0.949,132,2.044,133,1.505,134,0.911,135,0.949,136,0.911,137,0.949,138,0.899,139,1.732,140,2.832,141,0.911,142,1.65,143,2.128,144,0.899,145,0.911,146,0.949,147,0.911,148,1.505,149,0.899,150,0.936,151,0.911,152,0.744,153,0.949,154,0.899,155,0.949,156,0.899,157,0.949,158,0.911,159,0.949,160,0.911,161,0.949,162,0.911,163,0.949,164,0.949,165,0.899,166,0.843,167,0.911,168,0.949,169,0.911,170,0.949,171,0.911,172,0.812,173,0.949,174,0.911,175,0.949,176,0.911,177,0.949,178,0.911,179,1.303,180,0.899,181,0.911,182,0.949,183,0.911,184,0.854,185,0.911,186,1.844,187,0.899,188,0.911,189,0.949,190,0.911,191,0.744,192,0.949,193,0.911,194,0.936,195,0.949,196,0.911,197,0.949,198,0.911,199,0.949,200,0.899,201,0.812,202,0.911,203,0.949,204,1.408,205,0.949,206,0.911,207,0.949,208,0.911,209,0.911,210,0.911,211,1.32,212,0.899,213,0.911,214,1.072,215,0.949,216,0.899,217,0.911,218,0.949,219,0.911,220,0.911,221,0.735,222,0.949,223,0.949,224,3.802,227,1.403,229,3.064,231,0.799,237,2.415,238,1.292,250,1.519,254,0.567,268,2.985,271,8.975,272,8.066,273,2.603,274,5.13,275,4.128,276,3.22,277,2.946,278,3.396,279,4.593,280,5.13,281,5.838,282,1.778,283,3.179,284,2.851,285,4.128,286,2.896,287,2.896,288,4.593,289,5.708,290,2.896,291,2.896,292,2.603,293,2.896,294,2.603,295,2.15,296,3.406,297,2.603,298,3.064,299,1.247,300,2.591,301,2.126,302,2.603,303,2.896,304,1.519,305,2.265,306,1.112,307,2.896,308,1.205,309,1.453,310,1.568,311,2.15,312,1.519,313,2.265,314,2.41,315,2.603,316,1.519,317,2.41,318,1.079,319,2.603,320,2.804,321,2.603,322,2.603,323,2.603,324,1.247,325,5.708,326,2.896,327,4.593,328,2.896,329,2.896,330,5.708,331,2.526,332,1.485,333,2.896,334,2.896,335,2.896,336,1.485,337,3.821,338,2.603,339,2.896,340,1.972,341,3.618,342,1.726,343,1.726,344,1.836,345,3.127,346,3.257,347,4.128,348,3.592,349,4.128,350,2.603,351,4.593,352,3.41,353,4.128,354,2.265,355,2.265,356,2.265,357,2.265,358,4.464,359,2.603,360,4.128,361,3.821,362,2.41,363,4.128,364,2.265,365,2.15,366,2.265,367,2.603,368,2.603,369,2.603,370,2.603]],["title/components/AppComponent.html",[51,0.946,134,1.593]],["body/components/AppComponent.html",[0,0.173,3,0.025,4,0.022,5,0.022,8,0.1,9,0.421,13,0.613,15,0.32,16,0.005,18,0.352,20,0.337,26,0.025,27,0.001,28,0.002,29,0.001,34,1.062,39,0.29,51,1.168,52,1.05,53,1.659,54,1.079,55,1.094,56,1.094,57,1.094,61,1.513,62,2.048,63,1.037,64,3.034,65,3.366,66,1.456,68,1.681,70,1.681,73,1.078,76,2.299,80,0.314,84,0.535,85,0.522,93,0.701,94,1.42,101,1.224,102,1.209,103,2.521,105,0.535,125,0.858,126,1.681,127,1.659,128,1.094,129,2.299,130,1.094,131,1.094,132,1.05,133,1.681,134,2.208,135,1.094,136,1.05,137,1.094,138,1.037,139,0.669,140,2.948,141,1.05,142,1.782,143,2.299,144,1.037,145,1.05,146,1.094,147,1.05,148,1.681,149,1.037,150,1.079,151,1.05,152,0.858,153,1.094,154,1.037,155,1.094,156,1.037,157,1.094,158,1.05,159,1.094,160,1.05,161,1.094,162,1.05,163,1.094,164,1.094,165,1.037,166,0.972,167,1.05,168,1.094,169,1.05,170,1.094,171,1.05,172,0.936,173,1.094,174,1.05,175,1.094,176,1.05,177,1.094,178,1.05,179,1.456,180,1.037,181,1.05,182,1.094,183,1.05,184,0.984,185,1.05,186,1.198,187,1.037,188,1.05,189,1.094,190,1.05,191,0.858,192,1.094,193,1.05,194,1.079,195,1.094,196,1.05,197,1.094,198,1.05,199,1.094,200,1.037,201,0.936,202,1.05,203,1.094,204,1.023,205,1.094,206,1.05,207,1.094,208,1.05,209,1.05,210,1.05,211,1.475,212,1.037,213,1.05,214,1.198,215,1.094,216,1.037,217,1.05,218,1.094,219,1.05,220,1.05,221,0.848,222,1.094,223,1.094,227,1.813,254,0.653,277,2.919,278,3.623,283,3.352,284,3.048,301,2.376,306,1.282,308,1.389,310,1.14,318,2.82,371,3.339,372,2.521,373,6.252,374,5.133,375,6.252,376,6.252,377,3.963,378,2.368,379,7.485,380,5.463,381,3.714,382,4.981,383,5.133,384,3.339,385,5.133,386,3.339,387,3.339,388,3.339,389,3.339,390,6.301,391,1.412,392,3.339,393,1.517,394,1.836,395,1.884,396,3.001,397,1.575,398,1.156,399,1.884,400,2.778,401,2.611,402,2.478,403,3.339,404,3.339,405,2.778,406,3.339,407,5.133,408,3.339,409,3.339,410,3.339,411,3.339,412,3.339,413,3.339,414,3.001,415,4.613,416,4.27,417,3.253,418,4.27,419,4.613,420,6.252,421,2.896,422,5.619,423,3.001,424,5.133]],["title/modules/AppModule.html",[425,1.681,426,3.96]],["body/modules/AppModule.html",[0,0.205,3,0.029,4,0.026,5,0.026,16,0.005,26,0.029,27,0.002,28,0.002,29,0.002,39,0.346,65,1.263,105,0.634,125,1.018,134,3.034,136,2.684,138,2.649,142,1.483,144,2.649,149,2.649,154,2.649,156,2.649,165,2.649,180,2.649,183,2.684,187,2.649,191,1.018,200,2.649,209,1.247,212,2.649,216,2.649,301,2.702,306,1.521,310,1.353,379,5.247,399,3.294,400,3.297,401,3.099,425,1.316,426,8.34,427,1.676,428,1.87,429,3.149,430,3.271,431,3.406,432,1.767,433,3.561,434,3.561,435,3.561,436,3.561,437,3.561,438,6.861,439,4.191,440,6.051,441,6.673,442,6.673,443,2.755,444,1.907,445,3.963,446,2.652,447,2.604,448,3.963,449,3.963,450,6.933,451,5.247,452,3.963,453,2.127,454,2.127,455,6.933,456,5.839,457,1.988,458,3.561,459,3.963,460,4.334,461,3.963,462,3.561,463,3.963,464,3.561,465,5.247,466,3.963,467,3.561,468,3.963,469,3.963,470,3.963,471,3.561,472,3.561,473,3.561,474,3.099,475,8.447,476,3.561,477,3.099,478,3.561,479,3.099,480,3.297,481,2.941,482,3.561,483,3.099,484,3.561,485,3.099,486,3.963,487,3.297,488,3.561,489,3.099,490,3.963,491,3.963,492,3.561,493,3.099,494,5.839,495,3.099,496,3.561,497,3.297,498,3.561,499,3.561,500,5.839,501,1.834,502,3.561,503,3.099,504,3.963,505,3.297,506,3.297,507,3.963,508,3.963,509,5.839,510,3.963,511,3.099,512,1.595,513,3.963,514,3.963,515,3.963,516,3.963,517,3.963,518,4.334,519,5.839,520,5.839]],["title/classes/AppPage.html",[0,0.262,521,4.55]],["body/classes/AppPage.html",[0,0.375,2,1.068,3,0.054,4,0.047,5,0.047,8,0.217,16,0.005,18,0.371,26,0.054,27,0.003,28,0.004,29,0.003,39,0.239,73,1.842,93,1.842,118,2.619,127,2.345,372,3.564,495,5.675,521,7.884,522,7.256,523,9.796,524,9.796,525,7.256,526,10.193,527,7.256,528,6.521,529,7.256,530,7.256,531,3.72,532,7.256]],["title/modules/AppRoutingModule.html",[425,1.681,438,3.758]],["body/modules/AppRoutingModule.html",[0,0.215,3,0.031,4,0.027,5,0.027,16,0.005,26,0.031,27,0.002,28,0.003,29,0.002,39,0.326,51,1.798,105,0.666,138,1.878,142,1.988,144,1.878,149,1.878,154,1.878,156,1.878,165,1.878,180,1.878,187,1.878,200,1.878,212,1.878,216,1.878,324,1.79,398,1.44,427,1.759,432,1.854,438,4.49,446,1.889,447,2.697,458,3.737,462,3.737,473,3.737,474,4.731,475,8.409,476,3.737,477,4.731,478,3.737,479,4.731,480,3.459,481,4.49,482,3.737,483,4.731,484,3.737,485,4.731,488,3.737,489,4.731,492,3.737,493,4.731,502,3.737,503,4.731,533,4.158,534,4.158,535,5.575,536,3.327,537,6.512,538,4.158,539,4.158,540,9.344,541,6.049,542,5.032,543,4.158,544,3.459,545,9.631,546,9.738,547,4.158,548,4.158,549,6.407,550,4.158,551,4.158,552,4.158,553,4.158,554,4.158,555,4.158,556,4.158,557,4.158,558,4.158,559,4.158,560,7.129,561,4.158,562,4.158,563,4.158,564,4.158,565,4.158,566,4.158,567,4.158,568,4.158,569,4.158,570,4.158,571,4.158,572,4.158,573,4.158,574,4.158,575,4.158,576,4.158,577,2.287,578,4.158,579,4.158,580,4.158]],["title/components/AuthComponent.html",[51,0.946,136,1.593]],["body/components/AuthComponent.html",[0,0.217,3,0.031,4,0.027,5,0.027,8,0.126,9,0.499,13,0.703,15,0.303,16,0.004,18,0.332,26,0.031,27,0.002,28,0.003,29,0.002,34,1.219,39,0.236,51,1.339,52,1.322,53,1.969,54,1.357,55,1.376,56,1.376,57,1.376,61,1.796,62,2.349,63,1.304,64,3.077,65,3.414,66,1.729,68,1.996,70,1.996,73,1.279,76,2.576,80,0.395,84,0.673,85,0.657,93,0.882,94,1.162,105,0.673,125,1.08,126,1.996,127,1.969,128,1.376,129,2.576,130,1.376,131,1.376,132,1.322,133,1.996,134,1.322,135,1.376,136,2.475,137,1.376,138,1.304,139,0.842,140,3.121,141,1.322,142,1.997,143,2.576,144,1.304,145,1.322,146,1.376,147,1.322,148,1.996,149,1.304,150,1.357,151,1.322,152,1.08,153,1.376,154,1.304,155,1.376,156,1.304,157,1.376,158,1.322,159,1.376,160,1.322,161,1.376,162,1.322,163,1.376,164,1.376,165,1.304,166,1.223,167,1.322,168,1.376,169,1.322,170,1.376,171,1.322,172,1.177,173,1.376,174,1.322,175,1.376,176,1.322,177,1.376,178,1.322,179,1.729,180,1.304,181,1.322,182,1.376,183,1.322,184,1.238,185,1.322,186,1.423,187,1.304,188,1.322,189,1.376,190,1.322,191,1.08,192,1.376,193,1.322,194,1.357,195,1.376,196,1.322,197,1.376,198,1.322,199,1.376,200,1.304,201,1.177,202,1.322,203,1.376,204,1.287,205,1.376,206,1.322,207,1.376,208,1.322,209,1.322,210,1.322,211,1.751,212,1.304,213,1.322,214,1.423,215,1.376,216,1.304,217,1.322,218,1.376,219,1.322,220,1.322,221,1.067,222,1.376,223,1.376,227,1.654,254,0.822,277,3.272,278,3.835,284,3.361,308,1.747,378,2.979,391,1.777,393,1.908,577,3.351,581,4.201,582,7.171,583,6.094,584,4.201,585,4.201,586,4.201,587,4.201,588,2.756,589,4.321]],["title/classes/AuthCredentialsDto.html",[0,0.262,590,3.018]],["body/classes/AuthCredentialsDto.html",[0,0.379,2,1.079,3,0.054,4,0.048,5,0.048,8,0.219,9,0.723,15,0.4,16,0.004,18,0.4,20,1.031,26,0.054,27,0.003,28,0.004,29,0.003,31,5.04,590,5.26,591,6.036,592,7.33,593,5.084,594,6.212,595,6.447,596,7.33,597,7.33,598,7.33]],["title/modules/AuthModule.html",[425,1.681,599,3.96]],["body/modules/AuthModule.html",[0,0.338,3,0.048,4,0.043,5,0.043,16,0.004,26,0.048,27,0.003,28,0.004,29,0.003,39,0.336,105,1.045,125,1.678,169,3.125,188,3.125,190,3.125,191,1.678,398,2.26,425,2.168,427,2.762,428,3.08,429,4.086,430,3.08,431,3.207,432,2.911,439,4.88,443,3.878,444,3.142,446,3.733,447,3.665,453,3.504,454,3.504,501,3.021,536,3.59,577,3.59,599,8.196,600,5.867,601,6.528,602,5.867,603,6.528,604,3.956,605,6.528,606,3.783,607,6.528,608,6.528,609,6.528,610,5.867,611,6.528,612,6.528]],["title/injectables/AuthService.html",[380,3.321,613,1.419]],["body/injectables/AuthService.html",[0,0.245,3,0.035,4,0.031,5,0.031,8,0.142,13,0.947,15,0.408,16,0.005,18,0.408,20,1.027,26,0.035,27,0.002,28,0.003,29,0.002,39,0.313,73,1.395,80,0.446,84,1.546,85,1.509,93,1.995,105,0.76,110,1.554,118,2.837,172,1.862,227,1.796,240,1.909,324,3.301,372,2.33,380,4.359,397,2.238,457,2.38,590,5.893,591,2.913,593,4.117,595,3.229,613,1.862,614,2.007,615,4.744,616,5.972,617,5.972,618,3.567,619,5.528,620,5.972,621,3.749,622,5.972,623,2.827,624,4.571,625,4.744,626,3.96,627,6.645,628,4.744,629,4.857,630,6.645,631,4.744,632,6.645,633,4.744,634,6.645,635,4.744,636,6.645,637,4.744,638,5.197,639,6.645,640,4.744,641,6.645,642,4.744,643,6.645,644,4.744,645,2.238,646,3.71,647,4.263,648,3.947,649,2.546,650,2.609,651,2.609,652,2.546,653,2.676,654,3.007,655,3.947,656,4.263,657,4.744,658,2.432,659,4.744,660,4.744,661,4.744,662,6.893,663,4.744,664,7.67,665,4.744,666,2.155,667,4.744,668,4.744,669,4.744]],["title/injectables/AuthState.html",[613,1.419,670,3.591]],["body/injectables/AuthState.html",[0,0.176,3,0.025,4,0.022,5,0.022,8,0.102,13,0.926,15,0.394,16,0.005,18,0.394,20,0.812,26,0.025,27,0.003,28,0.002,29,0.001,33,5.318,34,1.536,39,0.276,64,2.642,73,1.091,80,0.319,84,1.494,85,1.458,93,1.931,94,1.959,105,0.543,110,1.112,118,2.501,172,2.255,225,1.96,231,1.676,283,3.372,299,3.957,306,1.303,310,2.86,318,1.264,324,2.237,380,5.28,382,1.967,394,4.427,402,2.52,577,2.859,595,3.538,613,1.456,614,1.436,618,3.799,621,4.541,645,4.18,646,4.94,647,3.05,648,2.824,652,3.39,653,1.915,666,4.106,670,3.686,671,3.394,672,4.671,673,4.671,674,4.797,675,4.797,676,2.824,677,3.394,678,5.198,679,5.965,680,3.394,681,3.538,682,5.198,683,6.084,684,5.198,685,3.394,686,4.942,687,5.198,688,5.198,689,3.394,690,5.198,691,5.198,692,3.394,693,5.198,694,5.198,695,3.394,696,5.198,697,5.198,698,3.394,699,7.078,700,3.394,701,3.394,702,5.198,703,5.198,704,3.394,705,5.198,706,3.394,707,5.198,708,3.394,709,2.023,710,1.915,711,2.084,712,6.317,713,3.394,714,3.394,715,3.394,716,4.671,717,3.878,718,5.198,719,5.198,720,3.394,721,4.324,722,5.198,723,3.394,724,3.394,725,5.255,726,3.394,727,3.05,728,3.394]],["title/interfaces/AuthStateModel.html",[244,1.014,679,3.109]],["body/interfaces/AuthStateModel.html",[0,0.506,3,0.043,4,0.037,5,0.037,8,0.172,9,0.62,15,0.425,16,0.005,20,0.908,22,1.127,26,0.074,27,0.002,28,0.003,29,0.002,34,1.708,39,0.249,124,2.171,139,1.151,172,2.12,221,1.458,225,1.192,228,2.171,231,1.703,232,2.285,240,1.65,244,1.151,254,1.879,257,2.62,394,4.162,395,3.24,577,5.383,590,4.51,591,3.526,618,4.062,621,3.24,645,4.53,652,5.018,653,3.24,654,3.64,674,3.422,675,3.422,679,4.646,729,3.24,730,3.767,731,3.571,732,3.526,733,3.502,734,3.64]],["title/classes/BillingAddress.html",[0,0.262,735,3.758]],["body/classes/BillingAddress.html",[0,0.333,2,0.948,3,0.048,4,0.042,5,0.042,8,0.193,9,0.668,15,0.434,16,0.004,18,0.434,20,1.071,26,0.048,27,0.003,28,0.003,29,0.003,115,6.635,593,4.798,735,6.048,736,10.344,737,6.44,738,8.033,739,8.033,740,6.339,741,8.033,742,6.339,743,8.033,744,8.033,745,6.44,746,6.44,747,6.44,748,6.44,749,6.44,750,6.44,751,6.44,752,6.44,753,6.44]],["title/classes/CancelOrder.html",[0,0.262,754,3.109]],["body/classes/CancelOrder.html",[0,0.492,2,0.817,3,0.041,4,0.036,5,0.036,8,0.166,9,0.606,12,2.294,13,0.545,15,0.43,16,0.005,18,0.352,20,0.56,22,1.416,26,0.073,27,0.002,28,0.003,29,0.002,34,0.944,39,0.244,80,0.782,84,0.889,85,0.868,101,1.087,102,1.074,179,2.923,225,1.842,227,1.648,231,1.716,232,2.303,240,1.596,244,1.113,249,1.445,252,1.925,254,1.737,257,1.923,270,1.445,512,2.235,754,4.544,755,3.78,756,3.52,757,7.401,758,5.553,759,4.854,760,4.365,761,3.133,762,3.492,763,2.728,764,3.52,765,4.268,766,3.218,767,3.31,768,3.643,769,3.41,770,3.78,771,3.41,772,2.786,773,3.41]],["title/components/CartLayoutComponent.html",[51,0.946,138,1.572]],["body/components/CartLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,2.497,139,1.868,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,479,5.762,774,6.621,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794]],["title/modules/CartLayoutModule.html",[425,1.681,781,3.96]],["body/modules/CartLayoutModule.html",[0,0.335,3,0.048,4,0.042,5,0.042,16,0.004,26,0.048,27,0.003,28,0.003,29,0.003,39,0.335,105,1.036,125,1.663,139,1.296,147,3.118,191,1.663,219,3.118,398,2.24,425,2.148,427,2.737,428,3.052,429,4.069,430,3.052,431,3.178,432,2.885,439,4.868,440,7.028,443,3.856,444,3.114,446,3.712,447,3.644,453,3.472,454,3.472,479,5.059,496,5.814,497,5.382,498,5.814,501,2.994,536,3.558,604,3.933,606,3.748,774,5.814,781,8.186,782,5.814,783,6.469,784,5.814,785,3.972,786,6.469,787,5.814,788,5.814,789,6.469,790,6.469,791,6.469]],["title/classes/CartModel.html",[0,0.262,792,2.487]],["body/classes/CartModel.html",[0,0.383,2,1.09,3,0.055,4,0.048,5,0.048,8,0.222,9,0.728,12,2.248,15,0.402,16,0.004,18,0.402,22,1.469,26,0.055,27,0.003,28,0.004,29,0.003,39,0.244,139,1.484,792,4.363,793,7.406,794,5.367,795,9.513,796,7.44,797,7.406,798,7.406,799,7.406,800,6.656]],["title/classes/CartProductModel.html",[0,0.262,796,3.96]],["body/classes/CartProductModel.html",[0,0.33,2,0.937,3,0.047,4,0.042,5,0.042,8,0.191,9,0.663,12,2.101,13,0.872,15,0.433,16,0.004,18,0.433,20,0.944,22,1.556,26,0.047,27,0.003,28,0.003,29,0.003,39,0.21,139,1.782,228,3.362,230,4.559,268,3.522,792,4.368,796,6.328,801,10.325,802,6.368,803,4.773,804,8.893,805,8.893,806,6.368,807,6.368,808,6.368,809,6.368,810,6.368,811,6.368,812,6.368,813,6.368,814,6.368,815,6.368]],["title/injectables/CartService.html",[613,1.419,816,3.96]],["body/injectables/CartService.html",[0,0.236,3,0.034,4,0.03,5,0.03,8,0.137,13,0.879,15,0.41,16,0.005,18,0.404,22,1.53,26,0.034,27,0.002,28,0.003,29,0.002,34,0.777,39,0.303,73,1.359,80,0.429,84,1.435,85,1.401,93,1.976,103,2.245,105,0.732,110,1.497,118,2.858,124,1.728,139,1.846,186,1.511,228,2.447,234,4.872,253,1.497,316,4.286,372,2.245,397,2.156,457,2.292,613,1.814,614,1.933,623,2.723,624,4.496,626,3.857,629,4.909,649,2.453,650,2.513,651,2.513,658,2.343,666,2.94,731,4.228,792,2.245,794,2.578,816,5.062,817,4.57,818,3.474,819,3.56,820,8.174,821,8.174,822,6.473,823,3.56,824,3.474,825,4.57,826,6.473,827,4.57,828,6.473,829,4.57,830,5.197,831,4.57,832,4.57,833,4.57,834,6.473,835,4.57,836,6.473,837,4.57,838,6.473,839,6.473,840,4.355,841,4.57,842,5.062,843,2.396,844,3.56,845,2.648,846,2.648,847,3.574,848,4.107,849,4.57,850,4.57,851,2.453,852,2.578,853,4.804,854,6.473,855,2.648,856,4.57,857,4.57,858,5.579,859,4.57,860,4.57,861,4.57,862,4.57,863,4.57,864,4.57,865,4.57,866,4.57,867,4.57,868,2.997]],["title/injectables/CartState.html",[613,1.419,869,3.96]],["body/injectables/CartState.html",[0,0.151,3,0.022,4,0.019,5,0.019,8,0.087,13,0.906,15,0.385,16,0.005,18,0.385,26,0.022,27,0.003,28,0.002,29,0.001,33,5.459,39,0.331,64,1.647,73,0.969,80,0.274,84,1.461,85,1.426,93,1.887,94,1.586,105,0.467,110,0.955,118,2.586,124,1.102,139,1.89,166,0.848,179,0.827,184,0.859,225,1.917,231,0.997,283,3.187,299,3.803,306,1.119,309,1.462,310,1.956,312,3.962,313,2.279,316,3.962,317,2.424,318,1.085,320,3.49,324,2.466,382,1.689,613,1.293,614,1.233,666,2.096,670,2.067,674,1.737,683,6.245,686,5.318,709,1.737,710,1.644,711,1.789,716,4.148,717,4.002,725,5.91,766,1.689,771,1.789,792,3.889,816,5.91,818,4.056,819,4.156,823,4.156,824,4.056,843,1.528,847,5.91,848,2.619,869,3.61,870,2.914,871,4.616,872,4.616,873,4.263,874,4.156,875,4.156,876,2.914,877,2.914,878,4.616,879,3.585,880,4.616,881,2.914,882,4.616,883,2.914,884,4.616,885,3.677,886,2.914,887,4.616,888,4.616,889,2.914,890,4.616,891,4.616,892,2.914,893,4.616,894,4.616,895,2.914,896,4.616,897,4.616,898,2.914,899,4.616,900,4.616,901,2.914,902,4.616,903,4.616,904,2.914,905,4.616,906,4.616,907,2.914,908,4.616,909,4.616,910,2.914,911,4.616,912,4.616,913,2.914,914,2.914,915,2.619,916,2.619,917,2.914,918,2.619,919,2.914,920,2.914,921,2.424,922,2.067,923,2.067,924,1.737,925,2.914,926,1.911,927,2.619,928,2.914,929,2.619,930,1.789,931,2.914,932,1.847,933,2.619,934,2.914,935,1.789,936,2.619,937,2.619,938,2.619,939,2.619,940,2.914,941,2.914,942,6.791,943,2.914,944,2.914,945,2.914,946,2.067,947,2.914,948,2.914,949,2.914,950,2.914,951,2.914,952,2.914,953,2.914,954,1.847,955,4.616,956,2.914,957,2.619,958,2.914,959,2.914,960,2.914,961,2.914,962,2.914,963,2.914]],["title/interfaces/CartStateModel.html",[244,1.014,885,2.857]],["body/interfaces/CartStateModel.html",[0,0.509,3,0.036,4,0.032,5,0.032,8,0.147,9,0.557,15,0.42,16,0.005,22,1.364,26,0.074,27,0.002,28,0.003,29,0.002,34,1.155,39,0.278,80,0.791,120,3.833,139,2.115,152,1.259,186,1.822,225,1.016,227,1.669,228,2.569,231,1.713,232,2.299,240,1.952,244,0.981,249,1.274,252,1.274,253,1.604,254,1.793,257,2.353,268,1.94,270,1.768,309,2.457,310,1.672,312,2.568,316,2.568,512,1.971,531,2.511,729,2.763,731,3.682,762,3.682,763,2.406,792,4.348,794,2.763,818,2.629,819,2.694,823,2.694,824,2.629,830,4.402,840,2.838,843,2.568,844,3.737,845,2.838,846,2.838,851,4.751,852,3.833,855,2.838,873,2.763,874,2.694,875,2.694,879,2.694,885,3.833,964,2.919,965,2.184,966,2.838,967,3.563]],["title/components/CategoryDetailsComponent.html",[51,0.946,141,1.593]],["body/components/CategoryDetailsComponent.html",[0,0.194,3,0.028,4,0.024,5,0.024,8,0.112,9,0.459,12,1.586,13,0.658,15,0.315,16,0.004,18,0.337,26,0.028,27,0.002,28,0.002,29,0.002,34,1.14,39,0.263,51,1.253,52,1.18,53,1.811,54,1.212,55,1.228,56,1.228,57,1.228,61,1.652,62,2.198,63,1.164,64,3.057,65,3.392,66,1.59,68,1.836,70,1.836,73,1.177,76,2.439,80,0.352,84,0.6,85,0.586,93,0.787,94,1.551,105,0.6,110,1.228,125,0.964,126,1.836,127,1.811,128,1.228,129,2.439,130,1.228,131,1.228,132,1.18,133,1.836,134,1.18,135,1.228,136,1.18,137,1.228,138,1.164,139,0.751,140,3.038,141,2.343,142,2.553,143,2.439,144,1.164,145,1.18,146,1.228,147,1.18,148,1.836,149,1.164,150,1.212,151,1.18,152,0.964,153,1.228,154,1.164,155,1.228,156,1.164,157,1.228,158,1.18,159,1.228,160,1.18,161,1.228,162,1.18,163,1.228,164,1.228,165,1.164,166,1.091,167,1.18,168,1.228,169,1.18,170,1.228,171,1.18,172,1.051,173,1.228,174,1.18,175,1.228,176,1.18,177,1.228,178,1.18,179,1.59,180,1.164,181,1.18,182,1.228,183,1.18,184,1.105,185,1.18,186,1.309,187,1.164,188,1.18,189,1.228,190,1.18,191,0.964,192,1.228,193,1.18,194,1.212,195,1.228,196,1.18,197,1.228,198,1.18,199,1.228,200,1.164,201,1.051,202,1.18,203,1.228,204,1.149,205,1.228,206,1.18,207,1.228,208,1.18,209,1.18,210,1.18,211,1.61,212,1.164,213,1.18,214,1.309,215,1.228,216,1.164,217,1.18,218,1.228,219,1.18,220,1.18,221,0.952,222,1.228,223,1.228,227,1.656,277,3.315,278,3.733,284,3.208,308,1.56,318,1.396,324,2.412,381,3.729,391,1.586,393,1.703,398,1.298,968,8.362,969,7.515,970,2.933,971,3.975,972,5.249,973,4.383,974,3.12,975,4.254,976,4.884,977,5.605,978,3.75,979,3.786,980,3.12,981,3.75,982,3.676,983,2.235,984,2.933,985,3.37,986,3.37,987,3.37,988,3.12,989,3.75,990,3.12,991,3.441,992,3.975]],["title/classes/CategoryDto.html",[0,0.262,993,4.212]],["body/classes/CategoryDto.html",[0,0.459,2,1.087,3,0.055,4,0.048,5,0.048,8,0.221,9,0.727,11,5.71,13,0.967,15,0.375,16,0.004,18,0.375,20,1.033,22,1.1,26,0.066,27,0.003,28,0.004,29,0.003,31,4.872,993,7.377,994,6.638,995,7.387,996,7.387,997,5.777,998,5.483]],["title/components/CategoryLayoutComponent.html",[51,0.946,144,1.572]],["body/components/CategoryLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.475,143,2.634,144,2.497,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,503,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,999,6.621]],["title/modules/CategoryLayoutModule.html",[425,1.681,1000,3.96]],["body/modules/CategoryLayoutModule.html",[0,0.354,3,0.051,4,0.045,5,0.045,16,0.004,26,0.051,27,0.003,28,0.004,29,0.003,39,0.331,105,1.095,125,1.758,141,3.162,142,1.737,191,1.758,398,2.368,425,2.271,427,2.893,428,3.227,429,4.173,430,3.227,431,3.36,432,3.05,439,4.937,443,3.993,444,3.292,446,3.843,447,3.773,453,3.671,454,3.671,501,3.166,503,5.349,536,3.762,604,4.072,606,3.963,785,4.2,969,6.147,999,6.147,1000,8.049,1001,6.147,1002,6.147,1003,6.84,1004,6.84,1005,6.84,1006,5.349,1007,6.84]],["title/classes/CategoryModel.html",[0,0.262,979,2.857]],["body/classes/CategoryModel.html",[0,0.351,1,8.038,2,0.999,3,0.05,4,0.044,5,0.044,8,0.203,9,0.69,10,5.735,11,4.881,12,1.99,13,0.826,14,5.735,15,0.424,16,0.004,17,4.522,18,0.424,20,0.85,22,1.011,26,0.05,27,0.003,28,0.004,29,0.003,39,0.278,142,1.724,211,1.951,979,4.753,1008,6.791,1009,6.588,1010,4.802,1011,4.594,1012,6.791,1013,7.699,1014,6.103,1015,6.103,1016,6.103,1017,6.103,1018,6.103,1019,6.103,1020,3.561]],["title/pipes/CategoryPipe.html",[1021,3.109,1022,3.96]],["body/pipes/CategoryPipe.html",[0,0.363,3,0.052,4,0.046,5,0.046,13,0.911,15,0.296,16,0.005,18,0.296,20,0.937,26,0.052,27,0.003,28,0.004,29,0.003,39,0.283,61,2.065,63,2.176,73,1.471,84,1.122,85,1.095,93,1.471,105,1.122,118,2.564,296,3.674,979,5.703,983,4.176,1021,5.273,1022,6.717,1023,5.201,1024,7.007,1025,8.588,1026,5.48,1027,8.588,1028,7.186,1029,7.007,1030,4.382,1031,6.717,1032,7.007,1033,6.297]],["title/injectables/CategoryService.html",[613,1.419,1034,3.758]],["body/injectables/CategoryService.html",[0,0.343,3,0.049,4,0.043,5,0.043,8,0.199,13,0.814,15,0.351,16,0.005,18,0.383,20,0.914,26,0.049,27,0.003,28,0.004,29,0.003,39,0.322,73,1.743,80,0.623,84,1.329,85,1.298,93,1.743,105,1.062,110,2.173,118,2.479,372,3.259,397,3.13,457,3.328,613,2.326,614,2.806,623,3.954,624,5.223,626,4.948,629,4.803,649,3.561,650,3.649,651,3.649,658,3.401,979,3.743,983,3.954,1034,6.162,1035,6.634,1036,9.496,1037,6.907,1038,6.634,1039,6.634,1040,6.907,1041,6.634,1042,5.519,1043,6.634,1044,5.519,1045,6.634,1046,5.519]],["title/injectables/CategoryState.html",[613,1.419,1047,3.96]],["body/injectables/CategoryState.html",[0,0.281,3,0.04,4,0.035,5,0.035,8,0.162,13,0.9,15,0.372,16,0.005,18,0.372,26,0.04,27,0.002,28,0.003,29,0.002,33,5.181,39,0.323,64,2.364,73,1.53,80,0.51,84,1.408,85,1.375,93,1.728,94,1.502,105,0.869,110,1.778,118,2.176,225,1.904,231,1.432,283,3.885,299,3.541,306,2.083,310,2.809,318,2.021,613,2.042,614,2.296,666,3.31,683,5.926,686,4.475,709,3.234,710,3.062,711,3.332,717,4.475,979,4.112,983,3.234,1030,4.458,1034,7.013,1047,5.7,1048,5.427,1049,7.288,1050,6.431,1051,5.427,1052,5.427,1053,7.288,1054,6.237,1055,5.427,1056,7.288,1057,6.237,1058,7.288,1059,5.427,1060,7.288,1061,7.288,1062,5.427,1063,3.849,1064,4.244,1065,4.515,1066,4.877,1067,5.427,1068,5.427,1069,5.427,1070,5.427]],["title/interfaces/CategoryStateModel.html",[244,1.014,1054,3.591]],["body/interfaces/CategoryStateModel.html",[0,0.474,3,0.05,4,0.044,5,0.044,8,0.203,9,0.69,12,1.99,15,0.404,16,0.005,22,1.011,26,0.073,27,0.003,28,0.004,29,0.003,39,0.224,80,0.791,142,2.5,225,1.409,231,1.594,232,2.138,244,1.361,249,1.767,252,2.192,254,1.329,270,1.767,729,3.831,979,5.402,983,4.047,1030,4.645,1050,4.623,1054,5.974,1057,4.816,1063,4.816,1071,5.311,1072,5.041]],["title/classes/ChangeProfileImage.html",[0,0.262,1073,2.934]],["body/classes/ChangeProfileImage.html",[0,0.495,2,0.769,3,0.039,4,0.034,5,0.034,8,0.157,9,0.582,13,0.513,15,0.431,16,0.005,18,0.366,20,0.943,26,0.073,27,0.002,28,0.003,29,0.002,34,1.208,39,0.234,80,0.814,84,0.837,85,0.817,101,1.023,102,1.011,124,1.977,152,1.344,221,2.642,225,1.88,227,1.85,231,1.716,232,2.303,240,1.502,244,1.048,249,1.36,252,1.36,254,1.695,270,1.36,733,2.42,803,4.65,965,2.332,1073,4.118,1074,3.43,1075,5.742,1076,5.738,1077,4.699,1078,7.107,1079,7.107,1080,4.236,1081,4.009,1082,3.116,1083,5.163,1084,3.314,1085,3.211,1086,3.03,1087,2.95,1088,3.116,1089,3.116,1090,3.314,1091,3.314,1092,3.03,1093,3.116,1094,3.43,1095,3.116]],["title/components/ChatbotComponent.html",[51,0.946,145,1.593]],["body/components/ChatbotComponent.html",[0,0.192,3,0.027,4,0.024,5,0.024,8,0.111,9,0.455,13,0.545,15,0.313,16,0.005,18,0.365,20,0.747,26,0.027,27,0.002,28,0.002,29,0.002,34,1.348,39,0.22,51,1.245,52,1.166,53,1.795,54,1.198,55,1.214,56,1.214,57,1.214,61,1.638,62,2.183,63,1.151,64,3.054,65,3.389,66,1.576,68,1.82,70,1.82,73,1.167,76,2.425,80,0.626,93,1.167,94,1.844,101,1.304,102,1.289,103,1.821,105,0.593,124,1.401,125,0.953,126,1.82,127,1.795,128,1.214,129,2.598,130,1.214,131,1.214,132,1.166,133,1.82,134,1.166,135,1.214,136,1.166,137,1.214,138,1.151,139,0.743,140,3.029,141,1.166,142,1.88,143,2.425,144,1.151,145,2.329,146,1.214,147,1.166,148,1.82,149,1.151,150,1.198,151,1.166,152,0.953,153,1.214,154,1.151,155,1.214,156,1.151,157,1.214,158,1.166,159,1.214,160,1.166,161,1.214,162,1.166,163,1.214,164,1.214,165,1.151,166,1.079,167,1.166,168,1.214,169,1.166,170,1.214,171,1.166,172,1.038,173,1.214,174,1.166,175,1.214,176,1.166,177,1.214,178,1.166,179,1.576,180,1.151,181,1.166,182,1.214,183,1.166,184,1.092,185,1.166,186,1.297,187,1.151,188,1.166,189,1.214,190,1.166,191,0.953,192,1.214,193,1.166,194,1.198,195,1.214,196,1.166,197,1.214,198,1.166,199,1.214,200,1.151,201,1.038,202,1.166,203,1.214,204,1.702,205,1.214,206,1.166,207,1.214,208,1.166,209,1.166,210,1.166,211,1.596,212,1.151,213,1.166,214,1.297,215,1.214,216,1.151,217,1.166,218,1.214,219,1.166,220,1.166,221,0.941,222,1.214,223,1.214,261,1.989,283,1.492,377,4.224,648,3.083,858,2.751,1096,3.706,1097,4.622,1098,6.665,1099,5.556,1100,6.665,1101,6.665,1102,4.947,1103,6.665,1104,7.403,1105,5.556,1106,3.706,1107,3.706,1108,7.403,1109,3.706,1110,5.556,1111,3.706,1112,3.706,1113,3.331,1114,3.331,1115,3.706,1116,6.665,1117,5.556,1118,3.331,1119,3.706,1120,3.706,1121,3.706,1122,3.706,1123,2.899,1124,3.706,1125,3.706,1126,3.706,1127,3.706,1128,3.706,1129,3.706,1130,3.706,1131,3.083,1132,3.706,1133,5.556,1134,3.706,1135,4.993,1136,3.706,1137,3.706,1138,3.331,1139,3.706,1140,3.706,1141,3.706,1142,3.706,1143,3.706,1144,3.331]],["title/modules/ChatbotModule.html",[425,1.681,1145,3.96]],["body/modules/ChatbotModule.html",[0,0.359,3,0.051,4,0.045,5,0.045,16,0.005,26,0.051,27,0.003,28,0.004,29,0.003,39,0.318,105,1.111,125,1.784,145,3.173,191,1.784,425,2.304,427,2.936,428,3.274,429,4.2,430,3.274,431,3.409,432,3.095,443,4.028,444,3.34,446,3.152,447,3.807,501,3.212,604,4.109,1097,8.39,1144,6.236,1145,8.07,1146,6.236,1147,6.236,1148,6.939,1149,5.427,1150,6.939,1151,6.939,1152,6.939]],["title/interceptors/CheckConnectionInterceptor.html",[1153,4.212,1154,4.55]],["body/interceptors/CheckConnectionInterceptor.html",[0,0.305,3,0.044,4,0.038,5,0.038,8,0.177,11,3.416,13,0.755,15,0.325,16,0.005,18,0.325,26,0.044,27,0.003,28,0.003,29,0.003,39,0.311,61,1.738,73,1.617,80,0.554,84,1.233,85,1.204,93,1.238,105,0.944,110,1.931,118,2.56,204,2.785,278,3.892,282,3.62,318,2.196,324,2.538,331,3.243,348,4.611,381,4.393,397,2.782,398,2.042,414,5.299,415,5.299,416,6.405,417,3.737,418,4.905,419,5.299,457,2.958,613,2.157,629,4.211,1154,6.919,1155,4.905,1156,8.573,1157,5.896,1158,6.405,1159,5.896,1160,6.405,1161,7.561,1162,7.132,1163,7.561,1164,5.896,1165,4.905,1166,5.299,1167,6.405,1168,6.919,1169,5.299,1170,5.896,1171,5.896,1172,5.896,1173,5.896,1174,5.896,1175,5.896,1176,4.611,1177,6.919,1178,7.699,1179,5.896,1180,5.896,1181,5.896,1182,5.896,1183,5.299,1184,5.896]],["title/components/CheckoutComponent.html",[51,0.946,147,1.593]],["body/components/CheckoutComponent.html",[0,0.147,3,0.021,4,0.019,5,0.019,8,0.085,9,0.371,13,0.769,15,0.297,16,0.004,18,0.344,20,0.287,22,0.958,26,0.021,27,0.001,28,0.002,29,0.001,34,0.959,39,0.276,51,1.053,52,0.895,53,1.463,54,0.919,55,0.932,56,0.932,57,0.932,61,1.335,62,1.848,63,0.883,64,2.998,65,3.326,66,1.285,68,1.483,70,1.483,73,0.951,76,2.106,79,4.411,80,0.267,81,2.017,82,4.076,84,0.455,85,0.882,86,2.87,89,3.463,93,0.597,94,1.253,101,0.557,102,1.091,103,4.121,105,0.455,106,1.747,107,3.268,108,1.648,110,0.932,112,2.87,114,4.999,115,6.043,118,1.352,121,4.592,122,4.773,123,5.303,125,0.731,126,1.483,127,1.463,128,0.932,129,2.106,130,0.932,131,0.932,132,0.895,133,1.483,134,0.895,135,0.932,136,0.895,137,0.932,138,0.883,139,0.57,140,2.816,141,0.895,142,1.633,143,2.106,144,0.883,145,0.895,146,0.932,147,2.023,148,1.483,149,0.883,150,0.919,151,0.895,152,0.731,153,0.932,154,0.883,155,0.932,156,0.883,157,0.932,158,0.895,159,0.932,160,0.895,161,0.932,162,0.895,163,0.932,164,0.932,165,0.883,166,0.828,167,0.895,168,0.932,169,0.895,170,0.932,171,0.895,172,0.797,173,0.932,174,0.895,175,0.932,176,0.895,177,0.932,178,0.895,179,1.285,180,0.883,181,0.895,182,0.932,183,0.895,184,0.838,185,0.895,186,1.057,187,0.883,188,0.895,189,0.932,190,0.895,191,0.731,192,0.932,193,0.895,194,0.919,195,0.932,196,0.895,197,0.932,198,0.895,199,0.932,200,0.883,201,0.797,202,0.895,203,0.932,204,0.872,205,0.932,206,0.895,207,0.932,208,0.895,209,0.895,210,0.895,211,1.301,212,0.883,213,0.895,214,1.057,215,0.932,216,0.883,217,0.895,218,0.932,219,0.895,220,0.895,221,0.722,222,0.932,223,0.932,227,1.481,231,0.788,242,1.342,276,3.182,277,2.92,278,3.461,284,2.826,298,3.028,299,1.224,300,2.554,301,2.096,304,1.492,308,1.183,318,1.059,324,1.224,331,2.49,381,3.497,391,1.203,393,1.292,398,0.985,399,1.605,518,3.361,544,5.35,593,4.21,738,6.309,739,5.069,740,4.979,741,6.309,742,5.562,743,2.556,744,2.556,967,2.374,971,3.211,1185,2.845,1186,5.069,1187,4.069,1188,5.641,1189,6.72,1190,2.49,1191,4.411,1192,4.528,1193,2.845,1194,2.845,1195,2.845,1196,2.845,1197,2.845,1198,2.225,1199,2.845,1200,2.845,1201,2.845,1202,2.367,1203,2.112,1204,2.225,1205,2.225,1206,2.845,1207,2.845,1208,2.845,1209,1.866,1210,5.711,1211,2.225,1212,2.225,1213,2.845,1214,2.845,1215,2.845,1216,2.845,1217,2.845,1218,4.528,1219,2.845,1220,2.845,1221,2.845,1222,2.845,1223,4.528,1224,2.845,1225,2.845,1226,2.845,1227,2.845,1228,4.069,1229,6.659,1230,5.35,1231,7.478,1232,6.221,1233,4.187,1234,3.541,1235,4.528,1236,4.773,1237,4.773,1238,4.069,1239,4.069,1240,4.069,1241,4.069,1242,4.528,1243,4.069,1244,3.767,1245,3.767,1246,4.528,1247,2.556,1248,4.218,1249,2.845,1250,3.767,1251,1.937,1252,2.845,1253,2.845]],["title/classes/CheckoutOnCart.html",[0,0.262,818,2.718]],["body/classes/CheckoutOnCart.html",[0,0.503,2,0.678,3,0.034,4,0.03,5,0.03,8,0.138,9,0.533,13,0.452,15,0.435,16,0.005,18,0.319,20,0.465,22,1.338,26,0.073,27,0.002,28,0.003,29,0.002,34,1.106,39,0.27,80,0.813,84,0.738,85,0.72,101,0.901,102,0.891,120,3.672,139,2.099,152,1.184,186,1.762,225,1.702,227,1.779,228,2.461,231,1.727,232,2.318,234,4.499,240,1.87,244,0.923,249,1.198,252,1.198,253,1.509,254,1.758,257,2.254,268,1.825,270,1.694,309,2.311,310,1.573,312,2.415,316,2.415,512,1.854,531,2.362,731,4.239,762,3.562,763,2.263,792,3.708,794,2.599,818,3.494,819,2.533,823,2.533,824,2.473,830,4.259,840,2.669,843,2.415,844,3.58,845,2.669,846,2.669,851,4.645,852,3.672,855,2.669,873,2.599,874,2.533,875,2.533,879,2.533,885,2.599,964,2.745,965,2.054,966,2.669,967,3.958,1254,3.603,1255,6.509,1256,4.606]],["title/classes/CheckoutOnSingleProduct.html",[0,0.262,819,2.785]],["body/classes/CheckoutOnSingleProduct.html",[0,0.501,2,0.662,3,0.033,4,0.029,5,0.029,8,0.135,9,0.524,13,0.441,15,0.435,16,0.005,18,0.343,20,0.454,22,1.42,26,0.073,27,0.002,28,0.003,29,0.002,34,1.088,39,0.267,80,0.805,84,0.72,85,0.703,101,0.88,102,0.87,120,3.611,139,2.089,152,1.156,186,1.895,225,1.78,227,1.856,228,2.42,231,1.72,232,2.308,234,4.44,240,1.839,244,0.901,249,1.17,252,1.17,253,1.473,254,1.744,257,2.216,268,1.782,270,1.665,309,2.256,310,1.536,312,2.358,316,2.358,512,1.81,531,2.306,731,4.327,762,3.515,763,2.209,792,3.66,794,2.538,818,2.414,819,3.52,823,2.474,824,2.414,830,5.028,840,2.606,843,2.358,844,3.52,845,2.606,846,2.606,851,4.603,852,3.611,855,3.708,873,2.538,874,2.474,875,2.474,879,2.474,885,2.538,964,2.681,965,2.006,966,2.606,967,3.907,1257,4.498,1258,6.4,1259,4.498,1260,4.498]],["title/interfaces/CheckoutReturnData.html",[244,1.014,847,3.96]],["body/interfaces/CheckoutReturnData.html",[3,0.051,4,0.045,5,0.045,8,0.207,9,0.697,15,0.418,16,0.004,20,0.931,26,0.051,27,0.003,28,0.004,29,0.003,39,0.317,118,2.062,139,1.93,166,2.803,179,2.733,184,2.839,244,1.384,729,3.896,760,5.05,761,3.896,792,4.731,843,3.621,847,6.657,954,6.105,1261,6.906,1262,6.206,1263,5.581,1264,5.581,1265,4.377,1266,4.377]],["title/classes/ClearCartContent.html",[0,0.262,873,2.857]],["body/classes/ClearCartContent.html",[0,0.506,2,0.7,3,0.035,4,0.031,5,0.031,8,0.142,9,0.546,15,0.425,16,0.005,18,0.281,20,0.48,22,1.352,26,0.074,27,0.002,28,0.003,29,0.002,34,1.132,39,0.274,80,0.853,101,0.931,102,0.921,120,3.758,139,2.105,152,1.223,186,1.794,225,1.594,227,1.648,228,2.518,231,1.737,232,2.331,240,1.914,244,0.954,249,1.238,252,1.238,253,1.559,254,1.777,257,2.306,268,1.885,270,1.999,309,2.388,310,1.625,312,2.496,316,2.496,512,1.916,531,3.415,731,3.626,762,3.626,763,2.338,792,3.774,794,2.685,818,2.555,819,2.618,823,2.618,824,2.555,830,4.335,840,2.758,843,2.496,844,3.663,845,2.758,846,2.758,851,4.702,852,3.758,855,2.758,873,3.758,874,2.618,875,2.618,879,2.618,885,2.685,964,2.837,965,2.122,966,2.758,967,3.493,1267,6.661]],["title/classes/ClearCartFromStorage.html",[0,0.262,874,2.785]],["body/classes/ClearCartFromStorage.html",[0,0.506,2,0.7,3,0.035,4,0.031,5,0.031,8,0.142,9,0.546,15,0.425,16,0.005,18,0.281,20,0.48,22,1.352,26,0.074,27,0.002,28,0.003,29,0.002,34,1.132,39,0.274,80,0.853,101,0.931,102,0.921,120,3.758,139,2.105,152,1.223,186,1.794,225,1.594,227,1.648,228,2.518,231,1.737,232,2.331,240,1.914,244,0.954,249,1.238,252,1.238,253,1.559,254,1.777,257,2.306,268,1.885,270,1.999,309,2.388,310,1.625,312,2.496,316,2.496,512,2.681,531,2.44,731,3.626,762,3.626,763,2.338,792,3.774,794,2.685,818,2.555,819,2.618,823,2.618,824,2.555,830,4.335,840,2.758,843,2.496,844,3.663,845,2.758,846,2.758,851,4.702,852,3.758,855,2.758,873,2.685,874,3.663,875,2.618,879,2.618,885,2.685,964,2.837,965,2.122,966,2.758,967,3.493,1268,6.661]],["title/classes/ClearCategory.html",[0,0.262,1057,3.591]],["body/classes/ClearCategory.html",[0,0.466,2,0.963,3,0.048,4,0.043,5,0.043,8,0.196,9,0.674,12,1.945,15,0.42,16,0.005,18,0.348,20,0.66,22,0.974,26,0.072,27,0.003,28,0.004,29,0.003,39,0.216,80,0.887,101,1.281,102,1.266,142,2.562,225,1.869,231,1.694,232,2.273,244,1.311,249,1.702,252,2.141,254,1.281,270,2.141,979,4.643,983,3.899,1030,3.884,1050,4.454,1054,4.64,1057,5.837,1063,4.64,1071,5.117,1072,4.857,1269,8.231]],["title/classes/ClearInvoicesFromStorage.html",[0,0.262,1270,3.321]],["body/classes/ClearInvoicesFromStorage.html",[0,0.481,2,0.921,3,0.046,4,0.041,5,0.041,8,0.187,9,0.655,12,1.89,15,0.422,16,0.005,18,0.338,20,0.631,22,0.932,26,0.073,27,0.003,28,0.003,29,0.003,34,1.063,39,0.206,80,0.873,101,1.225,102,1.21,166,2.943,225,1.83,231,1.71,232,2.294,244,1.254,249,1.628,252,2.081,254,1.566,270,2.081,512,3.22,772,3.139,924,3.729,926,4.104,1263,5.11,1265,3.966,1270,5.248,1271,4.645,1272,8.001,1273,5.386,1274,4.26,1275,3.729,1276,4.437]],["title/classes/ClearOrdersFromStorage.html",[0,0.262,773,3.109]],["body/classes/ClearOrdersFromStorage.html",[0,0.497,2,0.845,3,0.043,4,0.037,5,0.037,8,0.172,9,0.62,12,2.126,15,0.425,16,0.005,18,0.32,20,0.579,22,1.26,26,0.074,27,0.002,28,0.003,29,0.002,34,0.976,39,0.249,80,0.845,101,1.124,102,1.111,179,2.92,225,1.756,227,1.137,231,1.729,232,2.319,240,1.65,244,1.151,249,1.494,252,1.969,254,1.761,257,1.988,270,1.969,512,3.046,754,3.526,755,3.909,759,3.767,760,4.438,761,3.24,762,3.571,763,2.821,764,3.64,765,4.612,766,3.327,767,3.422,768,3.767,769,3.526,770,3.909,771,3.526,772,2.881,773,4.646,1277,7.567]],["title/classes/ClearPaymentsFromStorage.html",[0,0.262,1278,3.21]],["body/classes/ClearPaymentsFromStorage.html",[0,0.491,2,0.886,3,0.045,4,0.039,5,0.039,8,0.18,9,0.639,12,1.844,15,0.424,16,0.005,18,0.33,20,0.787,22,0.897,26,0.073,27,0.003,28,0.003,29,0.003,34,1.023,39,0.198,80,0.86,101,1.178,102,1.164,184,2.989,225,1.797,231,1.723,232,2.311,244,1.206,249,1.566,252,2.03,254,1.695,270,2.03,512,3.141,645,2.841,733,2.786,772,3.02,930,3.697,932,3.816,935,3.697,954,3.816,1264,5.018,1266,3.816,1278,4.947,1279,4.269,1280,7.804,1281,5.625,1282,3.949,1283,3.816,1284,4.098,1285,4.098]],["title/classes/ClearProducts.html",[0,0.262,269,2.857]],["body/classes/ClearProducts.html",[0,0.51,2,0.726,3,0.037,4,0.032,5,0.032,8,0.148,9,0.559,12,1.613,13,0.484,15,0.427,16,0.005,18,0.288,20,0.689,22,1.322,26,0.074,27,0.002,28,0.003,29,0.002,39,0.225,66,1.399,80,0.862,101,0.965,102,0.954,139,0.988,186,2.345,201,1.913,214,1.151,224,2.647,225,1.625,226,2.939,227,1.352,228,1.864,229,2.647,230,2.528,231,1.748,232,2.345,237,3.754,238,2.199,239,4.203,240,1.417,241,2.712,242,3.221,243,2.782,244,0.988,245,2.782,246,2.782,247,2.782,248,2.782,249,1.283,250,2.586,251,2.712,252,2.449,253,3.229,254,1.797,255,2.528,256,2.712,257,1.708,258,2.712,259,2.712,260,2.858,261,3.665,262,2.858,263,2.474,264,2.858,265,2.712,266,2.939,267,2.712,268,1.953,269,3.852,270,1.776,1286,6.827]],["title/classes/ClearProfileData.html",[0,0.262,1095,3.018]],["body/classes/ClearProfileData.html",[0,0.502,2,0.812,3,0.041,4,0.036,5,0.036,8,0.165,9,0.604,15,0.426,16,0.005,18,0.311,20,0.837,26,0.074,27,0.002,28,0.003,29,0.002,34,1.253,39,0.243,80,0.867,101,1.081,102,1.068,124,2.787,152,1.419,221,2.658,225,1.722,227,1.46,231,1.735,232,2.329,240,1.586,244,1.106,249,1.436,252,1.436,254,1.733,270,1.918,733,2.555,803,4.455,965,2.462,1073,3.199,1074,3.621,1075,4.673,1076,4.527,1080,3.29,1081,4.159,1082,3.29,1083,5.278,1084,3.5,1085,3.39,1086,3.199,1087,3.115,1088,3.29,1089,3.29,1090,3.5,1091,3.5,1092,3.199,1093,3.29,1094,3.621,1095,4.394,1287,7.372]],["title/classes/ClearSubCategory.html",[0,0.262,1288,3.447]],["body/classes/ClearSubCategory.html",[0,0.477,2,0.901,3,0.045,4,0.04,5,0.04,8,0.183,9,0.646,12,1.864,13,0.601,15,0.42,16,0.005,18,0.333,20,0.796,22,1.175,26,0.072,27,0.003,28,0.003,29,0.003,39,0.202,80,0.866,101,1.198,102,1.184,211,1.759,214,1.43,225,1.812,227,1.212,231,1.7,232,2.281,244,1.227,249,1.593,252,2.271,254,1.544,263,3.072,270,2.053,1010,4.137,1011,3.958,1020,3.211,1030,2.889,1288,5.371,1289,5.534,1290,5.203,1291,4.545,1292,7.89,1293,5.835,1294,2.781,1295,4.168,1296,4.016,1297,3.881,1298,4.342,1299,4.016,1300,4.342]],["title/classes/ClearTags.html",[0,0.262,1301,3.447]],["body/classes/ClearTags.html",[0,0.479,2,0.911,3,0.046,4,0.04,5,0.04,8,0.185,9,0.651,12,1.877,15,0.421,16,0.005,18,0.336,20,0.625,22,0.922,26,0.073,27,0.003,28,0.003,29,0.003,39,0.262,80,0.899,101,1.211,102,1.197,142,1.572,214,2.288,225,1.821,231,1.705,232,2.288,244,1.24,249,1.61,252,2.283,253,2.027,254,1.211,270,2.067,1010,3.245,1294,2.811,1301,5.409,1302,4.594,1303,7.945,1304,5.092,1305,4.482,1306,4.482,1307,4.735,1308,4.06,1309,4.214,1310,4.214,1311,4.214,1312,3.923,1313,3.8,1314,4.214,1315,4.389]],["title/components/CommonLayoutComponent.html",[51,0.946,149,1.572]],["body/components/CommonLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,2.497,150,3.013,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,481,5.469,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,1316,6.621]],["title/modules/CommonLayoutModule.html",[425,1.681,1317,3.758]],["body/modules/CommonLayoutModule.html",[0,0.332,3,0.047,4,0.042,5,0.042,16,0.004,26,0.047,27,0.003,28,0.003,29,0.003,39,0.335,105,1.027,125,1.648,150,2.072,191,1.648,193,3.289,196,3.111,398,2.22,425,2.129,427,2.712,428,3.025,429,4.052,430,3.025,431,3.149,432,3.978,439,4.857,443,3.834,444,3.086,446,3.691,447,3.623,453,3.441,454,3.441,481,4.759,501,2.967,536,3.526,604,3.911,606,3.715,785,3.937,1316,5.762,1317,7.72,1318,5.762,1319,5.762,1320,6.411,1321,5.762,1322,6.411,1323,6.411,1324,6.411,1325,5.762,1326,6.411,1327,5.531,1328,5.334,1329,6.411]],["title/modules/ComponentModule.html",[425,1.681,460,3.758]],["body/modules/ComponentModule.html",[0,0.31,3,0.044,4,0.039,5,0.039,16,0.005,26,0.044,27,0.003,28,0.003,29,0.003,39,0.334,105,0.958,125,1.538,158,3.257,174,3.257,191,1.538,206,3.257,398,2.071,425,1.987,427,2.531,428,2.823,429,3.921,430,2.823,431,2.939,432,3.85,439,4.769,443,3.667,444,2.879,446,3.53,447,3.466,453,3.211,454,3.211,460,7.839,480,4.977,481,4.441,501,2.769,536,4.275,604,3.741,1317,7.207,1327,5.291,1328,4.977,1330,5.376,1331,5.376,1332,5.983,1333,5.376,1334,5.983,1335,5.983,1336,5.983,1337,5.983,1338,5.983]],["title/classes/Contact.html",[0,0.262,72,3.321]],["body/classes/Contact.html",[0,0.397,2,1.128,3,0.057,4,0.05,5,0.05,8,0.229,9,0.743,15,0.383,16,0.004,18,0.383,20,1.007,26,0.057,27,0.003,28,0.004,29,0.003,72,5.945,112,6.118,115,7.164,1339,7.664,1340,7.664,1341,7.664]],["title/classes/ContactMessageDto.html",[0,0.262,1342,3.96]],["body/classes/ContactMessageDto.html",[0,0.379,2,1.079,3,0.054,4,0.048,5,0.048,8,0.219,9,0.723,15,0.4,16,0.004,18,0.4,20,1.031,26,0.054,27,0.003,28,0.004,29,0.003,31,5.04,377,6.003,390,7.879,593,5.084,1342,6.903,1343,8.834,1344,7.33,1345,7.33,1346,7.33,1347,7.33]],["title/injectables/ContactService.html",[613,1.419,1348,4.212]],["body/injectables/ContactService.html",[0,0.354,3,0.051,4,0.045,5,0.045,8,0.205,13,0.83,15,0.357,16,0.005,18,0.357,26,0.051,27,0.003,28,0.004,29,0.003,39,0.325,73,1.777,80,0.642,84,1.355,85,1.323,93,1.436,105,1.095,110,2.24,118,2.042,124,3.199,240,1.965,372,3.36,397,3.227,457,3.431,613,2.371,614,2.893,623,4.076,624,5.279,626,5.043,629,4.513,649,3.671,650,3.762,651,3.762,658,3.507,1342,7.507,1343,6.147,1348,7.039,1349,6.84,1350,7.604,1351,6.84,1352,8.462,1353,6.84,1354,6.84,1355,6.84]],["title/classes/Content.html",[0,0.262,531,2.596]],["body/classes/Content.html",[0,0.397,2,1.128,3,0.057,4,0.05,5,0.05,8,0.229,9,0.743,15,0.383,16,0.004,18,0.383,20,1.007,26,0.057,27,0.003,28,0.004,29,0.003,33,5.181,531,4.647,1356,7.664,1357,7.164,1358,7.664,1359,7.664]],["title/classes/CreateCartProductDto.html",[0,0.262,229,2.718]],["body/classes/CreateCartProductDto.html",[0,0.4,2,1.137,3,0.057,4,0.05,5,0.05,8,0.231,9,0.746,15,0.326,16,0.004,18,0.326,22,1.356,26,0.057,27,0.003,28,0.004,29,0.003,31,4.669,139,1.825,229,4.888,268,3.836,965,4.061,1360,6.943,1361,6.943]],["title/classes/CreatePaymentDto.html",[0,0.262,851,2.718]],["body/classes/CreatePaymentDto.html",[0,0.379,2,1.079,3,0.054,4,0.058,5,0.048,8,0.219,9,0.723,11,4.247,15,0.4,16,0.004,18,0.373,20,0.74,22,1.092,26,0.054,27,0.003,28,0.004,29,0.003,31,4.856,39,0.241,234,4.369,851,4.738,965,4.224,1237,5.441,1362,7.33,1363,7.991,1364,8.511,1365,7.33,1366,7.33,1367,7.33,1368,6.098]],["title/classes/CreateProfileDto.html",[0,0.262,1083,3.018]],["body/classes/CreateProfileDto.html",[0,0.354,2,1.006,3,0.051,4,0.045,5,0.045,8,0.205,9,0.693,15,0.417,16,0.004,18,0.417,20,1.014,26,0.051,27,0.003,28,0.004,29,0.003,31,5.152,39,0.279,67,6.82,72,6.026,740,6.515,742,6.515,965,4.482,1083,5.043,1369,6.84,1370,7.185,1371,7.46,1372,6.84,1373,6.84,1374,6.84,1375,6.84,1376,6.84,1377,6.84,1378,6.84]],["title/classes/CreateUserCart.html",[0,0.262,316,2.655]],["body/classes/CreateUserCart.html",[0,0.506,2,0.7,3,0.035,4,0.031,5,0.031,8,0.142,9,0.546,15,0.425,16,0.005,18,0.281,20,0.48,22,1.352,26,0.074,27,0.002,28,0.003,29,0.002,34,1.306,39,0.274,80,0.853,101,0.931,102,0.921,120,3.758,139,2.105,152,1.712,186,1.794,225,1.594,227,1.648,228,2.518,231,1.737,232,2.331,240,1.914,244,0.954,249,1.238,252,1.238,253,1.559,254,1.777,257,2.306,268,1.885,270,1.733,309,2.388,310,1.625,312,2.496,316,3.493,512,1.916,531,2.44,731,3.626,762,3.626,763,2.338,792,3.774,794,2.685,818,2.555,819,2.618,823,2.618,824,2.555,830,4.335,840,2.758,843,2.496,844,3.663,845,2.758,846,2.758,851,4.702,852,3.758,855,2.758,873,2.685,874,2.618,875,2.618,879,2.618,885,2.685,964,2.837,965,2.122,966,2.758,967,3.493,1379,6.661]],["title/classes/CreateUserProfile.html",[0,0.262,1087,2.857]],["body/classes/CreateUserProfile.html",[0,0.497,2,0.785,3,0.04,4,0.035,5,0.035,8,0.16,9,0.59,13,0.523,15,0.43,16,0.005,18,0.345,20,0.823,26,0.073,27,0.002,28,0.003,29,0.002,34,1.386,39,0.237,80,0.82,84,0.854,85,0.834,101,1.044,102,1.032,124,2.017,152,1.852,221,2.648,225,1.813,227,1.73,231,1.723,232,2.312,240,1.533,244,1.069,249,1.388,252,1.388,254,1.71,270,1.388,733,2.47,803,4.379,965,2.38,1073,3.092,1074,3.5,1075,4.567,1076,4.424,1080,3.18,1081,4.065,1082,3.18,1083,5.966,1084,3.382,1085,3.276,1086,3.092,1087,4.065,1088,3.18,1089,3.18,1090,3.382,1091,3.382,1092,3.092,1093,3.18,1094,3.5,1095,3.18,1380,5.336,1381,7.205,1382,5.336]],["title/components/CreateUserProfileComponent.html",[51,0.946,151,1.593]],["body/components/CreateUserProfileComponent.html",[0,0.146,3,0.021,4,0.018,5,0.018,8,0.085,9,0.369,13,0.767,15,0.315,16,0.005,18,0.383,20,0.455,26,0.021,27,0.001,28,0.002,29,0.001,34,1.75,39,0.276,51,1.049,52,0.89,53,1.456,54,0.914,55,0.926,56,0.926,57,0.926,61,1.328,62,1.84,63,0.878,64,2.996,65,3.325,66,1.279,67,5.536,68,1.476,70,1.476,73,0.946,76,2.099,78,2.956,80,0.266,81,2.005,82,4.062,84,0.453,85,0.442,86,2.857,87,3.749,89,3.45,93,1.18,94,1.773,101,0.882,102,0.872,103,3.844,104,2.767,105,0.453,106,1.736,107,1.639,108,1.639,110,0.926,114,4.298,118,1.346,125,0.727,126,1.476,127,1.456,128,0.926,129,2.099,130,0.926,131,0.926,132,0.89,133,1.476,134,0.89,135,0.926,136,0.89,137,0.926,138,0.878,139,0.567,140,2.811,141,0.89,142,1.627,143,2.099,144,0.878,145,0.89,146,0.926,147,0.89,148,1.476,149,0.878,150,0.914,151,2.016,152,2.292,153,0.926,154,0.878,155,0.926,156,0.878,157,0.926,158,0.89,159,0.926,160,0.89,161,0.926,162,0.89,163,0.926,164,0.926,165,0.878,166,0.823,167,0.89,168,0.926,169,0.89,170,0.926,171,0.89,172,0.792,173,0.926,174,0.89,175,0.926,176,0.89,177,0.926,178,0.89,179,1.279,180,0.878,181,0.89,182,0.926,183,0.89,184,0.834,185,0.89,186,1.052,187,0.878,188,0.89,189,0.926,190,0.89,191,0.727,192,0.926,193,0.89,194,0.914,195,0.926,196,0.89,197,0.926,198,0.89,199,0.926,200,0.878,201,0.792,202,0.89,203,0.926,204,1.381,205,0.926,206,0.89,207,0.926,208,0.89,209,0.89,210,0.89,211,1.295,212,0.878,213,0.89,214,1.052,215,0.926,216,0.878,217,0.89,218,0.926,219,0.89,220,0.89,221,2.063,222,0.926,223,0.926,227,1.113,231,0.784,276,3.17,277,2.337,278,3.454,283,3.149,284,2.58,298,3.016,299,1.217,300,2.542,301,2.6,304,1.483,306,1.086,308,1.176,310,2.188,318,2.092,320,1.389,332,1.45,336,1.45,342,1.685,343,1.685,344,1.792,381,3.489,391,1.196,393,1.284,398,0.979,421,2.542,666,1.284,740,3.984,742,3.984,1080,3.348,1086,1.639,1087,1.595,1102,2.099,1190,2.479,1191,4.394,1198,2.212,1209,1.855,1210,4.363,1370,2.212,1371,4.17,1383,9.176,1384,8.246,1385,2.541,1386,5.049,1387,5.049,1388,4.05,1389,5.618,1390,5.289,1391,5.618,1392,6.409,1393,6.409,1394,4.507,1395,4.05,1396,2.828,1397,6.409,1398,2.828,1399,2.828,1400,2.828,1401,2.828,1402,2.828,1403,2.828,1404,2.828,1405,2.541,1406,2.541,1407,2.828,1408,2.828,1409,4.507,1410,2.353,1411,2.541,1412,2.212,1413,2.828,1414,2.828,1415,2.828,1416,2.828,1417,2.828,1418,2.541,1419,3.525,1420,2.353,1421,2.828,1422,2.828,1423,2.828,1424,4.05,1425,2.353,1426,2.541,1427,2.353,1428,4.507,1429,5.012,1430,4.05,1431,2.541,1432,4.05,1433,2.541,1434,2.541,1435,2.541,1436,2.541,1437,2.541,1438,2.541,1439,2.541]],["title/components/DashboardComponent.html",[51,0.946,154,1.572]],["body/components/DashboardComponent.html",[0,0.233,3,0.033,4,0.029,5,0.029,8,0.135,13,0.628,16,0.004,18,0.27,26,0.033,27,0.002,28,0.003,29,0.002,34,1.266,39,0.148,51,1.391,52,1.415,53,2.068,54,1.453,55,1.473,56,1.473,57,1.473,61,1.886,62,2.44,63,1.396,64,3.088,65,3.427,66,1.816,68,2.096,70,2.096,73,1.344,76,2.659,80,0.7,93,0.944,94,1.771,105,0.72,125,1.156,126,2.096,127,2.068,128,1.473,129,2.659,130,1.473,131,1.473,132,1.415,133,2.096,134,1.415,135,1.473,136,1.415,137,1.473,138,1.396,139,0.901,140,3.168,141,1.415,142,2.061,143,2.659,144,1.396,145,1.415,146,1.473,147,1.415,148,2.096,149,1.396,150,1.453,151,1.415,152,1.156,153,1.473,154,2.52,155,1.473,156,1.396,157,1.473,158,1.415,159,1.473,160,1.415,161,1.473,162,1.415,163,1.473,164,1.473,165,1.396,166,1.309,167,1.415,168,1.473,169,1.415,170,1.473,171,1.415,172,1.26,173,1.473,174,1.415,175,1.473,176,1.415,177,1.473,178,1.415,179,1.816,180,1.396,181,1.415,182,1.473,183,1.415,184,1.326,185,1.415,186,1.494,187,1.396,188,1.415,189,1.473,190,1.415,191,1.156,192,1.473,193,1.415,194,1.453,195,1.473,196,1.415,197,1.473,198,1.415,199,1.473,200,1.396,201,1.26,202,1.415,203,1.473,204,1.378,205,1.473,206,1.415,207,1.473,208,1.415,209,1.415,210,1.415,211,1.839,212,1.396,213,1.415,214,1.494,215,1.473,216,1.396,217,1.415,218,1.473,219,1.415,220,1.415,221,1.142,222,1.473,223,1.473,1440,4.498,1441,5.752,1442,7.451,1443,6.4,1444,4.498,1445,4.498]],["title/modules/DashboardModule.html",[425,1.681,1446,3.96]],["body/modules/DashboardModule.html",[0,0.335,3,0.048,4,0.042,5,0.042,16,0.004,26,0.048,27,0.003,28,0.003,29,0.003,34,1.389,39,0.335,105,1.036,125,1.663,151,3.118,160,3.118,191,1.663,220,3.118,398,2.24,425,2.148,427,2.737,428,3.052,429,4.069,430,3.052,431,3.178,432,2.885,439,4.868,443,3.856,444,3.114,446,3.712,447,3.644,453,3.472,454,3.472,501,2.994,536,3.558,604,3.933,606,3.748,1384,5.814,1441,5.814,1446,8.186,1447,5.814,1448,6.469,1449,5.814,1450,6.469,1451,6.469,1452,6.469,1453,6.469,1454,5.814,1455,8.172,1456,6.469,1457,6.469]],["title/classes/DeleteProfileImage.html",[0,0.262,1093,3.018]],["body/classes/DeleteProfileImage.html",[0,0.502,2,0.812,3,0.041,4,0.036,5,0.036,8,0.165,9,0.604,15,0.426,16,0.005,18,0.311,20,0.837,26,0.074,27,0.002,28,0.003,29,0.002,34,1.253,39,0.243,80,0.867,101,1.081,102,1.068,124,2.087,152,1.419,221,2.658,225,1.722,227,1.46,231,1.735,232,2.329,240,1.586,244,1.106,249,1.436,252,1.436,254,1.733,270,1.436,733,2.555,803,4.754,965,2.462,1073,3.199,1074,3.621,1075,4.673,1076,4.527,1080,3.29,1081,4.159,1082,3.29,1083,5.278,1084,3.5,1085,3.39,1086,3.199,1087,3.115,1088,3.29,1089,3.29,1090,3.5,1091,3.5,1092,3.199,1093,4.394,1094,4.836,1095,3.29,1458,7.372]],["title/classes/EditProfile.html",[0,0.262,1089,3.018]],["body/classes/EditProfile.html",[0,0.497,2,0.787,3,0.04,4,0.035,5,0.035,8,0.16,9,0.591,13,0.524,15,0.43,16,0.005,18,0.345,20,0.824,26,0.073,27,0.002,28,0.003,29,0.002,34,1.226,39,0.238,80,0.821,84,0.856,85,0.836,101,1.046,102,1.034,124,2.021,152,1.374,221,2.649,225,1.814,227,1.731,231,1.724,232,2.313,240,1.536,244,1.071,249,1.391,252,1.391,254,1.711,270,1.391,733,2.474,803,4.383,965,2.384,1073,3.098,1074,3.507,1075,4.573,1076,4.43,1080,3.186,1081,4.07,1082,3.186,1083,5.73,1084,3.389,1085,3.282,1086,3.098,1087,3.016,1088,3.186,1089,4.3,1090,4.573,1091,5.541,1092,3.098,1093,3.186,1094,3.507,1095,3.186,1459,5.346,1460,7.214,1461,5.346]],["title/classes/EmailLoginDto.html",[0,0.262,1462,4.212]],["body/classes/EmailLoginDto.html",[0,0.39,2,1.11,3,0.056,4,0.049,5,0.049,8,0.226,9,0.736,15,0.379,16,0.004,18,0.379,20,1.001,26,0.056,27,0.003,28,0.004,29,0.003,31,4.915,593,5.146,594,6.289,1462,7.47,1463,9.587,1464,7.543,1465,7.543,1466,7.543]],["title/components/ErrorComponent.html",[51,0.946,156,1.572]],["body/components/ErrorComponent.html",[0,0.233,3,0.033,4,0.029,5,0.029,8,0.135,13,0.628,16,0.004,18,0.27,26,0.033,27,0.002,28,0.003,29,0.002,34,1.266,39,0.148,51,1.391,52,1.415,53,2.068,54,1.453,55,1.473,56,1.473,57,1.473,61,1.886,62,2.44,63,1.396,64,3.088,65,3.427,66,1.816,68,2.096,70,2.096,73,1.344,76,2.659,80,0.7,93,0.944,94,1.771,105,0.72,125,1.156,126,2.096,127,2.068,128,1.473,129,2.659,130,1.473,131,1.473,132,1.415,133,2.096,134,1.415,135,1.473,136,1.415,137,1.473,138,1.396,139,0.901,140,3.168,141,1.415,142,2.061,143,2.659,144,1.396,145,1.415,146,1.473,147,1.415,148,2.096,149,1.396,150,1.453,151,1.415,152,1.156,153,1.473,154,1.396,155,1.473,156,2.52,157,1.473,158,1.415,159,1.473,160,1.415,161,1.473,162,1.415,163,1.473,164,1.473,165,1.396,166,1.309,167,1.415,168,1.473,169,1.415,170,1.473,171,1.415,172,1.26,173,1.473,174,1.415,175,1.473,176,1.415,177,1.473,178,1.415,179,1.816,180,1.396,181,1.415,182,1.473,183,1.415,184,1.326,185,1.415,186,1.494,187,1.396,188,1.415,189,1.473,190,1.415,191,1.156,192,1.473,193,1.415,194,1.453,195,1.473,196,1.415,197,1.473,198,1.415,199,1.473,200,1.396,201,1.26,202,1.415,203,1.473,204,2.283,205,1.473,206,1.415,207,1.473,208,1.415,209,1.415,210,1.415,211,1.839,212,1.396,213,1.415,214,1.494,215,1.473,216,1.396,217,1.415,218,1.473,219,1.415,220,1.415,221,1.142,222,1.473,223,1.473,1467,4.498,1468,7.451,1469,6.4,1470,4.498,1471,4.498]],["title/interceptors/ErrorInterceptor.html",[441,3.96,1153,4.212]],["body/interceptors/ErrorInterceptor.html",[0,0.322,3,0.046,4,0.041,5,0.041,8,0.187,13,0.782,15,0.337,16,0.005,18,0.337,26,0.046,27,0.003,28,0.003,29,0.003,39,0.323,61,1.836,73,1.675,80,0.585,84,1.277,85,1.247,93,1.308,105,0.997,110,2.041,118,2.628,204,1.909,277,3.661,284,3.735,296,3.267,308,2.591,318,2.32,324,2.681,381,4.377,391,2.635,397,2.94,398,2.157,441,6.24,457,3.125,613,2.235,629,4.323,709,3.713,710,3.515,974,5.183,1135,5.599,1155,5.183,1158,6.637,1160,6.637,1161,7.721,1162,7.322,1163,7.721,1165,5.183,1166,5.599,1167,6.637,1168,7.17,1169,5.599,1472,6.23,1473,6.23,1474,6.23,1475,5.183,1476,6.23,1477,6.23,1478,6.23,1479,6.23,1480,5.599,1481,7.978]],["title/classes/ErrorMessages.html",[0,0.262,1390,3.591]],["body/classes/ErrorMessages.html",[0,0.298,2,0.848,3,0.043,4,0.038,5,0.038,8,0.173,13,0.918,15,0.395,16,0.005,18,0.395,20,1.07,22,1.431,26,0.043,27,0.002,28,0.003,29,0.002,73,1.593,84,1.499,85,1.463,93,1.966,118,2.795,121,3.54,123,4.089,518,4.28,1229,4.089,1230,8.272,1390,5.38,1482,9.611,1483,5.766,1484,7.587,1485,7.587,1486,6.312,1487,7.587,1488,7.587,1489,7.587,1490,9.124,1491,5.766,1492,7.587,1493,5.766,1494,7.587,1495,5.766,1496,7.587,1497,7.587,1498,5.766,1499,7.587,1500,5.766,1501,5.766,1502,7.587,1503,4.509,1504,5.182]],["title/modules/ErrorModule.html",[425,1.681,1505,3.96]],["body/modules/ErrorModule.html",[0,0.356,3,0.051,4,0.045,5,0.045,16,0.004,26,0.051,27,0.003,28,0.004,29,0.003,39,0.331,105,1.1,125,1.766,176,3.165,191,1.766,204,2.106,398,2.38,425,2.282,427,2.907,428,3.243,429,4.182,430,3.243,431,3.376,432,3.065,439,4.942,443,4.004,444,3.308,446,3.855,447,3.784,453,3.689,454,3.689,501,3.181,536,3.78,604,4.085,606,3.982,1505,8.056,1506,6.176,1507,6.873,1508,6.176,1509,6.873,1510,6.873,1511,6.873,1512,6.176,1513,6.873,1514,6.873]],["title/classes/FetchAllCategories.html",[0,0.262,1050,3.447]],["body/classes/FetchAllCategories.html",[0,0.466,2,0.963,3,0.048,4,0.043,5,0.043,8,0.196,9,0.674,12,1.945,15,0.42,16,0.005,18,0.348,20,0.66,22,0.974,26,0.072,27,0.003,28,0.004,29,0.003,39,0.216,80,0.887,101,1.281,102,1.266,142,2.524,225,1.869,231,1.694,232,2.273,244,1.311,249,1.702,252,2.343,254,1.281,270,1.702,979,4.643,983,3.899,1030,4.249,1050,5.603,1054,4.64,1057,4.64,1063,4.64,1071,5.117,1072,4.857,1515,8.231]],["title/classes/FetchAllSubCategories.html",[0,0.262,1297,3.21]],["body/classes/FetchAllSubCategories.html",[0,0.477,2,0.899,3,0.045,4,0.04,5,0.04,8,0.183,9,0.646,12,1.862,13,0.599,15,0.42,16,0.005,18,0.333,20,0.795,22,1.174,26,0.072,27,0.003,28,0.003,29,0.003,39,0.201,80,0.865,101,1.196,102,1.182,211,2.264,214,1.427,225,1.81,227,1.21,231,1.699,232,2.28,244,1.224,249,1.59,252,2.397,254,1.542,263,3.065,270,1.59,1010,4.132,1011,3.953,1020,3.204,1030,3.718,1288,4.16,1289,5.528,1290,5.197,1291,4.535,1293,5.756,1294,2.775,1295,4.16,1296,4.008,1297,4.994,1298,4.333,1299,4.008,1300,4.333,1516,7.879]],["title/classes/FetchCategoryById.html",[0,0.262,1072,3.758]],["body/classes/FetchCategoryById.html",[0,0.457,2,0.923,3,0.046,4,0.041,5,0.041,8,0.188,9,0.656,12,2.323,13,0.615,15,0.427,16,0.005,18,0.373,20,0.633,22,1.386,26,0.071,27,0.003,28,0.003,29,0.003,39,0.207,80,0.829,84,1.004,85,0.98,101,1.227,102,1.213,142,2.538,225,1.931,227,1.586,231,1.673,232,2.244,244,1.256,249,1.631,252,2.297,254,1.227,270,1.631,756,3.975,979,4.52,983,3.737,1030,3.78,1050,4.269,1054,4.447,1057,4.447,1063,4.447,1071,4.904,1072,5.947,1517,8.012,1518,6.271]],["title/classes/FetchCustomProducts.html",[0,0.262,267,2.785]],["body/classes/FetchCustomProducts.html",[0,0.507,2,0.703,3,0.035,4,0.031,5,0.031,8,0.143,9,0.547,12,1.577,13,0.655,15,0.431,16,0.005,18,0.325,20,0.674,22,1.306,26,0.074,27,0.002,28,0.003,29,0.002,39,0.22,66,1.355,80,0.824,84,0.765,85,0.746,101,0.935,102,0.924,139,0.957,186,2.332,201,1.871,214,1.115,224,2.563,225,1.73,226,2.846,227,1.65,228,1.805,229,2.563,230,2.448,231,1.738,232,2.332,237,3.71,238,2.13,239,5.19,240,1.372,241,2.626,242,3.632,243,2.694,244,0.957,245,2.694,246,2.694,247,2.694,248,2.694,249,1.242,250,2.504,251,2.626,252,2.476,253,3.208,254,1.779,255,2.448,256,2.626,257,1.653,258,2.626,259,2.626,260,2.767,261,3.583,262,2.767,263,2.396,264,2.767,265,2.626,266,2.846,267,3.672,268,1.891,269,2.694,270,1.242,1519,4.775,1520,6.676,1521,4.775]],["title/classes/FetchInvoiceById.html",[0,0.262,1276,3.591]],["body/classes/FetchInvoiceById.html",[0,0.474,2,0.886,3,0.045,4,0.039,5,0.039,8,0.18,9,0.639,12,2.298,13,0.59,15,0.428,16,0.005,18,0.366,20,0.607,22,1.364,26,0.072,27,0.003,28,0.003,29,0.003,34,1.023,39,0.198,80,0.813,84,0.964,85,0.941,101,1.178,102,1.164,166,2.951,225,1.901,227,1.545,231,1.692,232,2.271,244,1.206,249,1.566,252,2.253,254,1.527,270,1.566,512,2.423,756,3.816,772,3.02,924,3.588,926,3.949,1263,5.018,1265,3.816,1270,3.949,1271,4.469,1273,5.018,1274,4.098,1275,3.588,1276,5.534,1522,7.804,1523,6.02]],["title/classes/FetchLatestProducts.html",[0,0.262,260,2.934]],["body/classes/FetchLatestProducts.html",[0,0.51,2,0.724,3,0.036,4,0.032,5,0.032,8,0.147,9,0.559,12,1.611,13,0.483,15,0.427,16,0.005,18,0.288,20,0.688,22,1.321,26,0.074,27,0.002,28,0.003,29,0.002,39,0.225,66,1.397,80,0.862,101,0.963,102,0.952,139,0.986,186,2.345,201,1.911,214,1.149,224,2.643,225,1.624,226,2.934,227,1.35,228,1.861,229,2.643,230,2.524,231,1.747,232,2.345,237,3.752,238,2.195,239,4.199,240,1.415,241,2.708,242,3.218,243,2.777,244,0.986,245,2.777,246,2.777,247,2.777,248,2.777,249,1.281,250,2.581,251,2.708,252,2.495,253,3.228,254,1.796,255,2.524,256,2.708,257,1.705,258,2.708,259,2.708,260,3.951,261,4.199,262,2.853,263,2.47,264,2.853,265,2.708,266,2.934,267,2.708,268,1.95,269,2.777,270,1.281,1524,6.819]],["title/classes/FetchMixLatestProducts.html",[0,0.262,265,2.785]],["body/classes/FetchMixLatestProducts.html",[0,0.51,2,0.723,3,0.036,4,0.032,5,0.032,8,0.147,9,0.558,12,1.609,13,0.482,15,0.427,16,0.005,18,0.288,20,0.687,22,1.32,26,0.074,27,0.002,28,0.003,29,0.002,39,0.224,66,1.394,80,0.861,101,0.962,102,0.951,139,0.985,186,2.344,201,1.908,214,1.148,224,2.638,225,1.622,226,2.929,227,1.349,228,1.858,229,2.638,230,2.52,231,1.747,232,2.344,237,3.749,238,2.192,239,4.196,240,1.412,241,2.703,242,3.214,243,2.773,244,0.985,245,2.773,246,2.773,247,2.773,248,2.773,249,1.279,250,2.577,251,2.703,252,2.494,253,3.227,254,1.795,255,2.52,256,2.703,257,1.702,258,2.703,259,2.703,260,2.848,261,4.196,262,2.848,263,2.466,264,2.848,265,3.746,266,4.059,267,2.703,268,1.947,269,2.773,270,1.279,1525,6.811]],["title/classes/FetchMostSalesProducts.html",[0,0.262,258,2.785]],["body/classes/FetchMostSalesProducts.html",[0,0.51,2,0.724,3,0.036,4,0.032,5,0.032,8,0.147,9,0.559,12,1.611,13,0.483,15,0.427,16,0.005,18,0.288,20,0.688,22,1.321,26,0.074,27,0.002,28,0.003,29,0.002,39,0.225,66,1.397,80,0.862,101,0.963,102,0.952,139,0.986,186,2.345,201,1.911,214,1.149,224,2.643,225,1.624,226,2.934,227,1.35,228,1.861,229,2.643,230,2.524,231,1.747,232,2.345,237,3.752,238,2.195,239,4.199,240,1.415,241,2.708,242,3.218,243,2.777,244,0.986,245,2.777,246,2.777,247,2.777,248,2.777,249,1.281,250,2.581,251,2.708,252,2.495,253,3.228,254,1.796,255,2.524,256,2.708,257,1.705,258,3.75,259,3.75,260,2.853,261,3.66,262,2.853,263,2.47,264,2.853,265,2.708,266,2.934,267,2.708,268,1.95,269,2.777,270,1.281,1526,6.819]],["title/classes/FetchOrderById.html",[0,0.262,768,3.321]],["body/classes/FetchOrderById.html",[0,0.492,2,0.815,3,0.041,4,0.036,5,0.036,8,0.166,9,0.606,12,2.329,13,0.544,15,0.429,16,0.005,18,0.351,20,0.559,22,1.416,26,0.073,27,0.002,28,0.003,29,0.002,34,0.942,39,0.243,80,0.781,84,0.887,85,0.866,101,1.085,102,1.072,179,2.922,225,1.841,227,1.647,231,1.715,232,2.302,240,1.593,244,1.11,249,1.442,252,2.164,254,1.736,257,1.919,270,1.442,512,2.231,754,3.403,755,3.773,756,3.513,759,3.636,760,4.36,761,3.127,762,3.488,763,2.723,764,3.513,765,4.263,766,3.211,767,3.303,768,4.848,769,3.403,770,3.773,771,3.403,772,2.78,773,3.403,1527,7.391,1528,5.543]],["title/classes/FetchPaymentById.html",[0,0.262,1284,3.447]],["body/classes/FetchPaymentById.html",[0,0.485,2,0.853,3,0.043,4,0.038,5,0.038,8,0.174,9,0.624,12,2.275,13,0.569,15,0.429,16,0.005,18,0.359,20,0.769,22,1.345,26,0.073,27,0.002,28,0.003,29,0.002,34,0.986,39,0.191,80,0.799,84,0.929,85,0.907,101,1.135,102,1.122,184,2.996,225,1.874,227,1.508,231,1.707,232,2.291,244,1.162,249,1.509,252,2.213,254,1.665,270,1.509,512,2.335,645,2.737,733,2.685,756,3.677,772,2.91,930,3.562,932,3.677,935,3.562,954,3.677,1264,4.928,1266,3.677,1278,3.677,1279,4.114,1281,5.222,1282,3.805,1283,3.677,1284,5.186,1285,3.949,1529,7.617,1530,5.801]],["title/classes/FetchProductById.html",[0,0.262,264,2.934]],["body/classes/FetchProductById.html",[0,0.507,2,0.703,3,0.035,4,0.031,5,0.031,8,0.143,9,0.547,12,2.147,13,0.655,15,0.431,16,0.005,18,0.325,20,0.674,22,1.417,26,0.074,27,0.002,28,0.003,29,0.002,39,0.22,66,1.355,80,0.824,84,0.765,85,0.746,101,0.935,102,0.924,139,0.957,186,2.35,201,1.871,214,1.115,224,2.563,225,1.73,226,2.846,227,1.65,228,1.805,229,2.563,230,2.448,231,1.738,232,2.332,237,3.71,238,2.13,239,4.132,240,1.372,241,2.626,242,3.15,243,2.694,244,0.957,245,2.694,246,2.694,247,2.694,248,2.694,249,1.242,250,2.504,251,2.626,252,2.476,253,3.167,254,1.779,255,2.448,256,2.626,257,1.653,258,2.626,259,2.626,260,2.767,261,3.583,262,2.767,263,2.396,264,3.868,265,2.626,266,2.846,267,2.626,268,1.891,269,2.694,270,1.242,756,3.027,1531,6.676,1532,4.775]],["title/classes/FetchProductsByTagName.html",[0,0.262,262,2.934]],["body/classes/FetchProductsByTagName.html",[0,0.507,2,0.701,3,0.035,4,0.031,5,0.031,8,0.143,9,0.546,12,1.576,13,0.754,15,0.43,16,0.005,18,0.325,20,0.884,22,1.305,26,0.074,27,0.002,28,0.003,29,0.002,39,0.22,66,1.353,80,0.823,84,0.763,85,0.745,101,0.933,102,0.922,139,0.955,186,2.332,201,1.868,214,1.557,224,2.559,225,1.728,226,2.841,227,1.649,228,1.802,229,2.559,230,2.444,231,1.738,232,2.332,237,3.708,238,2.126,239,4.128,240,1.37,241,2.622,242,3.146,243,2.69,244,0.955,245,2.69,246,2.69,247,2.69,248,2.69,249,1.24,250,2.5,251,2.622,252,2.475,253,3.207,254,1.778,255,2.444,256,2.622,257,1.651,258,2.622,259,2.622,260,2.762,261,3.579,262,3.864,263,4.178,264,2.762,265,2.622,266,2.841,267,2.622,268,1.888,269,2.69,270,1.24,1533,4.284,1534,6.668,1535,4.768]],["title/classes/FetchProductsTags.html",[0,0.262,1314,3.447]],["body/classes/FetchProductsTags.html",[0,0.479,2,0.909,3,0.046,4,0.04,5,0.04,8,0.185,9,0.65,12,1.875,15,0.421,16,0.005,18,0.335,20,0.623,22,0.92,26,0.073,27,0.003,28,0.003,29,0.003,39,0.261,80,0.899,101,1.209,102,1.195,142,1.568,214,2.286,225,1.819,231,1.704,232,2.286,244,1.237,249,1.607,252,2.407,253,2.599,254,1.209,270,1.607,1010,3.238,1294,2.805,1301,4.204,1302,4.584,1304,5.088,1305,4.476,1306,4.476,1307,4.728,1308,4.051,1309,4.204,1310,4.204,1311,4.204,1312,3.915,1313,3.792,1314,5.401,1315,4.38,1536,7.934]],["title/classes/FetchShopProducts.html",[0,0.262,251,2.785]],["body/classes/FetchShopProducts.html",[0,0.507,2,0.703,3,0.035,4,0.031,5,0.031,8,0.143,9,0.547,12,1.577,13,0.655,15,0.431,16,0.005,18,0.325,20,0.674,22,1.417,26,0.074,27,0.002,28,0.003,29,0.002,39,0.22,66,1.355,80,0.824,84,0.765,85,0.746,101,0.935,102,0.924,139,0.957,186,2.332,201,2.157,214,1.115,224,2.563,225,1.73,226,2.846,227,1.65,228,1.805,229,2.563,230,2.448,231,1.738,232,2.332,237,3.71,238,2.13,239,4.132,240,1.372,241,2.626,242,3.15,243,2.694,244,0.957,245,2.694,246,2.694,247,2.694,248,2.694,249,1.242,250,2.504,251,3.672,252,2.476,253,3.208,254,1.779,255,4.273,256,2.626,257,1.653,258,2.626,259,2.626,260,2.767,261,3.583,262,2.767,263,2.396,264,2.767,265,2.626,266,2.846,267,2.626,268,1.891,269,2.694,270,1.242,1537,4.775,1538,6.676,1539,4.775]],["title/classes/FetchSubCategoriesByTagName.html",[0,0.262,1299,3.321]],["body/classes/FetchSubCategoriesByTagName.html",[0,0.463,2,0.833,3,0.042,4,0.037,5,0.037,8,0.17,9,0.614,12,1.772,13,0.824,15,0.428,16,0.005,18,0.378,20,0.939,22,1.386,26,0.071,27,0.002,28,0.003,29,0.002,39,0.187,80,0.789,84,0.907,85,0.885,101,1.108,102,1.095,211,1.627,214,1.751,225,1.931,227,1.843,231,1.664,232,2.233,244,1.135,249,1.473,252,2.328,254,1.467,263,4.488,270,1.473,1010,4.407,1011,3.761,1020,2.969,1030,2.672,1288,3.855,1289,5.899,1290,5.547,1291,4.204,1293,5.652,1294,2.572,1295,3.855,1296,3.715,1297,3.59,1298,4.016,1299,4.918,1300,6.6,1533,5.089,1540,7.498,1541,7.498]],["title/classes/FetchSubCategoriesTags.html",[0,0.262,1313,3.109]],["body/classes/FetchSubCategoriesTags.html",[0,0.479,2,0.909,3,0.046,4,0.04,5,0.04,8,0.185,9,0.65,12,1.875,15,0.421,16,0.005,18,0.335,20,0.623,22,0.92,26,0.073,27,0.003,28,0.003,29,0.003,39,0.261,80,0.899,101,1.209,102,1.195,142,1.568,214,2.286,225,1.819,231,1.704,232,2.286,244,1.237,249,1.607,252,2.407,253,2.023,254,1.209,270,1.607,1010,4.16,1294,2.805,1301,4.204,1302,4.584,1304,5.088,1305,4.476,1306,4.476,1307,4.728,1308,4.051,1309,4.204,1310,4.204,1311,4.204,1312,3.915,1313,4.872,1314,4.204,1315,4.38,1542,7.934]],["title/classes/FetchSubCategoryById.html",[0,0.262,1298,3.591]],["body/classes/FetchSubCategoryById.html",[0,0.469,2,0.862,3,0.043,4,0.038,5,0.038,8,0.175,9,0.628,12,2.281,13,0.752,15,0.426,16,0.005,18,0.361,20,0.774,22,1.402,26,0.071,27,0.003,28,0.003,29,0.003,39,0.193,80,0.803,84,0.938,85,0.916,101,1.147,102,1.133,211,1.684,214,1.368,225,1.882,227,1.693,231,1.68,232,2.254,244,1.174,249,1.525,252,2.359,254,1.501,263,2.94,270,1.525,756,3.715,1010,4.021,1011,3.847,1020,3.073,1030,2.765,1288,3.989,1289,5.747,1290,5.404,1291,4.35,1293,5.781,1294,2.662,1295,3.989,1296,3.844,1297,3.715,1298,5.438,1299,3.844,1300,4.156,1543,7.668,1544,5.86]],["title/classes/FetchTagById.html",[0,0.262,1315,3.591]],["body/classes/FetchTagById.html",[0,0.472,2,0.875,3,0.044,4,0.039,5,0.039,8,0.178,9,0.634,12,2.29,13,0.583,15,0.427,16,0.005,18,0.364,20,0.6,22,1.358,26,0.072,27,0.003,28,0.003,29,0.003,39,0.255,80,0.856,84,0.952,85,0.929,101,1.164,102,1.15,142,1.51,214,2.305,225,1.892,227,1.533,231,1.687,232,2.263,244,1.191,249,1.547,252,2.372,253,1.947,254,1.164,270,1.547,756,3.769,1010,3.117,1294,2.7,1301,4.047,1302,4.413,1304,4.734,1305,4.367,1306,4.367,1307,4.613,1308,3.9,1309,4.047,1310,4.047,1311,4.047,1312,3.769,1313,3.65,1314,4.047,1315,5.489,1545,7.741,1546,5.945]],["title/classes/FetchUserCart.html",[0,0.262,312,2.655]],["body/classes/FetchUserCart.html",[0,0.506,2,0.7,3,0.035,4,0.031,5,0.031,8,0.142,9,0.546,15,0.425,16,0.005,18,0.281,20,0.48,22,1.352,26,0.074,27,0.002,28,0.003,29,0.002,34,1.306,39,0.274,80,0.853,101,0.931,102,0.921,120,3.758,139,2.105,152,1.223,186,1.794,225,1.594,227,1.648,228,2.518,231,1.737,232,2.331,240,1.914,244,0.954,249,1.238,252,1.733,253,1.559,254,1.777,257,2.306,268,1.885,270,1.733,309,2.388,310,1.625,312,3.493,316,2.496,512,1.916,531,2.44,731,3.626,762,3.626,763,2.338,792,3.774,794,2.685,818,2.555,819,2.618,823,2.618,824,2.555,830,4.335,840,2.758,843,2.496,844,3.663,845,2.758,846,2.758,851,4.702,852,3.758,855,2.758,873,2.685,874,2.618,875,2.618,879,2.618,885,2.685,964,2.837,965,2.122,966,2.758,967,3.493,1547,6.661]],["title/classes/FetchUserInvoices.html",[0,0.262,1275,3.018]],["body/classes/FetchUserInvoices.html",[0,0.481,2,0.921,3,0.046,4,0.041,5,0.041,8,0.187,9,0.655,12,1.89,15,0.422,16,0.005,18,0.338,20,0.631,22,0.932,26,0.073,27,0.003,28,0.003,29,0.003,34,1.36,39,0.206,80,0.873,101,1.225,102,1.21,166,2.943,225,1.83,231,1.71,232,2.294,244,1.254,249,1.628,252,2.295,254,1.566,270,1.628,512,2.518,772,3.139,924,3.729,926,4.104,1263,5.11,1265,3.966,1270,4.104,1271,4.645,1273,5.386,1274,4.26,1275,4.768,1276,4.437,1548,8.001]],["title/classes/FetchUserOrders.html",[0,0.262,767,3.018]],["body/classes/FetchUserOrders.html",[0,0.497,2,0.845,3,0.043,4,0.037,5,0.037,8,0.172,9,0.62,12,2.126,15,0.425,16,0.005,18,0.32,20,0.579,22,1.26,26,0.074,27,0.002,28,0.003,29,0.002,34,1.286,39,0.249,80,0.845,101,1.124,102,1.111,179,2.92,225,1.756,227,1.137,231,1.729,232,2.319,240,1.65,244,1.151,249,1.494,252,2.202,254,1.761,257,1.988,270,1.494,512,2.311,754,3.526,755,3.909,759,3.767,760,4.438,761,3.24,762,3.571,763,2.821,764,3.64,765,4.612,766,3.327,767,4.51,768,3.767,769,3.526,770,3.909,771,3.526,772,2.881,773,3.526,1549,7.567]],["title/classes/FetchUserPayments.html",[0,0.262,1283,3.21]],["body/classes/FetchUserPayments.html",[0,0.491,2,0.886,3,0.045,4,0.039,5,0.039,8,0.18,9,0.639,12,1.844,15,0.424,16,0.005,18,0.33,20,0.787,22,0.897,26,0.073,27,0.003,28,0.003,29,0.003,34,1.326,39,0.198,80,0.86,101,1.178,102,1.164,184,2.989,225,1.797,231,1.723,232,2.311,244,1.206,249,1.566,252,2.253,254,1.695,270,1.566,512,2.423,645,2.841,733,2.786,772,3.02,930,3.697,932,3.816,935,3.697,954,3.816,1264,5.018,1266,3.816,1278,3.816,1279,4.269,1281,5.625,1282,3.949,1283,4.947,1284,4.098,1285,4.098,1550,7.804]],["title/classes/FetchUserProfile.html",[0,0.262,1088,3.018]],["body/classes/FetchUserProfile.html",[0,0.502,2,0.812,3,0.041,4,0.036,5,0.036,8,0.165,9,0.604,15,0.426,16,0.005,18,0.311,20,0.837,26,0.074,27,0.002,28,0.003,29,0.002,34,1.41,39,0.243,80,0.867,101,1.081,102,1.068,124,2.087,152,1.419,221,2.658,225,1.722,227,1.46,231,1.735,232,2.329,240,1.586,244,1.106,249,1.436,252,1.918,254,1.733,270,1.436,733,2.555,803,4.455,965,2.462,1073,3.199,1074,3.621,1075,4.673,1076,4.527,1080,3.29,1081,4.159,1082,3.29,1083,5.278,1084,3.5,1085,3.39,1086,3.199,1087,3.115,1088,4.394,1089,3.29,1090,3.5,1091,3.5,1092,3.199,1093,3.29,1094,3.621,1095,3.29,1551,7.372]],["title/modules/FileModule.html",[425,1.681,1552,3.758]],["body/modules/FileModule.html",[0,0.385,3,0.055,4,0.049,5,0.058,16,0.005,26,0.055,27,0.003,28,0.004,29,0.003,39,0.314,105,1.192,427,3.149,429,3.381,432,3.32,446,3.381,447,3.973,501,3.446,604,4.288,1552,6.613,1553,7.445,1554,8.909,1555,8.909,1556,9.534,1557,5.822,1558,5.822]],["title/components/FooterComponent.html",[51,0.946,158,1.593]],["body/components/FooterComponent.html",[0,0.191,3,0.027,4,0.024,5,0.024,8,0.11,9,0.453,13,0.542,15,0.156,16,0.004,17,4.458,18,0.28,26,0.027,27,0.002,28,0.002,29,0.002,34,1.128,39,0.121,51,1.24,52,1.158,53,1.787,54,1.19,55,1.206,56,1.206,57,1.206,61,1.63,62,2.174,63,1.143,64,3.053,65,3.388,66,1.569,68,1.811,70,1.811,73,1.161,76,2.417,80,0.623,93,0.773,94,1.53,101,0.721,102,0.712,103,2.716,105,0.59,125,0.946,126,1.811,127,1.787,128,1.206,129,2.417,130,1.206,131,1.206,132,1.158,133,1.811,134,1.158,135,1.206,136,1.158,137,1.206,138,1.143,139,0.738,140,3.024,141,1.158,142,1.874,143,2.417,144,1.143,145,1.158,146,1.206,147,1.158,148,1.811,149,1.143,150,1.19,151,1.158,152,0.946,153,1.206,154,1.143,155,1.206,156,1.143,157,1.206,158,2.322,159,1.206,160,1.158,161,1.206,162,1.158,163,1.206,164,1.206,165,1.143,166,1.072,167,1.158,168,1.206,169,1.158,170,1.206,171,1.158,172,1.032,173,1.206,174,1.158,175,1.206,176,1.158,177,1.206,178,1.158,179,1.569,180,1.143,181,1.158,182,1.206,183,1.158,184,1.085,185,1.158,186,1.291,187,1.143,188,1.158,189,1.206,190,1.158,191,0.946,192,1.206,193,1.158,194,1.19,195,1.206,196,1.158,197,1.206,198,1.158,199,1.206,200,1.143,201,1.032,202,1.158,203,1.206,204,1.128,205,1.206,206,1.158,207,1.206,208,1.158,209,1.158,210,1.158,211,1.589,212,1.143,213,1.158,214,1.291,215,1.206,216,1.143,217,1.158,218,1.206,219,1.158,220,1.158,221,0.935,222,1.206,223,1.206,296,4.355,348,5.771,531,3.783,618,2.968,1131,6.91,1559,3.682,1560,8.615,1561,6.639,1562,5.529,1563,6.579,1564,5.529,1565,3.682,1566,4.324,1567,5.529,1568,5.529,1569,5.529,1570,5.529,1571,5.529,1572,5.529,1573,5.529,1574,5.529,1575,5.529,1576,5.529,1577,5.529,1578,8.306,1579,10.233,1580,7.464,1581,6.91,1582,4.969,1583,4.324,1584,4.969,1585,5.529,1586,5.529,1587,4.969,1588,4.6,1589,2.88,1590,3.682,1591,3.682]],["title/pipes/GeneralPipe.html",[1021,3.109,1592,3.96]],["body/pipes/GeneralPipe.html",[0,0.37,3,0.053,4,0.047,5,0.047,13,0.919,15,0.302,16,0.005,18,0.302,20,0.945,26,0.053,27,0.003,28,0.004,29,0.003,39,0.235,61,2.107,63,2.219,73,1.501,84,1.144,85,1.117,93,1.501,105,1.144,118,2.595,296,3.748,1021,5.337,1023,5.305,1026,5.59,1028,7.234,1031,6.798,1592,6.798,1593,7.147,1594,8.693,1595,8.693,1596,7.147,1597,9.368,1598,7.147,1599,7.147]],["title/classes/GetProductsByRangeDto.html",[0,0.262,1600,4.55]],["body/classes/GetProductsByRangeDto.html",[0,0.352,2,1.002,3,0.05,4,0.044,5,0.044,8,0.204,9,0.691,15,0.416,16,0.004,18,0.416,20,0.851,22,1.531,26,0.05,27,0.003,28,0.004,29,0.003,31,5.146,85,1.319,253,3.288,255,4.7,1600,7.582,1601,10.038,1602,6.808,1603,7.627,1604,7.627,1605,7.627,1606,7.17,1607,6.808,1608,6.808,1609,6.808,1610,6.808,1611,6.808]],["title/classes/GlobalDataDto.html",[0,0.262,655,4.212]],["body/classes/GlobalDataDto.html",[0,0.252,2,0.717,3,0.036,4,0.032,5,0.032,8,0.146,9,0.555,13,0.478,15,0.427,16,0.004,18,0.427,22,1.609,26,0.036,27,0.002,28,0.003,29,0.002,31,5.211,80,0.636,84,0.78,85,0.762,227,2.121,253,2.894,259,4.86,655,5.633,656,9.134,765,4.53,1010,4.633,1030,4.169,1273,5.12,1281,5.425,1304,4.86,1612,4.873,1613,8.836,1614,7.941,1615,8.836,1616,6.995,1617,4.873,1618,4.873,1619,4.873,1620,4.873,1621,4.873,1622,4.873,1623,4.873,1624,4.873,1625,4.873,1626,4.873,1627,4.873,1628,4.873,1629,4.873,1630,4.873]],["title/injectables/GlobalDataService.html",[284,2.038,613,1.419]],["body/injectables/GlobalDataService.html",[0,0.213,3,0.03,4,0.027,5,0.027,8,0.123,12,1.417,13,0.695,15,0.253,16,0.005,18,0.43,22,0.612,26,0.03,27,0.002,28,0.003,29,0.002,34,1.203,39,0.342,73,1.259,80,0.386,84,1.134,85,1.107,93,1.738,94,1.66,103,4.246,105,0.658,110,1.346,118,2.325,139,1.419,142,1.044,166,1.196,221,1.523,246,3.384,247,3.384,248,3.384,283,3.479,284,2.414,306,1.578,309,2.062,310,3.401,311,3.051,318,1.531,324,1.769,331,3.299,372,2.019,381,3.98,382,2.382,394,3.299,395,2.319,398,1.423,405,3.42,417,2.605,595,4.821,613,1.681,614,1.739,645,3.342,658,2.107,670,2.915,672,6.364,765,3.075,766,2.382,773,3.683,869,3.215,874,3.299,916,3.694,924,2.45,930,2.524,988,3.42,992,2.915,1010,3.145,1011,3.906,1020,2.155,1030,2.83,1047,3.215,1081,2.319,1082,2.45,1086,2.382,1095,3.575,1190,3.299,1236,3.051,1270,3.934,1273,3.475,1278,2.605,1289,2.605,1290,2.45,1293,3.475,1294,1.867,1310,4.083,1410,3.42,1631,10.223,1632,4.111,1633,5.998,1634,4.99,1635,7.786,1636,6.364,1637,3.051,1638,4.111,1639,4.111,1640,4.111,1641,4.111,1642,5.39,1643,4.111,1644,4.111,1645,4.111,1646,4.111,1647,4.111,1648,3.694,1649,4.111,1650,3.694,1651,4.111,1652,4.111,1653,4.111,1654,4.111,1655,4.111,1656,4.111,1657,4.111,1658,3.694,1659,4.111,1660,4.111,1661,4.111,1662,3.694,1663,4.111,1664,3.694,1665,4.111,1666,3.694,1667,4.111,1668,3.694,1669,4.111,1670,3.694,1671,4.111,1672,3.694,1673,3.215,1674,4.111,1675,4.111,1676,3.215,1677,4.111,1678,3.215,1679,4.111,1680,3.215,1681,4.111,1682,3.215,1683,4.111,1684,3.215,1685,4.111,1686,3.215,1687,3.42,1688,3.694,1689,3.694,1690,3.694,1691,3.694,1692,3.694,1693,4.111,1694,3.694,1695,4.111,1696,4.111,1697,4.111,1698,4.111,1699,4.111,1700,4.111,1701,3.42,1702,3.694,1703,3.215,1704,3.694,1705,3.42,1706,4.111,1707,4.111]],["title/injectables/HelperService.html",[278,2.038,613,1.419]],["body/injectables/HelperService.html",[0,0.165,3,0.024,4,0.021,5,0.048,8,0.096,9,0.406,13,0.804,15,0.409,16,0.005,18,0.426,20,0.897,22,0.476,26,0.024,27,0.001,28,0.002,29,0.001,33,3.679,39,0.307,54,2.215,73,1.041,80,0.3,84,1.312,85,1.281,93,1.901,94,2.506,101,1.658,102,1.683,103,4.026,105,0.511,110,1.046,124,1.207,186,1.158,204,2.407,234,1.903,237,2.899,238,1.424,278,1.996,298,3.679,310,2.076,318,2.763,324,2.134,345,2.174,372,1.569,377,3.143,381,3.655,397,1.507,398,1.106,399,2.798,417,2.024,421,4.431,613,1.39,614,1.351,629,3.645,658,1.637,666,3.848,681,4.139,760,1.675,761,1.802,1102,3.681,1263,1.85,1265,2.024,1390,2.265,1412,2.498,1475,5.058,1557,2.498,1558,2.498,1708,3.194,1709,6.08,1710,6.08,1711,6.08,1712,6.08,1713,5.464,1714,6.08,1715,6.08,1716,6.08,1717,5.464,1718,6.08,1719,6.08,1720,6.854,1721,6.854,1722,6.854,1723,6.854,1724,4.457,1725,4.959,1726,4.959,1727,4.959,1728,4.959,1729,4.959,1730,4.86,1731,3.194,1732,6.854,1733,6.08,1734,6.854,1735,5.36,1736,6.854,1737,8.196,1738,6.08,1739,6.854,1740,3.194,1741,4.457,1742,3.194,1743,3.194,1744,3.194,1745,3.194,1746,4.457,1747,3.194,1748,2.87,1749,4.959,1750,3.194,1751,4.959,1752,3.194,1753,4.959,1754,3.194,1755,4.959,1756,3.194,1757,4.959,1758,3.194,1759,3.194,1760,3.194,1761,3.194,1762,4.457,1763,3.194,1764,8.7,1765,3.194,1766,3.194,1767,5.464,1768,3.194,1769,3.194,1770,3.194,1771,3.194,1772,3.194,1773,3.194,1774,3.194,1775,3.194,1776,2.87,1777,2.657,1778,2.87,1779,2.498,1780,2.87,1781,2.87,1782,3.194,1783,2.87,1784,3.194,1785,3.194,1786,3.194,1787,3.194,1788,3.194,1789,3.194,1790,3.194,1791,3.194,1792,3.194,1793,3.194,1794,3.194,1795,3.194,1796,3.194,1797,3.194,1798,3.194,1799,3.194,1800,3.194,1801,2.265,1802,3.194,1803,3.194,1804,3.194,1805,3.194,1806,3.194,1807,3.194,1808,3.194,1809,4.457,1810,3.194,1811,3.194,1812,3.194,1813,3.194,1814,3.194,1815,3.194,1816,3.194,1817,3.194,1818,3.194,1819,3.194,1820,3.194,1821,3.194,1822,3.194,1823,3.194,1824,3.194,1825,3.194]],["title/components/HomeComponent.html",[51,0.946,160,1.593]],["body/components/HomeComponent.html",[0,0.105,3,0.015,4,0.013,5,0.013,8,0.061,9,0.281,13,0.437,15,0.301,16,0.005,18,0.355,20,0.346,26,0.015,27,0.001,28,0.001,29,0.001,34,0.758,39,0.277,51,0.833,52,0.639,53,1.11,54,0.656,55,0.665,56,0.665,57,0.665,61,1.012,62,1.461,63,0.631,64,2.905,65,3.224,66,1.805,68,1.125,70,1.125,72,4.173,73,1.101,76,1.718,80,0.191,82,3.324,84,0.325,85,0.318,86,2.827,89,3.599,93,1.101,94,1.622,101,0.398,102,0.393,103,3.328,105,0.325,106,1.247,107,1.99,108,1.177,112,3.324,114,3.22,118,0.607,121,3.906,123,3.719,125,0.522,126,1.125,127,1.11,128,0.665,129,1.718,130,0.665,131,0.665,132,0.639,133,1.125,134,0.639,135,0.665,136,0.639,137,0.665,138,0.631,139,1.174,140,2.512,141,0.639,142,1.332,143,1.718,144,0.631,145,0.639,146,0.665,147,0.639,148,1.125,149,0.631,150,0.656,151,0.639,152,0.522,153,0.665,154,0.631,155,0.665,156,0.631,157,0.665,158,0.639,159,0.665,160,1.65,161,0.665,162,0.639,163,0.665,164,0.665,165,0.631,166,0.591,167,0.639,168,0.665,169,0.639,170,0.665,171,0.639,172,0.569,173,0.665,174,0.639,175,0.665,176,0.639,177,0.665,178,0.639,179,0.974,180,0.631,181,0.639,182,0.665,183,0.639,184,1.315,185,0.639,186,1.663,187,0.631,188,0.639,189,0.665,190,0.639,191,0.522,192,0.665,193,0.639,194,0.656,195,0.665,196,0.639,197,0.665,198,0.639,199,0.665,200,0.631,201,1.643,202,0.639,203,0.665,204,1.367,205,0.665,206,0.639,207,0.665,208,0.639,209,0.639,210,0.639,211,0.987,212,0.631,213,0.639,214,0.802,215,0.665,216,0.631,217,0.639,218,0.665,219,0.639,220,0.639,221,0.516,222,0.665,223,0.665,227,1.161,231,0.598,242,0.959,250,1.065,253,2.333,254,0.398,258,1.117,261,3.415,265,1.117,276,2.516,277,2.181,278,3.087,283,2.985,284,2.359,295,3.893,296,1.801,298,2.394,299,0.874,300,1.937,301,2.064,304,1.065,306,0.78,308,0.845,310,2.172,314,1.69,318,2.183,320,1.687,332,2.287,336,1.76,340,1.383,341,1.288,342,2.046,343,2.658,345,3.57,346,3.719,354,4.101,355,4.101,356,2.686,357,2.686,358,2.686,366,2.686,377,4.033,378,1.441,390,4.877,391,0.859,393,0.923,399,1.146,401,2.686,421,2.516,505,1.69,506,1.69,518,5.286,542,4.363,589,2.435,593,4.515,649,1.09,650,1.117,651,1.117,666,0.923,765,1.76,868,1.332,1190,1.889,1203,1.508,1204,1.589,1205,1.589,1209,2.252,1210,3.57,1211,2.686,1212,2.686,1229,5.05,1233,1.508,1245,2.857,1248,1.332,1251,1.383,1285,2.338,1342,3.488,1348,5.636,1350,4.713,1419,2.686,1475,2.857,1566,2.686,1587,3.086,1588,2.857,1589,1.589,1730,3.163,1801,2.435,1826,2.031,1827,4.46,1828,3.434,1829,4.877,1830,4.46,1831,5.244,1832,5.244,1833,4.46,1834,4.46,1835,4.363,1836,6.775,1837,3.434,1838,2.031,1839,2.031,1840,2.031,1841,2.031,1842,2.031,1843,2.031,1844,3.434,1845,2.031,1846,3.434,1847,2.031,1848,2.031,1849,2.031,1850,2.031,1851,1.826,1852,1.826,1853,2.031,1854,2.031,1855,2.031,1856,2.031,1857,2.031,1858,2.031,1859,2.031,1860,2.031,1861,2.031,1862,1.826,1863,2.031,1864,2.031,1865,2.031,1866,1.826,1867,2.031,1868,2.549,1869,2.031,1870,2.031,1871,2.031,1872,2.031,1873,2.031,1874,2.031,1875,2.031,1876,2.031,1877,5.268,1878,2.031,1879,1.69,1880,2.031,1881,2.031,1882,4.713,1883,3.086,1884,2.031,1885,2.031,1886,3.434,1887,5.717,1888,3.434,1889,3.086,1890,4.363,1891,3.434,1892,3.434,1893,3.434,1894,4.101,1895,3.434,1896,6.362,1897,3.434,1898,3.434,1899,4.713,1900,3.434,1901,3.434,1902,3.086,1903,3.434,1904,3.434,1905,2.031,1906,5.244,1907,5.244,1908,3.086,1909,3.434,1910,3.434,1911,3.434,1912,3.434,1913,5.244,1914,3.434,1915,3.434,1916,3.434,1917,3.434,1918,3.434,1919,3.434,1920,3.434,1921,3.434,1922,3.434,1923,3.434,1924,2.857,1925,3.434,1926,3.434,1927,3.086,1928,2.857,1929,2.857,1930,3.086,1931,3.434,1932,3.434,1933,3.086,1934,3.086,1935,4.713,1936,3.434,1937,3.086,1938,3.086,1939,3.434,1940,3.434,1941,3.434,1942,3.434,1943,3.086,1944,3.434,1945,3.434,1946,3.434,1947,3.086,1948,3.434,1949,3.434,1950,3.434,1951,3.434,1952,3.434,1953,3.434,1954,3.434,1955,3.434,1956,3.434,1957,3.434,1958,1.589,1959,1.69,1960,1.69,1961,1.69,1962,3.086,1963,1.826,1964,1.826,1965,1.826,1966,1.69,1967,2.031,1968,1.69,1969,5.293,1970,4.46,1971,3.086,1972,3.086,1973,3.086,1974,4.363,1975,4.713,1976,3.434,1977,3.893,1978,3.086,1979,3.086,1980,2.857,1981,3.086,1982,3.086,1983,3.086,1984,2.857,1985,2.857,1986,3.086,1987,2.031,1988,4.46,1989,3.434,1990,2.031]],["title/classes/InsertTagDto.html",[0,0.262,1991,4.55]],["body/classes/InsertTagDto.html",[0,0.402,2,1.143,3,0.058,4,0.051,5,0.051,8,0.233,9,0.749,15,0.328,16,0.004,18,0.328,22,1.361,26,0.058,27,0.003,28,0.004,29,0.003,31,4.684,1304,5.338,1991,8.211,1992,9.136,1993,7.768,1994,7.768]],["title/components/InvalidCredentialsComponent.html",[51,0.946,162,1.593]],["body/components/InvalidCredentialsComponent.html",[0,0.207,3,0.03,4,0.026,5,0.026,8,0.12,9,0.482,13,0.684,15,0.325,16,0.004,18,0.346,26,0.03,27,0.002,28,0.003,29,0.002,34,1.185,39,0.23,51,1.302,52,1.259,53,1.9,54,1.293,55,1.311,56,1.311,57,1.311,61,1.733,62,2.284,63,1.242,64,3.069,65,3.405,66,1.669,68,1.926,70,1.926,73,1.235,76,2.518,78,3.857,80,0.376,84,0.641,85,0.625,93,0.84,94,1.627,104,4.281,105,0.641,125,1.028,126,1.926,127,1.9,128,1.311,129,2.518,130,1.311,131,1.311,132,1.259,133,1.926,134,1.259,135,1.311,136,1.259,137,1.311,138,1.242,139,0.802,140,3.086,141,1.259,142,1.952,143,2.518,144,1.242,145,1.259,146,1.311,147,1.259,148,1.926,149,1.242,150,1.293,151,1.259,152,1.028,153,1.311,154,1.242,155,1.311,156,1.242,157,1.311,158,1.259,159,1.311,160,1.259,161,1.311,162,2.418,163,3.086,164,1.311,165,1.242,166,1.164,167,1.259,168,1.311,169,1.259,170,1.311,171,1.259,172,1.121,173,1.311,174,1.259,175,1.311,176,1.259,177,1.311,178,1.259,179,1.669,180,1.242,181,1.259,182,1.311,183,1.259,184,1.179,185,1.259,186,1.373,187,1.242,188,1.259,189,1.311,190,1.259,191,1.028,192,1.311,193,1.259,194,1.293,195,1.311,196,1.259,197,1.311,198,1.259,199,1.311,200,1.242,201,1.121,202,1.259,203,1.311,204,1.226,205,1.311,206,1.259,207,1.311,208,1.259,209,1.259,210,1.259,211,1.69,212,1.242,213,1.259,214,1.373,215,1.311,216,1.242,217,1.259,218,1.311,219,1.259,220,1.259,221,1.016,222,1.311,223,1.311,227,1.165,254,0.783,278,3.73,282,2.457,305,3.129,341,3.728,344,2.536,399,2.257,1713,6.266,1767,7.359,1777,3.329,1995,8.562,1996,7.695,1997,4.001,1998,7.686,1999,6.973,2000,5.881,2001,7.359,2002,5.881,2003,4.001,2004,4.001,2005,4.001]],["title/components/InvoiceLayoutComponent.html",[51,0.946,165,1.572]],["body/components/InvoiceLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,2.497,166,2.713,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,483,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,2006,6.621]],["title/modules/InvoiceLayoutModule.html",[425,1.681,2007,3.96]],["body/modules/InvoiceLayoutModule.html",[0,0.356,3,0.051,4,0.045,5,0.045,16,0.004,26,0.051,27,0.003,28,0.004,29,0.003,39,0.331,105,1.1,125,1.766,166,2,167,3.165,191,1.766,398,2.38,425,2.282,427,2.907,428,3.243,429,4.182,430,3.243,431,3.376,432,3.065,439,4.942,443,4.004,444,3.308,446,3.855,447,3.784,453,3.689,454,3.689,483,5.375,501,3.181,536,3.78,604,4.085,606,3.982,785,4.22,2006,6.176,2007,8.056,2008,6.176,2009,6.873,2010,6.176,2011,6.873,2012,6.873,2013,6.873]],["title/classes/InvoiceModel.html",[0,0.262,1263,2.934]],["body/classes/InvoiceModel.html",[0,0.354,2,1.006,3,0.051,4,0.045,5,0.045,8,0.205,9,0.693,12,2.171,15,0.43,16,0.004,17,5.568,18,0.43,20,0.854,22,1.545,26,0.051,27,0.003,28,0.004,29,0.003,1123,7.185,1236,6.82,1263,4.903,2014,6.84,2015,8.257,2016,8.257,2017,6.84,2018,6.84,2019,6.84,2020,6.84,2021,6.84,2022,6.84,2023,6.84]],["title/injectables/InvoiceService.html",[613,1.419,2024,4.212]],["body/injectables/InvoiceService.html",[0,0.364,3,0.052,4,0.046,5,0.046,8,0.211,13,0.691,15,0.297,16,0.005,18,0.364,26,0.052,27,0.003,28,0.004,29,0.003,39,0.328,73,1.809,80,0.661,84,1.127,85,1.101,93,1.479,105,1.127,110,2.307,118,2.102,372,3.459,397,3.323,457,3.533,613,2.414,614,2.979,623,4.197,624,5.333,626,5.134,629,4.572,649,3.78,650,3.873,651,3.873,658,3.61,1263,4.08,1265,4.464,2024,7.166,2025,7.042,2026,9.697,2027,7.042,2028,7.042,2029,7.042]],["title/injectables/InvoiceState.html",[613,1.419,1682,3.96]],["body/injectables/InvoiceState.html",[0,0.263,3,0.038,4,0.033,5,0.033,8,0.152,13,0.909,15,0.379,16,0.005,18,0.379,26,0.038,27,0.002,28,0.003,29,0.002,33,5.323,39,0.327,64,2.286,73,1.463,80,0.477,84,1.436,85,1.402,93,1.797,94,1.928,105,0.813,110,1.664,118,2.081,124,1.921,225,1.922,231,1.384,299,3.684,306,1.95,310,2.715,613,1.953,614,2.149,666,3.165,683,6.089,686,4.884,709,3.028,710,2.866,711,3.119,717,4.279,922,3.603,923,3.603,924,3.028,926,6.077,927,4.566,946,3.603,1263,4.038,1265,3.22,1270,6.077,1273,5.497,1274,5.827,1275,5.521,1682,5.45,1690,4.566,2024,7.707,2030,5.08,2031,5.08,2032,5.08,2033,6.969,2034,6.969,2035,5.08,2036,6.263,2037,6.969,2038,5.08,2039,6.969,2040,5.08,2041,6.969,2042,6.969,2043,5.08,2044,5.08,2045,5.08,2046,3.973,2047,4.227,2048,5.08,2049,5.08,2050,3.771,2051,5.08]],["title/interfaces/InvoiceStateModel.html",[244,1.014,1274,3.447]],["body/interfaces/InvoiceStateModel.html",[0,0.488,3,0.048,4,0.042,5,0.042,8,0.195,9,0.671,12,1.936,15,0.41,16,0.005,22,0.968,26,0.073,27,0.003,28,0.004,29,0.003,34,1.104,39,0.214,80,0.77,166,2.932,225,1.349,231,1.64,232,2.201,244,1.302,249,1.691,252,2.132,254,1.604,270,1.691,512,2.616,729,3.666,772,3.26,924,3.873,926,4.263,1263,5.63,1265,4.119,1270,4.263,1271,4.824,1273,5.749,1274,5.579,1275,3.873,1276,4.608]],["title/components/InvoicesComponent.html",[51,0.946,167,1.593]],["body/components/InvoicesComponent.html",[0,0.165,3,0.024,4,0.021,5,0.021,8,0.096,9,0.406,12,1.618,13,0.596,15,0.358,16,0.005,17,4.935,18,0.382,20,0.5,26,0.024,27,0.001,28,0.002,29,0.001,34,1.032,39,0.279,51,1.134,52,1.004,53,1.601,54,1.031,55,1.045,56,1.045,57,1.045,61,1.46,62,1.99,63,0.99,64,3.024,65,3.355,66,1.406,68,1.623,70,1.623,73,1.04,76,2.244,80,0.3,84,0.511,85,0.499,93,1.04,94,1.681,101,0.624,102,0.617,105,0.511,118,0.952,125,0.82,126,1.623,127,1.601,128,1.045,129,2.244,130,1.045,131,1.045,132,1.004,133,1.623,134,1.004,135,1.045,136,1.004,137,1.045,138,0.99,139,0.639,140,2.912,141,1.004,142,1.739,143,2.244,144,0.99,145,1.004,146,1.045,147,1.004,148,1.623,149,0.99,150,1.031,151,1.004,152,0.82,153,1.045,154,0.99,155,1.045,156,0.99,157,1.045,158,1.004,159,1.045,160,1.004,161,1.045,162,1.004,163,1.045,164,1.045,165,0.99,166,0.928,167,2.155,168,1.045,169,1.004,170,1.045,171,1.004,172,0.894,173,1.045,174,1.004,175,1.045,176,1.004,177,1.045,178,1.004,179,1.406,180,0.99,181,1.004,182,1.045,183,1.004,184,1.791,185,1.004,186,1.157,187,0.99,188,1.004,189,1.045,190,1.004,191,0.82,192,1.045,193,1.004,194,1.031,195,1.045,196,1.004,197,1.045,198,1.004,199,1.045,200,0.99,201,0.894,202,1.004,203,1.045,204,1.518,205,1.045,206,1.004,207,1.045,208,1.004,209,1.004,210,1.004,211,1.424,212,0.99,213,1.004,214,1.157,215,1.045,216,0.99,217,1.004,218,1.045,219,1.004,220,1.004,221,0.81,222,1.045,223,1.045,227,1.677,231,1.366,254,0.624,276,3.427,277,3.085,278,3.501,282,1.959,283,3.578,284,2.985,298,3.261,299,2.615,300,2.795,301,3.633,304,1.673,306,1.225,308,1.327,310,1.089,320,1.567,332,1.636,336,1.636,342,1.901,343,1.901,391,1.349,393,1.449,924,1.901,1190,2.725,1236,5.084,1248,2.092,1251,2.172,1273,5.039,1275,1.901,1666,2.867,1686,2.495,1801,3.514,2015,4.453,2016,4.453,2046,2.495,2052,3.19,2053,6.075,2054,4.955,2055,5.46,2056,5.054,2057,5.46,2058,6.85,2059,4.955,2060,3.19,2061,3.19,2062,3.19,2063,3.19,2064,3.19,2065,5.054,2066,4.122,2067,3.19,2068,5.46,2069,4.453,2070,3.19,2071,3.19,2072,3.19,2073,2.654,2074,2.495,2075,2.867,2076,2.867,2077,4.955,2078,3.19,2079,3.19,2080,3.19,2081,2.867,2082,3.19,2083,2.867,2084,3.19,2085,4.955,2086,4.955,2087,4.453,2088,4.955,2089,6.531,2090,4.955,2091,4.955,2092,4.955,2093,2.654]],["title/classes/ItemTag.html",[0,0.262,2094,3.96]],["body/classes/ItemTag.html",[0,0.383,2,1.09,3,0.055,4,0.048,5,0.048,8,0.222,9,0.728,12,2.248,13,0.933,15,0.402,16,0.004,18,0.402,20,0.896,22,1.469,26,0.055,27,0.003,28,0.004,29,0.003,2094,6.946,2095,9.864,2096,7.406,2097,7.914,2098,7.406,2099,7.406,2100,7.406]],["title/classes/Key.html",[0,0.262,511,3.96]],["body/classes/Key.html",[0,0.397,2,1.128,3,0.057,4,0.05,5,0.05,8,0.229,9,0.743,15,0.383,16,0.004,18,0.383,20,1.007,26,0.057,27,0.003,28,0.004,29,0.003,511,7.089,577,5.308,2101,7.664,2102,9.652,2103,7.664,2104,7.664]],["title/classes/Login.html",[0,0.262,172,1.419]],["body/classes/Login.html",[0,0.499,2,0.798,3,0.04,4,0.035,5,0.035,8,0.162,9,0.597,13,0.532,15,0.431,16,0.005,18,0.348,20,0.83,22,1.085,26,0.073,27,0.002,28,0.003,29,0.002,34,1.605,39,0.24,80,0.51,84,0.869,85,0.848,101,1.062,102,1.05,124,2.052,139,1.087,172,2.465,221,1.378,225,1.825,227,1.443,228,2.052,231,1.729,232,2.32,240,1.559,244,1.087,254,1.849,257,2.523,394,4.008,395,4.962,577,5.396,590,5.468,591,3.332,618,3.912,621,3.062,645,3.883,652,4.417,653,3.062,654,3.44,674,3.234,675,3.234,679,3.332,730,3.56,731,4.329,732,3.332,733,3.373,734,3.44,1254,4.244,2105,7.288,2106,5.427]],["title/components/LoginComponent.html",[51,0.946,169,1.593]],["body/components/LoginComponent.html",[0,0.144,3,0.021,4,0.018,5,0.018,8,0.084,9,0.365,13,0.546,15,0.313,16,0.005,18,0.375,20,0.45,26,0.021,27,0.001,28,0.002,29,0.001,34,0.946,39,0.314,51,1.04,52,0.878,53,1.44,54,0.901,55,0.914,56,0.914,57,0.914,61,1.314,62,1.824,63,0.866,64,2.993,65,3.321,66,1.265,68,1.46,70,1.46,73,0.936,76,2.083,80,0.262,82,4.031,84,0.447,85,0.436,86,3.529,89,4.269,93,1.169,94,1.76,101,0.872,102,0.862,103,3.415,105,0.447,106,1.713,107,2.583,108,1.616,110,0.914,112,4.031,114,3.418,118,1.331,121,4.778,122,3.309,123,4.51,125,0.717,126,1.46,127,1.44,128,0.914,129,2.083,130,0.914,131,0.914,132,0.878,133,1.46,134,0.878,135,0.914,136,0.878,137,0.914,138,0.866,139,0.559,140,2.8,141,0.878,142,1.615,143,2.083,144,0.866,145,0.878,146,0.914,147,0.878,148,1.46,149,0.866,150,0.901,151,0.878,152,1.431,153,0.914,154,0.866,155,0.914,156,0.866,157,0.914,158,0.878,159,0.914,160,0.878,161,0.914,162,0.878,163,0.914,164,0.914,165,0.866,166,0.812,167,0.878,168,0.914,169,2.001,170,0.914,171,0.878,172,1.782,173,0.914,174,0.878,175,0.914,176,0.878,177,0.914,178,0.878,179,1.265,180,0.866,181,0.878,182,0.914,183,0.878,184,0.822,185,0.878,186,1.041,187,0.866,188,0.878,189,0.914,190,0.878,191,1.146,192,0.914,193,0.878,194,0.901,195,0.914,196,0.878,197,0.914,198,0.878,199,0.914,200,0.866,201,0.782,202,0.878,203,0.914,204,1.706,205,0.914,206,0.878,207,0.914,208,0.878,209,0.878,210,0.878,211,1.281,212,0.866,213,0.878,214,1.041,215,0.914,216,0.866,217,0.878,218,0.914,219,0.878,220,0.878,221,0.708,222,0.914,223,0.914,227,1.102,231,0.776,242,1.316,276,3.141,277,2.316,278,3.44,283,3.132,284,2.559,298,2.988,299,1.2,300,2.515,301,2.577,304,1.463,306,1.071,308,1.16,309,1.399,310,2.373,311,2.07,312,2.337,313,2.181,318,2.368,320,3.415,332,2.285,336,2.285,340,1.899,341,3.529,342,2.657,343,2.657,344,1.768,377,4.407,380,4.863,381,3.47,382,1.616,391,1.18,393,1.267,395,1.574,398,0.966,399,1.574,402,2.07,421,2.515,518,4.72,593,5.019,594,4.863,666,2.025,676,2.32,766,1.616,767,2.657,924,1.662,930,1.713,967,1.463,1183,7.264,1190,2.452,1203,2.07,1204,2.181,1205,2.181,1209,2.924,1210,3.79,1211,3.486,1212,3.486,1229,4.51,1275,2.657,1283,2.825,1427,2.32,1462,4.632,1583,4.973,1686,2.181,1687,2.32,1688,2.507,1862,4.006,1866,2.507,1882,5.715,2046,2.181,2107,2.789,2108,5.567,2109,4.458,2110,5.567,2111,5.567,2112,6.359,2113,6.359,2114,5.567,2115,4.458,2116,2.789,2117,2.789,2118,2.789,2119,2.789,2120,2.789,2121,2.789,2122,2.789,2123,2.789,2124,2.507,2125,2.789,2126,2.789,2127,2.789,2128,2.32,2129,2.507,2130,2.789,2131,2.07,2132,2.507,2133,2.789,2134,2.789,2135,2.789,2136,2.789,2137,2.789,2138,2.789,2139,2.789,2140,2.789,2141,2.789,2142,2.789,2143,2.789,2144,2.789,2145,2.507,2146,2.789,2147,6.359,2148,3.486,2149,3.708]],["title/components/LoginFirstComponent.html",[51,0.946,171,1.593]],["body/components/LoginFirstComponent.html",[0,0.198,3,0.028,4,0.025,5,0.025,8,0.115,9,0.467,13,0.559,15,0.241,16,0.004,18,0.356,26,0.028,27,0.002,28,0.002,29,0.002,34,1.156,39,0.224,51,1.27,52,1.207,53,1.842,54,1.239,55,1.256,56,1.256,57,1.256,61,1.68,62,2.228,63,1.191,64,3.061,65,3.396,66,1.617,68,1.867,70,1.867,73,1.197,76,2.466,80,0.639,89,4.623,93,0.805,94,1.061,103,3.341,104,5.507,105,0.614,106,4.176,107,2.222,108,2.222,114,2.355,118,1.702,123,5.34,125,0.986,126,1.867,127,1.842,128,1.256,129,2.466,130,1.256,131,1.256,132,1.207,133,1.867,134,1.207,135,1.256,136,1.207,137,1.256,138,1.191,139,0.768,140,3.055,141,1.207,142,1.912,143,2.466,144,1.191,145,1.207,146,1.256,147,1.207,148,1.867,149,1.191,150,1.239,151,1.207,152,0.986,153,1.256,154,1.191,155,1.256,156,1.191,157,1.256,158,1.207,159,1.256,160,1.207,161,1.256,162,1.207,163,2.636,164,1.256,165,1.191,166,1.116,167,1.207,168,1.256,169,1.207,170,1.256,171,2.369,172,2.613,173,1.256,174,1.207,175,1.256,176,1.207,177,1.256,178,1.207,179,1.617,180,1.191,181,1.207,182,1.256,183,1.207,184,1.13,185,1.207,186,1.331,187,1.191,188,1.207,189,1.256,190,1.207,191,0.986,192,1.256,193,1.207,194,1.239,195,1.256,196,1.207,197,1.256,198,1.207,199,1.256,200,1.191,201,1.075,202,1.207,203,1.256,204,1.175,205,1.256,206,1.207,207,1.256,208,1.207,209,1.207,210,1.207,211,1.638,212,1.191,213,1.207,214,1.331,215,1.256,216,1.191,217,1.207,218,1.256,219,1.207,220,1.207,221,0.974,222,1.256,223,1.256,278,3.394,305,2.999,341,3.613,344,2.431,593,3.059,594,3.738,1190,3.135,1583,4.458,2150,8.731,2151,7.846,2152,3.835,2153,5.7,2154,6.802,2155,5.7,2156,6.802,2157,7.53,2158,7.53,2159,5.7,2160,3.835,2161,3.835,2162,3.835,2163,3.835,2164,3.835,2165,3.835,2166,3.835,2167,3.835,2168,3.835,2169,3.835]],["title/classes/LoginResponse.html",[0,0.262,646,3.96]],["body/classes/LoginResponse.html",[0,0.39,2,1.11,3,0.056,4,0.049,5,0.049,8,0.226,9,0.736,15,0.379,16,0.004,18,0.379,20,0.906,26,0.056,27,0.003,28,0.004,29,0.003,34,1.629,39,0.248,645,4.524,646,7.022,652,5.146,653,4.255,2170,9.587,2171,7.543,2172,7.543,2173,7.543]],["title/classes/Logout.html",[0,0.262,394,2.785]],["body/classes/Logout.html",[0,0.505,2,0.838,3,0.042,4,0.037,5,0.037,8,0.171,9,0.617,15,0.428,16,0.005,18,0.241,20,0.851,22,1.121,26,0.073,27,0.002,28,0.003,29,0.002,34,1.628,39,0.248,101,1.115,102,1.102,124,2.154,139,1.141,172,2.109,221,1.447,225,1.562,228,2.154,231,1.746,232,2.343,240,1.637,244,1.141,254,1.875,257,2.606,394,4.932,395,4.247,577,5.454,590,4.486,591,3.498,618,4.04,621,3.214,645,3.978,652,4.525,653,3.214,654,3.611,674,3.395,675,3.395,679,3.498,730,3.737,731,3.552,732,3.498,733,3.484,734,3.611,2174,5.697]],["title/modules/MaterialModule.html",[425,1.681,2175,3.758]],["body/modules/MaterialModule.html",[0,0.245,3,0.035,4,0.031,5,0.031,16,0.004,26,0.035,27,0.002,28,0.003,29,0.002,39,0.356,105,0.757,324,2.035,427,2,429,2.148,432,2.108,446,2.148,447,2.956,501,2.188,604,3.191,1230,3.933,1735,3.698,1776,4.249,1778,4.249,1779,5.185,1781,4.249,2073,3.933,2074,3.698,2175,4.921,2176,4.249,2177,6.881,2178,4.728,2179,5.958,2180,4.728,2181,6.881,2182,6.63,2183,6.63,2184,5.958,2185,4.728,2186,5.958,2187,6.63,2188,5.958,2189,4.728,2190,5.958,2191,4.728,2192,5.958,2193,6.881,2194,4.728,2195,6.881,2196,4.728,2197,6.881,2198,4.728,2199,5.958,2200,4.728,2201,6.881,2202,6.881,2203,4.728,2204,6.881,2205,4.728,2206,4.249,2207,5.958,2208,6.881,2209,4.249,2210,6.881,2211,4.728,2212,6.881,2213,6.881,2214,4.728,2215,5.958,2216,4.728,2217,6.881,2218,4.728,2219,6.881,2220,4.728,2221,6.881,2222,5.958,2223,4.728,2224,5.958,2225,4.728,2226,5.958,2227,4.728,2228,5.958,2229,4.728,2230,6.881,2231,4.728,2232,6.881,2233,4.728,2234,6.881,2235,4.728,2236,5.958,2237,4.728,2238,6.881,2239,3.698,2240,6.881,2241,4.728,2242,5.958,2243,4.728,2244,6.881,2245,5.958,2246,4.728,2247,5.958,2248,4.728,2249,6.881,2250,4.728,2251,5.958,2252,4.728,2253,6.881,2254,5.958,2255,4.728,2256,5.958,2257,4.728,2258,6.881,2259,4.728,2260,5.958,2261,4.728,2262,4.728,2263,5.958,2264,4.728,2265,4.728,2266,6.881,2267,6.881,2268,4.728,2269,6.881]],["title/modules/MdbModule.html",[425,1.681,2270,3.758]],["body/modules/MdbModule.html",[0,0.356,3,0.051,4,0.045,5,0.045,16,0.004,26,0.063,27,0.003,28,0.004,29,0.003,39,0.28,105,1.103,324,2.965,427,2.914,430,3.251,432,3.072,446,3.129,447,3.79,1149,5.388,2270,6.309,2271,6.191,2272,6.889,2273,7.638,2274,7.638,2275,7.638,2276,6.191,2277,6.889,2278,6.889,2279,6.191,2280,7.638,2281,6.191,2282,7.638,2283,6.889,2284,6.889,2285,7.638,2286,7.638,2287,7.638,2288,6.191,2289,6.889,2290,7.638,2291,7.638,2292,6.889,2293,6.191,2294,8.283,2295,6.191,2296,5.731,2297,6.191,2298,6.191,2299,5.731,2300,5.731,2301,6.191,2302,6.191,2303,5.731,2304,6.191,2305,6.191]],["title/classes/Message.html",[0,0.262,377,3.21]],["body/classes/Message.html",[0,0.374,2,1.062,3,0.053,4,0.047,5,0.047,8,0.216,9,0.717,13,0.708,15,0.397,16,0.004,18,0.397,20,1.049,26,0.053,27,0.003,28,0.004,29,0.003,80,0.678,84,1.156,85,1.128,227,1.983,254,1.413,377,5.544,531,5.014,2306,7.219,2307,10.017,2308,7.219,2309,7.219,2310,8.746]],["title/components/NavbarComponent.html",[51,0.946,174,1.593]],["body/components/NavbarComponent.html",[0,0.131,3,0.019,4,0.016,5,0.016,8,0.123,9,0.337,13,0.51,15,0.316,16,0.005,18,0.329,26,0.019,27,0.001,28,0.002,29,0.001,34,0.884,39,0.257,51,0.972,52,0.794,53,1.329,54,0.816,55,0.827,56,0.827,57,0.827,61,1.212,62,1.704,63,0.784,64,2.968,65,3.293,66,1.167,68,1.347,70,1.347,73,0.863,76,1.965,80,0.386,84,0.404,85,0.395,93,0.53,94,1.138,101,0.494,102,0.488,105,0.404,125,0.649,126,1.347,127,1.329,128,0.827,129,1.965,130,0.827,131,0.827,132,0.794,133,1.347,134,0.794,135,0.827,136,0.794,137,0.827,138,0.784,139,1.496,140,2.712,141,0.794,142,1.523,143,1.965,144,0.784,145,0.794,146,0.827,147,0.794,148,1.347,149,0.784,150,0.816,151,0.794,152,0.649,153,0.827,154,0.784,155,0.827,156,0.784,157,0.827,158,0.794,159,0.827,160,0.794,161,0.827,162,0.794,163,0.827,164,0.827,165,0.784,166,0.734,167,0.794,168,0.827,169,0.794,170,0.827,171,0.794,172,1.851,173,0.827,174,1.887,175,0.827,176,0.794,177,0.827,178,0.794,179,1.167,180,0.784,181,0.794,182,0.827,183,0.794,184,0.744,185,0.794,186,0.96,187,0.784,188,0.794,189,0.827,190,0.794,191,0.649,192,0.827,193,0.794,194,0.816,195,0.827,196,0.794,197,0.827,198,0.794,199,0.827,200,0.784,201,1.851,202,0.794,203,0.827,204,0.773,205,0.827,206,0.794,207,0.827,208,0.794,209,0.794,210,0.794,211,1.181,212,0.784,213,0.794,214,0.96,215,0.827,216,0.784,217,0.794,218,0.827,219,0.794,220,0.794,221,1.677,222,0.827,223,0.827,227,1.595,231,1.044,277,2.748,278,3.333,284,2.659,296,3.464,298,2.793,299,1.77,304,1.323,308,1.05,318,0.94,331,4.429,341,3.803,354,6.09,355,6.09,356,4.692,357,4.692,358,4.692,366,4.692,381,3.692,391,1.068,393,1.146,394,3.3,397,1.191,398,0.874,421,3.385,542,2.1,588,3.413,618,3.22,629,2.556,710,1.424,765,3.076,1021,2.525,1030,1.94,1248,3.413,1250,2.1,1251,2.799,1273,3.476,1304,2.261,1563,2.1,1589,4.692,1779,1.974,1877,3.695,1887,7.237,1958,4.692,1959,2.1,1960,2.1,1961,2.1,1966,3.421,1968,2.1,1969,7.192,1971,5.392,1972,5.392,1973,5.392,1974,6.478,1975,6.998,1977,5.78,1978,5.392,1979,5.392,1980,4.991,1981,5.392,1982,5.392,1983,5.392,1984,4.991,1985,4.991,1986,5.392,2239,1.974,2311,2.524,2312,4.112,2313,5.203,2314,4.112,2315,5.203,2316,4.329,2317,6.366,2318,2.524,2319,7.083,2320,2.524,2321,2.524,2322,4.112,2323,2.524,2324,2.524,2325,2.524,2326,4.112,2327,4.112,2328,4.112,2329,5.203,2330,2.524,2331,2.524,2332,4.329,2333,4.112,2334,2.524,2335,2.524,2336,2.524,2337,2.268,2338,5.999,2339,4.112,2340,4.112,2341,4.112,2342,3.695,2343,4.112,2344,4.112,2345,4.112,2346,4.112,2347,4.112,2348,4.112,2349,2.524,2350,3.695,2351,2.268,2352,2.1,2353,4.991,2354,2.1,2355,1.974,2356,2.524,2357,2.524,2358,5.203,2359,4.112,2360,2.524,2361,5.203,2362,4.112,2363,2.524,2364,4.112,2365,4.453,2366,4.112,2367,5.203,2368,4.112,2369,2.524,2370,2.268,2371,2.524,2372,2.524,2373,2.524,2374,2.1,2375,3.421,2376,3.695,2377,4.112,2378,3.421,2379,3.421,2380,2.1,2381,2.524,2382,2.524,2383,2.524,2384,2.524,2385,5.203,2386,4.112]],["title/modules/NgxModule.html",[425,1.681,2387,3.758]],["body/modules/NgxModule.html",[0,0.346,3,0.05,4,0.044,5,0.044,16,0.004,26,0.05,27,0.003,28,0.004,29,0.003,39,0.346,105,1.072,324,2.882,399,5.872,427,2.833,429,3.041,432,2.986,443,3.159,446,3.041,447,3.724,501,3.099,604,4.019,803,3.594,1735,5.237,1777,5.571,2276,6.018,2279,6.018,2281,6.018,2288,6.018,2296,5.571,2299,5.571,2300,5.571,2303,5.571,2387,6.198,2388,6.018,2389,6.696,2390,6.696,2391,6.696,2392,6.696,2393,6.696,2394,6.696,2395,6.696,2396,9.1,2397,8.351,2398,6.018,2399,6.696,2400,6.696,2401,7.504,2402,8.178,2403,6.018,2404,6.018,2405,6.018,2406,6.696]],["title/components/NoInternetComponent.html",[51,0.946,176,1.593]],["body/components/NoInternetComponent.html",[0,0.149,3,0.021,4,0.019,5,0.019,8,0.086,9,0.375,13,0.558,15,0.274,16,0.005,18,0.298,20,0.574,26,0.021,27,0.001,28,0.002,29,0.001,34,0.967,39,0.213,51,1.062,52,0.907,53,1.478,54,0.931,55,0.944,56,0.944,57,0.944,61,1.348,62,1.863,63,0.895,64,3.001,65,3.33,66,1.298,68,1.499,70,1.499,73,0.961,76,2.122,80,0.271,84,0.461,85,0.45,93,0.605,94,1.266,101,0.564,102,0.557,105,0.461,110,0.944,118,0.86,121,2.809,125,0.741,126,1.499,127,1.478,128,0.944,129,2.122,130,0.944,131,0.944,132,0.907,133,1.499,134,0.907,135,0.944,136,0.907,137,0.944,138,0.895,139,0.577,140,2.827,141,0.907,142,1.645,143,2.122,144,0.895,145,0.907,146,0.944,147,0.907,148,1.499,149,0.895,150,0.931,151,0.907,152,0.741,153,0.944,154,0.895,155,0.944,156,0.895,157,0.944,158,0.907,159,0.944,160,0.907,161,0.944,162,0.907,163,0.944,164,0.944,165,0.895,166,0.839,167,0.907,168,0.944,169,0.907,170,0.944,171,0.907,172,0.807,173,0.944,174,0.907,175,0.944,176,2.038,177,0.944,178,0.907,179,1.298,180,0.895,181,0.907,182,0.944,183,0.907,184,0.849,185,0.907,186,1.068,187,0.895,188,0.907,189,0.944,190,0.907,191,0.741,192,0.944,193,0.907,194,0.931,195,0.944,196,0.907,197,0.944,198,0.907,199,0.944,200,0.895,201,0.807,202,0.907,203,0.944,204,0.883,205,0.944,206,0.907,207,0.944,208,0.907,209,0.907,210,0.907,211,1.315,212,0.895,213,0.907,214,1.068,215,0.944,216,0.895,217,0.907,218,0.944,219,0.907,220,0.907,221,0.732,222,0.944,223,0.944,278,3.027,282,1.77,301,1.334,318,1.704,324,1.24,331,3.886,344,1.827,362,2.398,364,2.254,365,2.139,381,3.515,393,1.309,398,0.998,416,6.257,418,4.733,422,6.35,423,2.59,858,2.139,868,1.89,975,3.606,976,4.249,982,3.001,1118,4.111,1190,2.516,1233,2.139,1245,2.398,1248,4.634,1512,6.758,1566,3.578,1588,3.806,1783,5.821,1937,2.59,1968,2.398,1969,6.804,1974,2.398,1977,2.139,1980,2.398,2206,2.59,2342,2.59,2350,2.59,2352,5.878,2354,3.806,2355,2.254,2365,2.139,2370,2.59,2375,3.806,2376,2.59,2378,2.398,2379,2.398,2380,6.558,2407,7.521,2408,2.882,2409,5.689,2410,4.575,2411,5.689,2412,4.575,2413,2.882,2414,4.111,2415,4.575,2416,2.882,2417,2.882,2418,2.882,2419,2.882,2420,2.882,2421,4.575,2422,4.575,2423,2.882,2424,2.882,2425,4.575,2426,4.575,2427,4.575,2428,4.575,2429,4.575,2430,4.575,2431,7.521,2432,4.575,2433,6.478,2434,4.575,2435,4.575,2436,4.575,2437,4.111,2438,4.575,2439,6.478,2440,2.882,2441,2.882,2442,2.882,2443,2.882,2444,4.575,2445,7.066,2446,2.882,2447,2.882,2448,9.499,2449,2.882,2450,2.882,2451,2.882,2452,2.882,2453,4.575,2454,4.111,2455,4.575,2456,2.882,2457,4.575,2458,2.882,2459,5.113,2460,5.689,2461,2.882,2462,2.882,2463,2.882,2464,2.882,2465,2.882,2466,2.882,2467,2.882,2468,2.882,2469,2.882,2470,7.883,2471,8.179,2472,2.882,2473,2.882,2474,2.882,2475,4.575,2476,2.882,2477,4.575,2478,5.689,2479,2.882,2480,2.882,2481,2.882,2482,2.59,2483,2.882,2484,2.882,2485,2.882,2486,2.882,2487,2.882,2488,2.882,2489,2.882,2490,2.882,2491,2.882]],["title/classes/Notification.html",[0,0.262,2492,3.591]],["body/classes/Notification.html",[0,0.352,2,1.002,3,0.05,4,0.044,5,0.044,8,0.204,9,0.691,15,0.424,16,0.005,18,0.424,20,1.013,22,1.256,26,0.05,27,0.003,28,0.004,29,0.003,39,0.278,124,3.623,382,5.312,531,4.913,868,6.013,1357,6.805,2492,6.501,2493,6.808,2494,9.168,2495,8.239,2496,6.808,2497,6.808,2498,7.17,2499,6.808,2500,6.808,2501,6.808,2502,6.808]],["title/classes/NotificationData.html",[0,0.262,2498,3.96]],["body/classes/NotificationData.html",[0,0.393,2,1.119,3,0.056,4,0.05,5,0.05,8,0.228,9,0.739,15,0.381,16,0.004,17,4.842,18,0.381,22,1.344,26,0.056,27,0.003,28,0.004,29,0.003,1262,6.832,2498,7.055,2503,8.003,2504,9.62,2505,9.62,2506,7.603,2507,7.603]],["title/classes/NotificationEntity.html",[0,0.262,2508,4.55]],["body/classes/NotificationEntity.html",[0,0.37,2,1.052,3,0.053,4,0.047,5,0.047,8,0.214,9,0.712,12,2.213,15,0.412,16,0.004,18,0.412,20,0.983,22,1.295,26,0.053,27,0.003,28,0.004,29,0.003,39,0.235,868,6.145,1357,6.954,2492,5.068,2508,7.812,2509,9.989,2510,7.147,2511,7.943,2512,7.147,2513,7.147,2514,7.147,2515,7.147,2516,5.946]],["title/classes/NotificationPayload.html",[0,0.262,2517,4.55]],["body/classes/NotificationPayload.html",[0,0.401,2,1.14,3,0.057,4,0.05,5,0.05,8,0.232,9,0.747,15,0.327,16,0.004,18,0.327,26,0.057,27,0.003,28,0.004,29,0.003,39,0.255,2492,7.408,2503,7.589,2517,8.198,2518,7.747,2519,7.747]],["title/classes/NotificationPayloadDto.html",[0,0.262,2520,4.212]],["body/classes/NotificationPayloadDto.html",[0,0.393,2,1.119,3,0.056,4,0.05,5,0.05,8,0.228,9,0.739,15,0.381,16,0.004,18,0.381,20,1.004,26,0.056,27,0.003,28,0.004,29,0.003,868,6.31,1357,7.14,2503,8.003,2520,7.505,2521,7.603,2522,7.603,2523,7.603]],["title/injectables/NotificationsService.html",[613,1.419,1835,4.212]],["body/injectables/NotificationsService.html",[0,0.348,3,0.05,4,0.044,5,0.044,8,0.201,13,0.821,15,0.354,16,0.005,18,0.354,20,0.92,26,0.05,27,0.003,28,0.004,29,0.003,39,0.323,73,1.758,80,0.632,84,1.341,85,1.309,93,1.413,105,1.077,110,2.204,118,2.009,211,2.406,372,3.305,397,3.174,457,3.375,593,5.122,613,2.347,614,2.846,624,5.249,629,3.305,649,3.611,650,3.7,651,3.7,658,3.449,842,5.261,1835,6.967,2520,5.597,2524,6.728,2525,8.375,2526,5.597,2527,6.728,2528,6.967,2529,8.375,2530,6.728,2531,6.728,2532,6.728,2533,6.728,2534,6.728]],["title/components/OrderDetailsComponent.html",[51,0.946,178,1.593]],["body/components/OrderDetailsComponent.html",[0,0.172,3,0.025,4,0.022,5,0.022,8,0.1,9,0.419,12,1.209,13,0.612,15,0.319,16,0.004,17,3.76,18,0.337,26,0.025,27,0.001,28,0.002,29,0.001,34,1.06,39,0.274,51,1.165,52,1.047,53,1.654,54,1.075,55,1.09,56,1.09,57,1.09,61,1.509,62,2.043,63,1.033,64,3.033,65,3.365,66,1.452,68,1.677,70,1.677,73,1.075,76,2.294,80,0.312,84,0.533,85,0.52,93,0.699,94,1.416,105,0.533,110,1.09,112,3.245,125,0.855,126,1.677,127,1.654,128,1.09,129,2.294,130,1.09,131,1.09,132,1.047,133,1.677,134,1.047,135,1.09,136,1.047,137,1.09,138,1.033,139,0.667,140,2.945,141,1.047,142,1.779,143,2.294,144,1.033,145,1.047,146,1.09,147,1.047,148,1.677,149,1.033,150,1.075,151,1.047,152,0.855,153,1.09,154,1.033,155,1.09,156,1.033,157,1.09,158,1.047,159,1.09,160,1.047,161,1.09,162,1.047,163,1.09,164,1.09,165,1.033,166,1.815,167,1.047,168,1.09,169,1.047,170,1.09,171,1.047,172,0.932,173,1.09,174,1.047,175,1.09,176,1.047,177,1.09,178,2.204,179,2.697,180,1.033,181,1.047,182,1.09,183,1.047,184,0.981,185,1.047,186,1.195,187,1.033,188,1.047,189,1.09,190,1.047,191,0.855,192,1.09,193,1.047,194,1.075,195,1.09,196,1.047,197,1.09,198,1.047,199,1.09,200,1.033,201,0.932,202,1.047,203,1.09,204,1.569,205,1.09,206,1.047,207,1.09,208,1.047,209,1.047,210,1.047,211,1.471,212,1.033,213,1.047,214,1.195,215,1.09,216,1.033,217,1.047,218,1.09,219,1.047,220,1.047,221,0.845,222,1.09,223,1.09,227,1.235,231,0.891,237,2.639,238,1.484,268,2.027,276,3.52,277,2.129,278,3.619,284,2.819,298,3.349,299,1.432,300,2.888,301,2.369,304,1.745,308,1.384,318,1.906,324,1.432,332,1.706,336,1.706,342,1.983,343,1.983,352,3.8,378,2.359,391,1.407,393,1.511,398,1.152,588,2.182,589,3.63,760,3.271,761,1.877,765,2.624,970,2.602,971,3.63,972,4.879,973,4.003,975,3.954,976,4.595,982,3.358,985,2.99,991,3.143,1176,4.003,1228,4.6,1429,4.003,2089,5.827,2535,8.318,2536,7.475,2537,6.239,2538,6.505,2539,5.119,2540,2.99,2541,2.768,2542,3.327,2543,3.327,2544,2.99,2545,2.768,2546,3.327,2547,3.327,2548,3.327,2549,3.327,2550,3.327,2551,5.119,2552,4.6,2553,4.6,2554,4.6,2555,4.6,2556,5.119,2557,5.119,2558,5.119,2559,5.119,2560,5.119,2561,5.119,2562,5.119,2563,5.119,2564,5.119,2565,5.119,2566,5.119,2567,4.6,2568,4.259,2569,5.119,2570,5.119]],["title/classes/OrderDto.html",[0,0.262,762,2.389]],["body/classes/OrderDto.html",[0,0.4,2,1.137,3,0.057,4,0.05,5,0.05,8,0.231,9,0.746,15,0.326,16,0.004,18,0.326,26,0.057,27,0.003,28,0.004,29,0.003,31,4.669,39,0.255,112,4.897,735,7.675,762,4.297,2571,7.726,2572,7.726,2573,7.726]],["title/classes/OrderItemModel.html",[0,0.262,2574,4.212]],["body/classes/OrderItemModel.html",[0,0.364,2,1.036,3,0.052,4,0.046,5,0.046,8,0.211,9,0.706,12,2.199,15,0.42,16,0.004,18,0.42,22,1.562,26,0.052,27,0.003,28,0.004,29,0.003,230,4.771,268,3.686,2574,7.166,2575,10.121,2576,7.042,2577,9.307,2578,9.307,2579,7.042,2580,7.042,2581,7.042,2582,7.042,2583,7.042]],["title/components/OrderLayoutComponent.html",[51,0.946,180,1.572]],["body/components/OrderLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,2.693,180,2.497,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,485,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,2584,6.621]],["title/modules/OrderLayoutModule.html",[425,1.681,2585,3.96]],["body/modules/OrderLayoutModule.html",[0,0.345,3,0.049,4,0.043,5,0.043,16,0.004,26,0.049,27,0.003,28,0.004,29,0.003,39,0.334,105,1.067,125,1.713,178,3.142,179,1.891,181,3.142,191,1.713,398,2.308,425,2.213,427,2.819,428,3.145,429,4.124,430,3.145,431,3.274,432,2.972,439,4.905,443,3.929,444,3.208,446,3.782,447,3.713,453,3.577,454,3.577,485,5.212,501,3.085,536,3.666,604,4.007,606,3.862,785,4.092,1006,5.212,2536,5.99,2584,5.99,2585,8.134,2586,5.99,2587,6.665,2588,5.99,2589,6.665,2590,6.665,2591,6.665,2592,6.665]],["title/classes/OrderModel.html",[0,0.262,760,2.655]],["body/classes/OrderModel.html",[0,0.33,2,0.939,3,0.047,4,0.042,5,0.042,8,0.191,9,0.664,10,6.06,12,2.103,14,6.06,15,0.433,16,0.004,17,5.301,18,0.433,22,1.471,26,0.047,27,0.003,28,0.003,29,0.003,39,0.293,112,4.046,179,1.811,735,7.331,760,4.248,1123,6.962,1176,6.962,2574,7.406,2593,6.383,2594,8,2595,8.902,2596,8,2597,6.383,2598,6.383,2599,6.383,2600,6.383,2601,6.383,2602,6.383,2603,7.406,2604,6.383,2605,6.383,2606,6.383,2607,6.383,2608,6.383,2609,5.736,2610,5.736]],["title/injectables/OrderService.html",[613,1.419,2538,3.96]],["body/injectables/OrderService.html",[0,0.303,3,0.043,4,0.038,5,0.038,8,0.175,12,2.018,13,0.889,15,0.383,16,0.005,18,0.397,22,1.502,26,0.043,27,0.003,28,0.003,29,0.003,39,0.324,73,1.608,80,0.549,84,1.451,85,1.416,93,1.902,105,0.936,110,1.916,118,2.705,124,3.425,237,2.474,238,2.608,240,1.68,372,2.873,397,2.759,457,2.934,613,2.146,614,2.474,623,3.485,624,4.983,626,4.564,629,4.954,649,3.139,650,3.216,651,3.216,658,2.998,754,4.702,760,3.067,761,3.299,762,4.275,763,2.873,769,4.702,2538,5.989,2611,5.848,2612,7.658,2613,9.06,2614,5.848,2615,7.658,2616,5.848,2617,7.658,2618,5.848,2619,5.848,2620,7.658,2621,5.848,2622,5.848,2623,5.848,2624,5.848,2625,5.848]],["title/injectables/OrderState.html",[613,1.419,1684,3.96]],["body/injectables/OrderState.html",[0,0.222,3,0.032,4,0.028,5,0.028,8,0.129,13,0.908,15,0.382,16,0.005,18,0.382,26,0.032,27,0.002,28,0.003,29,0.002,33,5.417,39,0.323,64,2.087,73,1.3,80,0.403,84,1.448,85,1.414,93,1.843,94,1.714,105,0.688,110,1.407,118,2.373,124,1.624,225,1.922,231,1.264,299,3.777,306,1.649,310,2.479,613,1.735,614,1.817,666,2.813,683,6.197,686,5.173,709,3.691,710,2.423,711,2.637,717,3.802,754,5.389,760,3.808,761,2.423,764,5.038,765,4.836,766,2.489,767,4.736,769,5.389,771,5.389,773,5.389,922,3.046,923,3.046,929,3.86,946,5.149,1275,3.691,1684,4.843,1691,3.86,2036,5.565,2047,3.574,2050,3.188,2128,3.574,2538,6.864,2544,3.86,2626,4.296,2627,4.296,2628,4.296,2629,6.193,2630,6.193,2631,4.296,2632,6.193,2633,6.193,2634,4.296,2635,6.193,2636,4.296,2637,6.193,2638,4.296,2639,6.193,2640,6.193,2641,4.296,2642,6.193,2643,6.193,2644,4.296,2645,4.296,2646,4.296,2647,4.296,2648,4.296,2649,4.296,2650,4.296,2651,4.296,2652,4.296,2653,4.296,2654,4.296,2655,4.296,2656,5.565,2657,6.193,2658,4.296,2659,4.296,2660,4.296,2661,4.296]],["title/interfaces/OrderStateModel.html",[244,1.014,764,3.21]],["body/interfaces/OrderStateModel.html",[0,0.502,3,0.044,4,0.039,5,0.039,8,0.178,9,0.634,12,2.154,15,0.417,16,0.005,22,1.282,26,0.074,27,0.003,28,0.003,29,0.003,34,1.01,39,0.255,80,0.727,179,2.917,225,1.234,227,1.177,231,1.687,232,2.263,240,1.708,244,1.191,249,1.547,252,2.014,254,1.784,257,2.058,270,1.547,512,2.393,729,3.354,754,3.65,755,4.047,759,3.9,760,4.957,761,3.354,762,3.653,763,2.92,764,4.907,765,4.969,766,3.445,767,3.543,768,3.9,769,3.65,770,4.047,771,3.65,772,2.983,773,3.65]],["title/components/OrdersComponent.html",[51,0.946,181,1.593]],["body/components/OrdersComponent.html",[0,0.151,3,0.022,4,0.019,5,0.019,8,0.088,9,0.379,10,3.15,12,1.543,13,0.64,14,3.15,15,0.358,16,0.005,17,4.412,18,0.38,20,0.467,26,0.022,27,0.001,28,0.002,29,0.001,34,0.976,39,0.301,51,1.072,52,0.92,53,1.495,54,0.945,55,0.957,56,0.957,57,0.957,61,1.364,62,1.881,63,0.908,64,3.004,65,3.334,66,1.313,68,1.515,70,1.515,73,0.971,76,2.139,80,0.275,84,0.741,85,0.723,93,1.206,94,1.807,101,0.572,102,0.565,105,0.468,118,0.873,125,0.751,126,1.515,127,1.495,128,0.957,129,2.139,130,0.957,131,0.957,132,0.92,133,1.515,134,0.92,135,0.957,136,0.92,137,0.957,138,0.908,139,0.586,140,2.839,141,0.92,142,1.658,143,2.139,144,0.908,145,0.92,146,0.957,147,0.92,148,1.515,149,0.908,150,0.945,151,0.92,152,0.751,153,0.957,154,0.908,155,0.957,156,0.908,157,0.957,158,0.92,159,0.957,160,0.92,161,0.957,162,0.92,163,0.957,164,0.957,165,0.908,166,0.851,167,0.92,168,0.957,169,0.92,170,0.957,171,0.92,172,0.819,173,0.957,174,0.92,175,0.957,176,0.92,177,0.957,178,0.92,179,1.629,180,0.908,181,2.054,182,0.957,183,0.92,184,0.862,185,0.92,186,1.08,187,0.908,188,0.92,189,0.957,190,0.92,191,0.751,192,0.957,193,0.92,194,0.945,195,0.957,196,0.92,197,0.957,198,0.92,199,0.957,200,0.908,201,0.819,202,0.92,203,0.957,204,1.76,205,0.957,206,0.92,207,0.957,208,0.92,209,0.92,210,0.92,211,1.329,212,0.908,213,0.92,214,1.08,215,0.957,216,0.908,217,0.92,218,0.957,219,0.92,220,0.92,221,0.742,222,0.957,223,0.957,227,1.628,231,1.317,254,0.572,276,3.24,277,2.959,278,3.406,282,1.795,283,3.489,284,2.864,298,3.082,299,2.471,300,2.61,301,3.502,304,1.533,306,1.122,308,1.216,310,1.58,318,1.088,320,2.273,332,1.499,336,1.499,342,2.757,343,2.757,381,3.535,382,3.783,391,1.237,393,1.328,398,1.012,417,1.853,760,3.424,761,1.649,765,4.534,766,1.694,767,1.742,924,1.742,971,3.281,991,2.841,1176,5.564,1190,2.545,1248,1.917,1251,1.99,1275,1.742,1668,2.627,1686,2.286,1687,2.432,1801,3.281,2046,2.286,2055,5.161,2056,4.777,2057,5.161,2065,4.777,2066,3.849,2068,5.161,2069,4.158,2073,2.432,2074,2.286,2075,2.627,2076,2.627,2081,2.627,2083,2.627,2087,4.158,2089,6.295,2093,2.432,2128,2.432,2552,5.161,2553,4.158,2555,4.158,2596,4.158,2603,2.432,2609,2.627,2610,2.627,2656,5.161,2662,2.923,2663,5.742,2664,4.627,2665,4.627,2666,6.53,2667,4.627,2668,4.627,2669,2.923,2670,2.923,2671,2.923,2672,2.923,2673,2.923,2674,2.923,2675,2.923,2676,2.923,2677,2.923,2678,2.923,2679,4.627,2680,2.923,2681,4.627,2682,2.923,2683,2.923,2684,2.923,2685,2.923,2686,2.627,2687,5.868,2688,4.627,2689,4.627,2690,4.627]],["title/components/PaymentLayoutComponent.html",[51,0.946,183,1.593]],["body/components/PaymentLayoutComponent.html",[0,0.226,3,0.032,4,0.029,5,0.029,8,0.131,13,0.615,16,0.004,18,0.265,26,0.032,27,0.002,28,0.003,29,0.002,34,1.247,39,0.144,51,1.37,52,1.376,53,2.027,54,1.413,55,1.433,56,1.433,57,1.433,61,1.849,62,2.403,63,1.358,64,3.084,65,3.422,66,1.78,68,2.055,70,2.055,73,1.317,76,2.625,80,0.689,93,0.918,94,1.736,105,0.7,125,1.124,126,2.055,127,2.027,128,1.433,129,2.625,130,1.433,131,1.433,132,1.376,133,2.055,134,1.376,135,1.433,136,1.376,137,1.433,138,1.358,139,0.876,140,3.149,141,1.376,142,2.035,143,2.625,144,1.358,145,1.376,146,1.433,147,1.376,148,2.055,149,1.358,150,1.413,151,1.376,152,1.124,153,1.433,154,1.358,155,1.433,156,1.358,157,1.433,158,1.376,159,1.433,160,1.376,161,1.433,162,1.376,163,1.433,164,1.433,165,1.358,166,1.273,167,1.376,168,1.433,169,1.376,170,1.433,171,1.376,172,1.226,173,1.433,174,1.376,175,1.433,176,1.376,177,1.433,178,1.376,179,1.78,180,1.358,181,1.376,182,1.433,183,2.521,184,2.834,185,1.376,186,1.465,187,1.358,188,1.376,189,1.433,190,1.376,191,1.124,192,1.433,193,1.376,194,1.413,195,1.433,196,1.376,197,1.433,198,1.376,199,1.433,200,1.358,201,1.226,202,1.376,203,1.433,204,1.34,205,1.433,206,1.376,207,1.433,208,1.376,209,1.376,210,1.376,211,1.803,212,1.358,213,1.376,214,1.465,215,1.433,216,1.358,217,1.376,218,1.433,219,1.376,220,1.376,221,1.111,222,1.433,223,1.433,487,6.103,775,2.686,776,4.921,777,4.504,778,3.852,779,2.773,780,2.773,2691,6.593,2692,6.274]],["title/modules/PaymentLayoutModule.html",[425,1.681,2693,4.212]],["body/modules/PaymentLayoutModule.html",[0,0.398,3,0.057,4,0.05,5,0.05,16,0.005,26,0.057,27,0.003,28,0.004,29,0.003,39,0.299,105,1.23,427,3.251,429,3.49,446,3.49,447,4.048,487,6.393,501,3.556,604,4.369,785,4.718,2691,6.906,2693,7.553]],["title/classes/PaymentModel.html",[0,0.262,1264,2.934]],["body/classes/PaymentModel.html",[0,0.358,2,1.019,3,0.051,4,0.045,5,0.045,8,0.207,9,0.698,12,2.182,15,0.426,16,0.004,17,5.313,18,0.426,22,1.536,26,0.051,27,0.003,28,0.004,29,0.003,39,0.228,1123,7.224,1237,6.856,1264,4.939,1363,7.883,1368,5.759,2594,8.301,2694,6.923,2695,6.923,2696,6.923,2697,6.923,2698,6.923,2699,6.923,2700,6.923,2701,6.221]],["title/injectables/PaymentService.html",[613,1.419,2702,4.212]],["body/injectables/PaymentService.html",[0,0.34,3,0.049,4,0.043,5,0.043,8,0.197,13,0.81,15,0.349,16,0.005,18,0.381,20,0.91,26,0.049,27,0.003,28,0.004,29,0.003,39,0.328,73,1.733,80,0.617,84,1.322,85,1.29,93,1.733,105,1.052,110,2.153,118,2.464,372,3.229,397,3.101,457,3.297,613,2.313,614,2.781,623,3.917,624,5.205,626,4.919,629,4.79,645,3.101,649,3.528,650,3.615,651,3.615,652,3.528,653,3.708,658,3.37,853,4.879,935,5.068,954,5.232,957,7.418,1264,3.809,1266,4.166,2702,6.867,2703,6.573,2704,9.465,2705,6.573,2706,6.573,2707,6.573,2708,6.573,2709,6.573]],["title/injectables/PaymentState.html",[613,1.419,2710,4.212]],["body/injectables/PaymentState.html",[0,0.238,3,0.034,4,0.03,5,0.03,8,0.138,13,0.905,15,0.379,16,0.005,18,0.379,26,0.034,27,0.002,28,0.003,29,0.002,33,5.37,39,0.33,64,2.167,73,1.365,80,0.432,84,1.438,85,1.403,93,1.816,94,1.799,105,0.736,110,1.506,118,2.252,124,1.739,225,1.915,231,1.312,283,3.715,299,3.722,306,1.765,310,2.575,318,1.713,320,2.259,382,2.665,613,1.822,614,1.945,652,3.49,653,2.595,666,2.089,683,6.143,686,5.034,709,2.741,710,2.595,711,2.824,717,3.992,732,2.824,921,3.826,922,3.261,923,3.261,930,2.824,932,5.691,933,4.133,935,5.513,936,4.133,946,3.261,1264,3.767,1266,2.915,1278,5.691,1281,5.667,1282,5.377,1283,5.691,1692,4.133,2047,3.826,2050,3.414,2129,4.133,2702,7.469,2710,5.409,2711,4.599,2712,4.599,2713,4.599,2714,6.502,2715,6.502,2716,4.599,2717,6.502,2718,6.502,2719,4.599,2720,6.502,2721,4.599,2722,6.502,2723,6.502,2724,4.599,2725,6.502,2726,6.502,2727,4.599,2728,4.599,2729,4.599,2730,4.599,2731,4.599,2732,4.599,2733,4.599,2734,4.599,2735,4.599]],["title/interfaces/PaymentStateModel.html",[244,1.014,1282,3.321]],["body/interfaces/PaymentStateModel.html",[0,0.497,3,0.046,4,0.041,5,0.041,8,0.187,9,0.655,12,1.888,15,0.415,16,0.005,20,0.63,22,0.93,26,0.074,27,0.003,28,0.003,29,0.003,34,1.061,39,0.206,80,0.75,184,2.98,225,1.296,231,1.67,232,2.241,244,1.251,249,1.624,252,2.079,254,1.724,270,1.624,512,2.513,645,2.946,729,3.522,733,2.89,772,3.132,930,3.834,932,3.957,935,3.834,954,3.957,1264,5.563,1266,3.957,1278,3.957,1279,4.427,1281,6.03,1282,5.24,1283,3.957,1284,4.25,1285,4.25]],["title/modules/PipesModule.html",[425,1.681,1327,3.447]],["body/modules/PipesModule.html",[0,0.326,3,0.047,4,0.041,5,0.041,16,0.004,26,0.047,27,0.003,28,0.003,29,0.003,39,0.317,105,1.008,125,1.619,186,1.471,191,1.619,425,2.091,427,2.664,428,2.972,429,4.018,430,2.972,431,3.094,432,3.945,443,3.791,444,3.031,447,3.583,1022,8.157,1327,7.207,1592,8.157,2736,5.66,2737,5.66,2738,5.66,2739,8.157,2740,8.157,2741,6.298,2742,6.298,2743,6.298,2744,6.298,2745,6.298]],["title/components/ProductDetailsComponent.html",[51,0.946,185,1.593]],["body/components/ProductDetailsComponent.html",[0,0.146,3,0.021,4,0.018,5,0.018,8,0.084,9,0.368,13,0.686,15,0.376,16,0.005,18,0.387,20,0.705,22,1.109,26,0.021,27,0.001,28,0.002,29,0.001,34,0.953,39,0.276,51,1.047,52,0.887,53,1.453,54,0.911,55,0.924,56,0.924,57,0.924,61,1.325,62,1.837,63,0.875,64,2.996,65,3.324,66,2.113,68,1.473,70,1.473,73,0.944,76,2.096,80,0.265,84,0.898,85,0.877,93,1.343,94,1.934,101,0.552,102,0.545,105,0.451,125,0.725,126,1.473,127,1.453,128,0.924,129,2.096,130,0.924,131,0.924,132,0.887,133,1.473,134,0.887,135,0.924,136,0.887,137,0.924,138,0.875,139,1.4,140,2.809,141,0.887,142,1.625,143,2.096,144,0.875,145,0.887,146,0.924,147,0.887,148,1.473,149,0.875,150,0.911,151,0.887,152,0.725,153,0.924,154,0.875,155,0.924,156,0.875,157,0.924,158,0.887,159,0.924,160,0.887,161,0.924,162,0.887,163,0.924,164,0.924,165,0.875,166,0.82,167,0.887,168,0.924,169,0.887,170,0.924,171,0.887,172,0.79,173,0.924,174,0.887,175,0.924,176,0.887,177,0.924,178,0.887,179,1.276,180,0.875,181,0.887,182,0.924,183,0.887,184,0.831,185,2.013,186,2.208,187,0.875,188,0.887,189,0.924,190,0.887,191,0.725,192,0.924,193,0.887,194,0.911,195,0.924,196,0.887,197,0.924,198,0.887,199,0.924,200,0.875,201,0.79,202,0.887,203,0.924,204,0.864,205,0.924,206,0.887,207,0.924,208,0.887,209,0.887,210,0.887,211,1.292,212,0.875,213,0.887,214,1.05,215,0.924,216,0.875,217,0.887,218,0.924,219,0.887,220,0.887,221,0.716,222,0.924,223,0.924,227,1.816,230,2.875,237,3.306,238,1.257,253,1.473,254,0.552,277,2.907,278,3.366,282,1.731,283,3.451,284,2.813,296,2.357,306,1.082,308,1.173,310,0.963,320,1.385,324,2.754,331,2.473,332,1.445,336,1.445,345,4.356,346,4.537,381,3.824,391,1.193,393,1.281,398,0.976,803,2.413,970,2.205,971,3.188,972,4.385,973,3.516,975,4.431,976,4.585,980,3.74,982,2.949,991,2.761,1011,2.813,1020,1.478,1064,2.205,1289,1.787,1290,1.68,1293,4.316,1294,1.281,1296,1.849,1297,1.787,1717,5.039,1809,4.04,1894,5.004,1924,3.74,2540,2.534,2541,2.346,2545,2.346,2746,9.277,2747,8.337,2748,5.607,2749,5.323,2750,4.04,2751,4.496,2752,2.819,2753,4.496,2754,6.112,2755,2.819,2756,4.496,2757,2.819,2758,2.534,2759,2.819,2760,2.534,2761,2.819,2762,2.819,2763,2.534,2764,2.819,2765,2.346,2766,2.819,2767,2.534,2768,2.205,2769,2.534,2770,4.496,2771,2.346,2772,2.346,2773,2.819,2774,2.819,2775,2.346,2776,2.819,2777,4.496,2778,5.607,2779,2.819,2780,2.819,2781,2.819,2782,4.496,2783,4.496,2784,4.04,2785,4.496,2786,4.496]],["title/pipes/ProductFilterPipe.html",[1021,3.109,2739,3.96]],["body/pipes/ProductFilterPipe.html",[0,0.359,3,0.051,4,0.045,5,0.045,13,0.907,15,0.293,16,0.005,18,0.293,20,0.933,26,0.051,27,0.003,28,0.004,29,0.003,39,0.281,61,2.045,63,2.155,73,1.457,84,1.111,85,1.085,93,1.457,105,1.111,118,2.549,237,4.266,238,3.095,253,3.029,296,3.639,1021,5.242,1023,5.151,1026,5.427,1028,7.161,1031,6.677,2739,6.677,2787,8.537,2788,6.939,2789,8.537,2790,8.537,2791,6.939,2792,6.939,2793,6.939]],["title/components/ProductLayoutComponent.html",[51,0.946,187,1.572]],["body/components/ProductLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,2.216,187,2.497,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,489,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,2794,6.621]],["title/modules/ProductLayoutModule.html",[425,1.681,2795,3.96]],["body/modules/ProductLayoutModule.html",[0,0.354,3,0.051,4,0.045,5,0.045,16,0.004,26,0.051,27,0.003,28,0.004,29,0.003,39,0.331,105,1.095,125,1.758,185,3.162,186,1.597,191,1.758,398,2.368,425,2.271,427,2.893,428,3.227,429,4.173,430,3.227,431,3.36,432,3.05,439,4.937,443,3.993,444,3.292,446,3.843,447,3.773,453,3.671,454,3.671,489,5.349,501,3.166,536,3.762,604,4.072,606,3.963,785,4.2,1006,5.349,2747,6.147,2794,6.147,2795,8.049,2796,6.147,2797,6.147,2798,6.84,2799,6.84,2800,6.84,2801,6.84]],["title/classes/ProductModel.html",[0,0.262,237,2.142]],["body/classes/ProductModel.html",[0,0.305,2,0.868,3,0.044,4,0.038,5,0.038,8,0.177,9,0.631,10,5.836,11,4.968,12,2.026,13,0.841,14,5.836,15,0.441,16,0.005,17,4.879,18,0.441,20,0.976,22,1.539,26,0.044,27,0.003,28,0.003,29,0.003,39,0.194,186,1.377,237,3.257,259,4.715,268,3.396,666,3.497,681,5.241,998,6.364,1306,3.326,1307,5.109,2754,6.705,2802,5.896,2803,7.705,2804,7.132,2805,8.573,2806,8.573,2807,8.573,2808,5.896,2809,5.896,2810,5.896,2811,5.896,2812,5.896,2813,5.896,2814,5.896,2815,5.896,2816,5.896,2817,5.896,2818,5.896,2819,5.896,2820,5.896,2821,5.896]],["title/injectables/ProductService.html",[613,1.419,2822,3.96]],["body/injectables/ProductService.html",[0,0.264,3,0.038,4,0.033,5,0.033,8,0.153,13,0.881,15,0.401,16,0.005,18,0.401,20,0.805,22,1.479,26,0.038,27,0.002,28,0.003,29,0.002,39,0.313,73,1.469,80,0.48,84,1.439,85,1.405,93,1.948,103,2.509,105,0.818,110,1.673,118,2.77,224,3.754,228,3.015,229,4.605,230,2.619,234,4.168,237,2.161,238,2.278,239,4.981,240,1.468,241,2.809,242,2.41,243,2.881,253,1.673,255,2.619,259,2.809,261,2.742,268,2.023,372,2.509,397,2.41,457,2.562,613,1.96,614,2.161,623,3.044,624,4.718,626,4.168,629,4.998,649,2.742,650,2.809,651,2.809,658,2.619,792,2.509,842,5.47,843,2.678,853,3.791,858,5.921,1037,5.819,1040,5.819,1042,4.249,1044,4.249,1046,4.249,1658,6.286,1662,7.709,2822,5.47,2823,5.108,2824,6.994,2825,8.579,2826,5.108,2827,6.994,2828,5.108,2829,6.994,2830,5.108,2831,5.108,2832,5.108,2833,6.994,2834,5.108,2835,5.108,2836,4.59,2837,4.59,2838,5.108,2839,5.108,2840,5.108,2841,5.108,2842,5.108,2843,4.59,2844,5.108,2845,5.108]],["title/injectables/ProductState.html",[613,1.419,1678,3.96]],["body/injectables/ProductState.html",[0,0.176,3,0.025,4,0.022,5,0.022,8,0.102,13,0.915,15,0.389,16,0.005,18,0.389,26,0.025,27,0.001,28,0.002,29,0.001,33,5.398,39,0.325,64,2.409,73,1.093,80,0.32,84,1.473,85,1.438,93,1.899,94,1.441,105,0.545,110,1.114,118,2.582,124,2.679,224,4.324,225,1.937,231,1.543,237,3.231,238,1.517,245,5.104,246,4.73,247,4.309,248,4.309,250,1.784,251,4.431,253,1.114,256,4.431,258,4.431,265,4.431,267,4.431,269,4.545,283,3.374,299,3.893,306,1.306,309,1.707,310,2.608,315,3.058,318,1.939,320,1.671,613,1.459,614,1.439,666,3.659,683,6.175,686,5.148,709,2.028,710,1.919,711,2.089,717,2.089,727,3.058,792,2.558,843,1.784,879,1.871,922,2.413,923,2.413,939,3.058,942,3.058,946,5.417,1678,4.073,1851,3.058,1852,3.058,2050,5.261,2822,6.301,2846,3.402,2847,3.402,2848,5.708,2849,3.402,2850,5.207,2851,5.207,2852,3.402,2853,5.207,2854,5.207,2855,3.402,2856,5.207,2857,5.207,2858,3.402,2859,5.207,2860,5.207,2861,3.402,2862,5.207,2863,5.207,2864,3.402,2865,5.207,2866,5.207,2867,3.402,2868,5.207,2869,3.402,2870,5.207,2871,3.402,2872,5.207,2873,3.402,2874,5.207,2875,5.207,2876,3.402,2877,3.402,2878,3.058,2879,3.402,2880,3.058,2881,3.058,2882,2.525,2883,2.525,2884,3.402,2885,3.058,2886,3.402,2887,3.402,2888,3.402,2889,3.402,2890,3.402,2891,3.402,2892,3.402,2893,3.402,2894,3.402,2895,3.402,2896,3.402]],["title/interfaces/ProductStateModel.html",[244,1.014,245,2.857]],["body/interfaces/ProductStateModel.html",[0,0.511,3,0.037,4,0.032,5,0.032,8,0.148,9,0.561,12,1.617,13,0.485,15,0.428,16,0.005,20,0.499,22,1.323,26,0.074,27,0.002,28,0.003,29,0.002,39,0.225,66,1.404,80,0.795,139,0.991,186,2.327,201,1.918,214,1.155,224,2.656,225,1.027,226,2.949,227,1.355,228,1.871,229,2.656,230,2.537,231,1.717,232,2.304,237,4.216,238,2.207,239,4.211,240,1.422,241,2.722,242,3.229,243,2.792,244,0.991,245,3.861,246,4.775,247,4.775,248,4.775,249,1.288,250,2.595,251,2.722,252,2.451,253,3.192,254,1.798,255,2.537,256,2.722,257,1.713,258,2.722,259,2.722,260,2.867,261,3.673,262,2.867,263,2.483,264,2.867,265,2.722,266,2.949,267,2.722,268,1.96,269,2.792,270,1.288,729,2.792]],["title/classes/ProductTagModel.html",[0,0.262,1307,3.018]],["body/classes/ProductTagModel.html",[0,0.369,2,1.049,3,0.053,4,0.046,5,0.046,8,0.213,9,0.711,12,2.051,13,0.851,15,0.411,16,0.004,18,0.411,20,0.719,22,1.45,26,0.053,27,0.003,28,0.004,29,0.003,39,0.235,214,1.665,230,4.797,1009,6.788,1013,7.318,1307,5.173,2094,7.939,2097,7.221,2897,8.68,2898,6.407,2899,6.407,2900,6.407,2901,6.407,2902,6.407,2903,6.407]],["title/classes/ProductsCustomFilterDto.html",[0,0.262,239,2.718]],["body/classes/ProductsCustomFilterDto.html",[0,0.352,2,1.002,3,0.05,4,0.044,5,0.044,8,0.204,9,0.691,15,0.416,16,0.004,18,0.416,20,0.851,22,1.531,26,0.05,27,0.003,28,0.004,29,0.003,31,5.146,85,1.319,239,4.528,241,5.521,242,4.736,255,4.7,1603,7.627,1604,7.627,1605,7.627,1606,7.17,2904,6.808,2905,6.808,2906,6.808,2907,6.808,2908,6.808,2909,6.808]],["title/classes/ProfileModel.html",[0,0.262,1081,2.857]],["body/classes/ProfileModel.html",[0,0.349,2,0.992,3,0.05,4,0.044,5,0.044,8,0.202,9,0.687,12,2.157,15,0.429,16,0.004,18,0.429,20,1.036,22,1.249,26,0.05,27,0.003,28,0.004,29,0.003,39,0.276,67,6.776,72,5.988,109,5.61,740,6.474,742,6.474,803,4.9,1081,4.732,1370,7.14,1371,7.434,2910,6.743,2911,6.743,2912,6.743,2913,6.743,2914,6.743,2915,6.743,2916,6.743,2917,6.743,2918,6.743]],["title/injectables/ProfileService.html",[613,1.419,2919,4.212]],["body/injectables/ProfileService.html",[0,0.258,3,0.037,4,0.033,5,0.033,8,0.149,13,0.874,15,0.377,16,0.005,18,0.399,20,0.997,26,0.037,27,0.002,28,0.003,29,0.002,39,0.304,73,1.446,80,0.469,84,1.427,85,1.393,93,1.935,101,1.347,102,1.332,105,0.799,110,1.635,118,2.751,221,2.34,240,1.434,324,2.963,372,2.452,397,2.355,457,2.504,613,1.929,614,2.112,623,2.975,624,4.673,626,4.103,629,4.903,649,2.679,650,2.745,651,2.745,658,2.559,662,6.187,803,2.679,853,3.705,965,2.226,1073,3.989,1075,5.385,1076,5.658,1081,2.816,1082,2.975,1083,5.82,1084,3.164,1087,3.884,1091,4.364,1092,3.989,1093,5.063,1616,7.068,2804,7.068,2919,5.728,2920,4.992,2921,6.885,2922,8.496,2923,4.992,2924,6.885,2925,8.281,2926,4.992,2927,6.885,2928,4.992,2929,4.992,2930,6.885,2931,4.992,2932,4.992,2933,6.885,2934,4.992,2935,4.992,2936,4.992,2937,4.992,2938,8.496,2939,4.992,2940,4.992,2941,6.885,2942,4.992,2943,4.992,2944,4.992,2945,4.992,2946,4.992]],["title/injectables/ProfileState.html",[613,1.419,1673,3.96]],["body/injectables/ProfileState.html",[0,0.195,3,0.028,4,0.025,5,0.025,8,0.113,13,0.911,15,0.385,16,0.005,18,0.385,26,0.028,27,0.002,28,0.002,29,0.002,33,5.469,39,0.321,64,1.933,73,1.18,80,0.354,84,1.46,85,1.425,93,1.873,94,1.042,105,0.603,110,1.233,118,2.591,221,2.393,225,1.927,231,1.171,283,3.493,299,3.839,306,1.445,310,2.297,318,1.402,320,1.849,382,2.181,613,1.575,614,1.593,666,2.553,675,2.244,683,6.256,686,5.328,709,2.244,710,2.124,711,2.312,717,4.13,725,6.207,921,3.132,1073,4.852,1081,4.896,1082,2.244,1085,4.581,1086,2.181,1087,4.725,1088,4.991,1089,4.991,1092,4.852,1093,4.991,1095,4.991,1411,3.383,1673,4.396,1689,3.383,2919,6.967,2947,3.765,2948,3.765,2949,3.765,2950,5.621,2951,5.621,2952,3.765,2953,5.621,2954,5.621,2955,3.765,2956,5.621,2957,5.621,2958,3.765,2959,5.621,2960,5.621,2961,3.765,2962,5.621,2963,5.621,2964,3.765,2965,5.621,2966,5.621,2967,3.765,2968,5.621,2969,3.765,2970,5.621,2971,5.621,2972,3.765,2973,3.765,2974,3.765,2975,3.383,2976,3.383,2977,3.383,2978,3.383,2979,3.765,2980,3.765,2981,3.765,2982,8.375,2983,3.765,2984,3.765,2985,3.765,2986,3.765,2987,5.621,2988,3.765,2989,3.765]],["title/interfaces/ProfileStateModel.html",[244,1.014,1085,3.109]],["body/interfaces/ProfileStateModel.html",[0,0.506,3,0.042,4,0.037,5,0.037,8,0.171,9,0.618,15,0.419,16,0.005,20,0.761,26,0.074,27,0.002,28,0.003,29,0.002,34,1.281,39,0.248,80,0.793,124,2.158,152,1.467,221,2.676,225,1.185,227,1.492,231,1.701,232,2.282,240,1.64,244,1.144,249,1.485,252,1.485,254,1.756,270,1.485,729,3.22,733,2.642,803,4.529,965,2.546,1073,3.308,1074,3.744,1075,4.778,1076,4.628,1080,3.402,1081,5.063,1082,3.402,1083,5.349,1084,3.618,1085,4.628,1086,3.308,1087,3.22,1088,3.402,1089,3.402,1090,3.618,1091,3.618,1092,3.308,1093,3.402,1094,3.744,1095,3.402]],["title/classes/PushInvoice.html",[0,0.262,926,3.321]],["body/classes/PushInvoice.html",[0,0.474,2,0.888,3,0.045,4,0.039,5,0.039,8,0.181,9,0.64,12,1.846,13,0.592,15,0.429,16,0.005,18,0.366,20,0.609,22,0.899,26,0.072,27,0.003,28,0.003,29,0.003,34,1.025,39,0.199,80,0.814,84,0.966,85,0.943,101,1.181,102,1.167,166,3.017,225,1.903,227,1.547,231,1.693,232,2.272,244,1.209,249,1.57,252,2.033,254,1.529,270,1.57,512,2.428,772,3.92,924,3.595,926,5.126,1263,5.638,1265,3.824,1270,3.957,1271,4.478,1273,5.023,1274,4.107,1275,3.595,1276,4.278,2990,6.033,2991,7.815,2992,6.033]],["title/classes/PushOrder.html",[0,0.262,771,3.109]],["body/classes/PushOrder.html",[0,0.492,2,0.817,3,0.041,4,0.036,5,0.036,8,0.166,9,0.606,12,2.098,13,0.545,15,0.43,16,0.005,18,0.352,20,0.56,22,1.24,26,0.073,27,0.002,28,0.003,29,0.002,34,0.944,39,0.244,80,0.782,84,0.889,85,0.868,101,1.087,102,1.074,179,2.962,225,1.842,227,1.648,231,1.716,232,2.303,240,1.596,244,1.113,249,1.445,252,1.925,254,1.737,257,1.923,270,1.445,512,2.235,754,3.41,755,3.78,759,3.643,760,4.987,761,3.133,762,3.492,763,2.728,764,3.52,765,4.268,766,3.218,767,3.31,768,3.643,769,3.41,770,3.78,771,4.544,772,3.713,773,3.41,2993,5.553,2994,7.401,2995,5.553]],["title/classes/PushPayment.html",[0,0.262,932,3.21]],["body/classes/PushPayment.html",[0,0.486,2,0.855,3,0.043,4,0.038,5,0.038,8,0.174,9,0.625,12,1.802,13,0.57,15,0.43,16,0.005,18,0.36,20,0.77,22,0.866,26,0.073,27,0.002,28,0.003,29,0.002,34,0.988,39,0.191,80,0.8,84,0.931,85,0.909,101,1.138,102,1.124,184,3.056,225,1.876,227,1.51,231,1.708,232,2.292,244,1.165,249,1.512,252,1.984,254,1.666,270,1.512,512,2.339,645,2.743,733,2.69,772,3.826,930,3.569,932,4.835,935,3.569,954,3.684,1264,5.582,1266,3.684,1278,3.684,1279,4.122,1281,5.228,1282,3.813,1283,3.684,1284,3.957,1285,3.957,2996,5.813,2997,7.628,2998,5.813]],["title/classes/Register.html",[0,0.262,618,2.718]],["body/classes/Register.html",[0,0.5,2,0.803,3,0.04,4,0.036,5,0.036,8,0.163,9,0.599,13,0.535,15,0.431,16,0.005,18,0.349,20,0.833,22,1.09,26,0.073,27,0.002,28,0.003,29,0.002,34,1.608,39,0.241,80,0.513,84,0.874,85,0.853,101,1.068,102,1.056,124,2.063,139,1.093,172,2.05,221,1.386,225,1.829,227,1.449,228,2.063,231,1.731,232,2.323,240,1.568,244,1.093,254,1.852,257,2.533,394,4.024,395,4.974,577,5.403,590,4.36,591,3.351,618,4.732,621,3.079,645,3.894,652,4.429,653,3.079,654,3.46,674,3.253,675,3.253,679,3.351,730,3.58,731,4.338,732,3.351,733,3.386,734,3.46,1254,4.269,2999,7.316,3000,5.458]],["title/components/RegisterComponent.html",[51,0.946,188,1.593]],["body/components/RegisterComponent.html",[0,0.168,3,0.024,4,0.021,5,0.021,8,0.097,9,0.412,13,0.603,15,0.292,16,0.005,18,0.377,26,0.024,27,0.001,28,0.002,29,0.001,34,1.044,39,0.294,51,1.147,52,1.022,53,1.624,54,1.05,55,1.064,56,1.064,57,1.064,61,1.481,62,2.013,63,1.008,64,3.028,65,3.36,66,1.426,68,1.646,70,1.646,73,1.055,76,2.265,80,0.305,81,2.303,82,4.384,84,0.52,85,0.508,86,3.185,89,3.773,93,1.055,94,1.39,101,0.636,102,0.628,103,3.674,105,0.52,106,1.994,107,2.911,108,1.882,110,1.064,114,3.773,118,1.835,121,3.085,124,1.228,125,0.835,126,1.646,127,1.624,128,1.064,129,2.265,130,1.064,131,1.064,132,1.022,133,1.646,134,1.022,135,1.064,136,1.022,137,1.064,138,1.008,139,0.651,140,2.926,141,1.022,142,1.756,143,2.265,144,1.008,145,1.022,146,1.064,147,1.022,148,1.646,149,1.008,150,1.05,151,1.022,152,0.835,153,1.064,154,1.008,155,1.064,156,1.008,157,1.064,158,1.022,159,1.064,160,1.022,161,1.064,162,1.022,163,1.064,164,1.064,165,1.008,166,0.945,167,1.022,168,1.064,169,1.022,170,1.064,171,1.022,172,0.91,173,1.064,174,1.022,175,1.064,176,1.022,177,1.064,178,1.022,179,1.426,180,1.008,181,1.022,182,1.064,183,1.022,184,0.957,185,1.022,186,1.173,187,1.008,188,2.176,189,1.064,190,1.022,191,0.835,192,1.064,193,1.022,194,1.05,195,1.064,196,1.022,197,1.064,198,1.022,199,1.064,200,1.008,201,0.91,202,1.022,203,1.064,204,1.54,205,1.064,206,1.022,207,1.064,208,1.022,209,1.022,210,1.022,211,1.444,212,1.008,213,1.022,214,1.173,215,1.064,216,1.008,217,1.022,218,1.064,219,1.022,220,1.022,221,0.825,222,1.064,223,1.064,227,1.217,231,0.874,242,1.533,276,3.467,277,2.556,278,3.596,283,3.319,284,2.784,298,3.298,299,1.398,300,2.835,301,2.325,304,1.703,306,1.247,308,1.351,310,1.109,318,2.288,320,1.595,324,1.398,332,1.665,336,1.665,342,1.936,343,1.936,381,3.677,382,1.882,391,1.374,393,1.475,395,1.832,398,1.125,399,1.832,593,4.014,594,4.906,595,5.091,618,4.014,1102,2.411,1190,2.763,1203,2.411,1204,2.54,1205,2.54,1209,2.13,1210,4.183,1211,2.54,1212,2.54,1390,5.608,1412,2.54,1425,2.702,1427,2.702,1583,5.409,1584,4.515,1648,2.919,2124,2.919,2132,2.919,2148,3.93,2149,4.18,3001,3.248,3002,6.145,3003,5.025,3004,6.145,3005,6.916,3006,5.025,3007,3.248,3008,3.248,3009,3.248,3010,3.248,3011,3.248,3012,3.248,3013,3.248,3014,3.248,3015,3.248,3016,2.702,3017,3.248,3018,3.248,3019,3.248,3020,3.248,3021,3.248,3022,3.248,3023,3.248,3024,3.248,3025,3.248,3026,3.248,3027,5.025,3028,3.248,3029,5.025,3030,3.248,3031,3.248,3032,3.248]],["title/interfaces/RemoveCartItem.html",[244,1.014,844,2.785]],["body/interfaces/RemoveCartItem.html",[3,0.056,4,0.05,5,0.05,8,0.228,9,0.74,15,0.382,16,0.004,22,1.535,26,0.056,27,0.003,28,0.004,29,0.003,139,1.527,230,5.105,244,1.527,729,4.301,830,5.618,844,4.969,3033,7.623,3034,7.623]],["title/classes/RemoveCartProduct.html",[0,0.262,875,2.785]],["body/classes/RemoveCartProduct.html",[0,0.501,2,0.665,3,0.033,4,0.029,5,0.029,8,0.135,9,0.526,13,0.443,15,0.429,16,0.005,18,0.344,20,0.456,22,1.473,26,0.073,27,0.002,28,0.003,29,0.002,34,1.091,39,0.268,80,0.807,84,0.724,85,0.706,101,0.884,102,0.874,120,4.214,139,2.095,152,1.162,186,1.899,225,1.783,227,1.858,228,3.248,231,1.721,232,2.31,240,1.845,244,0.905,249,1.176,252,1.176,253,1.48,254,1.747,257,2.223,268,1.79,270,1.671,309,2.267,310,1.543,312,2.37,316,2.37,512,1.819,531,2.317,731,3.525,762,3.525,763,2.22,792,3.669,794,2.55,818,2.426,819,2.485,823,2.485,824,2.426,830,5.181,840,2.619,843,2.37,844,3.532,845,2.619,846,2.619,851,4.612,852,3.623,855,2.619,873,2.55,874,2.485,875,3.532,879,2.485,885,2.55,964,2.693,965,2.015,966,2.619,967,3.367,3035,3.76,3036,6.422,3037,6.422]],["title/classes/RemoveProductsFromCart.html",[0,0.262,823,2.785]],["body/classes/RemoveProductsFromCart.html",[0,0.503,2,0.677,3,0.034,4,0.03,5,0.03,8,0.138,9,0.533,13,0.451,15,0.434,16,0.005,18,0.319,20,0.464,22,1.337,26,0.073,27,0.002,28,0.003,29,0.002,34,1.105,39,0.27,80,0.812,84,0.736,85,0.719,101,0.9,102,0.89,120,4.255,139,2.099,152,1.182,186,1.761,225,1.701,227,1.778,228,2.458,231,1.727,232,2.317,234,4.495,240,1.868,244,0.921,249,1.197,252,1.197,253,2.13,254,1.757,257,2.251,268,1.822,270,1.692,309,2.307,310,1.57,312,2.412,316,2.412,512,1.851,531,2.358,731,4.236,762,3.559,763,2.259,792,3.705,794,2.595,818,2.469,819,2.529,823,3.576,824,2.469,830,4.255,840,2.665,843,2.412,844,3.576,845,2.665,846,2.665,851,4.642,852,3.668,855,2.665,873,2.595,874,2.529,875,2.529,879,2.529,885,2.595,964,2.741,965,2.051,966,2.665,967,3.409,1254,3.597,3038,6.502,3039,4.599]],["title/components/ResetPasswordComponent.html",[51,0.946,190,1.593]],["body/components/ResetPasswordComponent.html",[0,0.168,3,0.024,4,0.021,5,0.021,8,0.097,9,0.412,13,0.604,15,0.316,16,0.005,18,0.36,20,0.508,26,0.024,27,0.001,28,0.002,29,0.001,34,1.046,39,0.272,51,1.149,52,1.024,53,1.626,54,1.052,55,1.066,56,1.066,57,1.066,61,1.484,62,2.016,63,1.011,64,3.028,65,3.36,66,1.428,68,1.649,70,1.649,73,1.057,76,2.268,80,0.306,82,4.389,84,0.521,85,0.509,86,3.901,89,3.778,93,1.057,94,1.703,103,3.023,105,0.521,106,1.999,107,1.886,108,1.886,110,1.066,114,3.091,118,0.972,121,3.091,122,3.736,125,0.837,126,1.649,127,1.626,128,1.066,129,2.268,130,1.066,131,1.066,132,1.024,133,1.649,134,1.024,135,1.066,136,1.024,137,1.066,138,1.011,139,0.652,140,2.928,141,1.024,142,1.758,143,2.268,144,1.011,145,1.024,146,1.066,147,1.024,148,1.649,149,1.011,150,1.052,151,1.024,152,0.837,153,1.066,154,1.011,155,1.066,156,1.011,157,1.066,158,1.024,159,1.066,160,1.024,161,1.066,162,1.024,163,1.066,164,1.066,165,1.011,166,0.947,167,1.024,168,1.066,169,1.024,170,1.066,171,1.024,172,0.912,173,1.066,174,1.024,175,1.066,176,1.024,177,1.066,178,1.024,179,1.428,180,1.011,181,1.024,182,1.066,183,1.024,184,0.96,185,1.024,186,1.175,187,1.011,188,1.024,189,1.066,190,2.178,191,2.374,192,1.066,193,1.024,194,1.052,195,1.066,196,1.024,197,1.066,198,1.024,199,1.066,200,1.011,201,0.912,202,1.024,203,1.066,204,1.542,205,1.066,206,1.024,207,1.066,208,1.024,209,1.024,210,1.024,211,1.446,212,1.011,213,1.024,214,1.175,215,1.066,216,1.011,217,1.024,218,1.066,219,1.024,220,1.024,221,0.827,222,1.066,223,1.066,227,1.218,231,0.876,276,3.472,278,3.598,283,3.322,298,3.303,299,1.401,300,2.84,301,2.33,304,1.707,306,1.25,318,3.073,332,1.669,336,1.669,340,2.216,342,1.94,343,1.94,380,5.192,381,3.68,393,1.479,398,1.127,402,2.416,405,2.708,594,5.192,610,7.864,619,5.761,638,4.813,676,2.708,975,3.901,976,4.542,982,3.302,984,2.546,1190,2.768,1191,4.813,1198,2.546,1209,2.135,1210,3.426,1229,4.91,1486,2.708,1504,4.523,1879,2.708,3016,2.708,3040,8.751,3041,3.255,3042,6.154,3043,5.033,3044,6.223,3045,5.033,3046,3.255,3047,3.255,3048,3.255,3049,3.255,3050,3.255,3051,3.255,3052,3.255,3053,3.255,3054,5.033,3055,3.255,3056,3.255,3057,5.53,3058,3.255,3059,6.223,3060,3.255,3061,3.255,3062,3.255,3063,3.255,3064,3.255,3065,3.255,3066,2.926,3067,5.033,3068,5.033]],["title/classes/ResetPasswordDto.html",[0,0.262,638,3.96]],["body/classes/ResetPasswordDto.html",[0,0.346,2,0.985,3,0.05,4,0.044,5,0.044,8,0.2,9,0.684,15,0.414,16,0.004,18,0.414,20,1.05,26,0.05,27,0.003,28,0.004,29,0.003,31,5.125,232,2.481,593,4.884,638,6.531,3044,8.178,3057,8.178,3059,8.178,3069,9.997,3070,6.696,3071,9.1,3072,6.696,3073,6.696,3074,6.696,3075,6.696,3076,6.696]],["title/components/SearchBarComponent.html",[51,0.946,193,1.593]],["body/components/SearchBarComponent.html",[0,0.15,3,0.021,4,0.019,5,0.019,8,0.087,9,0.376,13,0.694,15,0.385,16,0.005,18,0.39,20,0.89,26,0.021,27,0.001,28,0.002,29,0.001,34,0.969,39,0.3,51,1.064,52,0.909,53,1.482,54,0.934,55,0.947,56,0.947,57,0.947,61,1.352,62,1.867,63,0.897,64,3.002,65,3.331,66,1.301,68,1.502,70,1.502,73,0.963,76,2.125,78,3.008,80,0.271,84,0.913,85,0.891,93,1.362,94,1.958,101,0.897,102,1.527,104,4.345,105,0.463,110,0.947,118,0.863,125,0.743,126,1.502,127,1.482,128,0.947,129,2.125,130,0.947,131,0.947,132,0.909,133,1.502,134,0.909,135,0.947,136,0.909,137,0.947,138,0.897,139,0.579,140,2.83,141,0.909,142,1.648,143,2.125,144,0.897,145,0.909,146,0.947,147,0.909,148,1.502,149,0.897,150,0.934,151,0.909,152,0.743,153,0.947,154,0.897,155,0.947,156,0.897,157,0.947,158,0.909,159,0.947,160,0.909,161,0.947,162,0.909,163,0.947,164,0.947,165,0.897,166,0.841,167,0.909,168,0.947,169,0.909,170,0.947,171,0.909,172,0.81,173,0.947,174,0.909,175,0.947,176,0.909,177,0.947,178,0.909,179,1.301,180,0.897,181,0.909,182,0.947,183,0.909,184,0.852,185,0.909,186,1.071,187,0.897,188,0.909,189,0.947,190,0.909,191,0.743,192,0.947,193,2.041,194,2.849,195,0.947,196,0.909,197,0.947,198,0.909,199,0.947,200,0.897,201,0.81,202,0.909,203,0.947,204,0.886,205,0.947,206,0.909,207,0.947,208,0.909,209,0.909,210,0.909,211,1.864,212,0.897,213,0.909,214,1.071,215,0.947,216,0.897,217,0.909,218,0.947,219,0.909,220,0.909,221,0.734,222,0.947,223,0.947,231,1.129,237,1.223,238,1.289,253,1.502,277,2.371,284,2.294,299,1.974,301,3.003,304,1.516,308,1.202,318,1.708,331,3.892,381,3.358,391,1.223,396,2.598,397,1.364,398,1.001,417,1.832,629,2.8,710,1.631,979,2.587,983,1.723,1011,1.45,1020,1.516,1021,1.775,1030,3.724,1034,5.858,1065,2.405,1294,1.313,1325,8.382,1779,3.587,2131,2.146,2209,2.598,2239,2.261,2316,4.742,2332,4.742,2337,2.598,2822,5.075,2848,5.373,2878,2.598,2882,2.146,2883,2.146,3077,9.327,3078,2.891,3079,5.7,3080,4.586,3081,7.53,3082,5.7,3083,5.7,3084,7.076,3085,4.586,3086,4.586,3087,6.489,3088,5.7,3089,2.891,3090,4.586,3091,4.586,3092,2.891,3093,2.891,3094,2.891,3095,2.891,3096,4.586,3097,2.891,3098,2.405,3099,4.586,3100,2.891,3101,2.891,3102,4.586,3103,2.891,3104,2.891,3105,5.7,3106,4.586,3107,2.891,3108,2.891,3109,2.891,3110,2.891,3111,4.586,3112,2.891,3113,2.891,3114,2.891,3115,2.891,3116,2.891,3117,2.891,3118,2.891,3119,2.891,3120,2.891,3121,2.891,3122,2.891,3123,6.489,3124,2.891,3125,2.891,3126,2.891,3127,2.891,3128,2.261,3129,2.891,3130,4.586]],["title/components/SearchComponent.html",[51,0.946,196,1.593]],["body/components/SearchComponent.html",[0,0.134,3,0.019,4,0.017,5,0.017,8,0.077,9,0.344,13,0.927,15,0.41,16,0.005,18,0.393,20,0.842,22,0.625,26,0.019,27,0.003,28,0.002,29,0.001,34,0.899,39,0.259,51,0.988,52,0.814,53,1.356,54,0.836,55,0.848,56,0.848,57,0.848,61,1.237,62,1.734,63,0.803,64,2.974,65,3.3,66,1.728,68,1.374,70,1.374,73,0.881,76,1.994,80,0.243,84,0.847,85,0.827,93,1.585,94,2.088,101,0.821,102,0.812,105,0.414,110,0.848,118,0.773,124,2.709,125,0.665,126,1.374,127,1.356,128,0.848,129,1.994,130,0.848,131,0.848,132,0.814,133,1.374,134,0.814,135,0.848,136,0.814,137,0.848,138,0.803,139,1.06,140,2.734,141,0.814,142,1.699,143,1.994,144,0.803,145,0.814,146,0.848,147,0.814,148,1.374,149,0.803,150,0.836,151,0.814,152,0.665,153,0.848,154,0.803,155,0.848,156,0.803,157,0.848,158,0.814,159,0.848,160,0.814,161,0.848,162,0.814,163,0.848,164,0.848,165,0.803,166,0.753,167,0.814,168,0.848,169,0.814,170,0.848,171,0.814,172,0.725,173,0.848,174,0.814,175,0.848,176,0.814,177,0.848,178,0.814,179,1.191,180,0.803,181,0.814,182,0.848,183,0.814,184,0.763,185,0.814,186,0.98,187,0.803,188,0.814,189,0.848,190,0.814,191,0.665,192,0.848,193,0.814,194,1.71,195,0.848,196,1.916,197,0.848,198,0.814,199,0.848,200,0.803,201,0.725,202,0.814,203,0.848,204,0.793,205,0.848,206,0.814,207,0.848,208,0.814,209,0.814,210,0.814,211,1.75,212,0.803,213,0.814,214,0.98,215,0.848,216,0.803,217,0.814,218,0.848,219,0.814,220,0.814,221,0.657,222,0.848,223,0.848,227,1.419,237,2.239,238,1.154,253,1.374,255,2.714,277,2.784,278,3.36,284,2.694,301,1.198,308,1.076,318,1.563,324,1.806,331,3.349,332,1.327,336,1.327,345,2.857,346,2.976,381,3.196,391,1.095,393,1.175,398,0.896,417,1.64,421,2.986,588,1.697,589,2.976,666,2.404,681,1.762,974,2.153,975,3.355,976,3.994,979,4.043,982,2.752,983,1.542,984,2.024,990,2.153,992,2.976,1011,2.655,1020,1.357,1030,2.873,1234,4.14,1294,1.175,1503,3.282,1705,4.403,1730,3.753,1868,3.115,1977,3.115,2131,5.319,2365,3.115,2749,5.065,2750,3.771,2771,2.153,2772,2.153,3016,2.153,3128,3.282,3131,2.588,3132,5.293,3133,4.196,3134,5.293,3135,5.293,3136,5.293,3137,5.472,3138,6.089,3139,4.196,3140,6.089,3141,6.279,3142,4.196,3143,2.588,3144,2.588,3145,2.588,3146,4.196,3147,2.588,3148,2.588,3149,4.196,3150,2.588,3151,2.588,3152,2.588,3153,2.588,3154,2.588,3155,2.588,3156,2.588,3157,2.588,3158,2.588,3159,2.588,3160,2.588,3161,6.692,3162,6.692,3163,6.692,3164,2.325,3165,2.588,3166,2.588,3167,5.293,3168,2.588,3169,2.588,3170,4.196,3171,5.962,3172,2.588,3173,2.588,3174,5.293,3175,4.196,3176,5.293,3177,4.196,3178,4.196,3179,2.588,3180,4.196,3181,7.824,3182,4.196,3183,3.771]],["title/injectables/SearchService.html",[613,1.419,3141,4.212]],["body/injectables/SearchService.html",[0,0.339,3,0.049,4,0.043,5,0.043,8,0.196,13,0.884,15,0.412,16,0.005,18,0.348,20,1.003,22,1.342,26,0.049,27,0.003,28,0.004,29,0.003,39,0.312,73,1.731,80,0.616,84,1.32,85,1.288,93,1.377,103,3.221,105,1.05,110,2.148,118,1.958,255,4.621,372,3.221,397,3.094,457,3.29,613,2.309,614,2.774,624,5.201,629,4.428,649,3.52,650,3.607,651,3.607,658,3.362,842,6.446,858,6.691,2526,5.456,2528,6.857,2836,5.894,2837,5.894,3141,6.857,3184,6.558,3185,7.407,3186,6.558,3187,8.242,3188,6.558,3189,6.558]],["title/classes/SetCustomerToken.html",[0,0.262,935,3.109]],["body/classes/SetCustomerToken.html",[0,0.485,2,0.853,3,0.043,4,0.038,5,0.038,8,0.174,9,0.624,12,1.8,13,0.569,15,0.429,16,0.005,18,0.359,20,0.946,22,0.864,26,0.073,27,0.002,28,0.003,29,0.002,34,0.986,39,0.191,80,0.799,84,0.929,85,0.907,101,1.135,102,1.122,184,2.968,225,1.874,227,1.508,231,1.707,232,2.291,244,1.162,249,1.509,252,1.982,254,1.665,270,1.509,512,2.335,645,3.594,733,3.526,772,2.91,930,3.562,932,3.677,935,4.677,954,5.725,1264,4.928,1266,3.677,1278,3.677,1279,4.114,1281,5.222,1282,3.805,1283,3.677,1284,3.949,1285,5.186,3190,5.801,3191,7.617,3192,5.801]],["title/classes/SetProfileImage.html",[0,0.262,1092,2.934]],["body/classes/SetProfileImage.html",[0,0.495,2,0.769,3,0.039,4,0.034,5,0.034,8,0.157,9,0.582,13,0.513,15,0.431,16,0.005,18,0.366,20,0.943,26,0.073,27,0.002,28,0.003,29,0.002,34,1.208,39,0.234,80,0.814,84,0.837,85,0.817,101,1.023,102,1.011,124,1.977,152,1.344,221,2.642,225,1.88,227,1.85,231,1.716,232,2.303,240,1.502,244,1.048,249,1.36,252,1.36,254,1.695,270,1.36,733,3.289,803,4.65,965,2.332,1073,3.03,1074,3.43,1075,5.742,1076,5.738,1077,4.699,1080,3.116,1081,4.009,1082,3.116,1083,5.163,1084,3.314,1085,3.211,1086,3.03,1087,2.95,1088,3.116,1089,3.116,1090,3.314,1091,3.314,1092,4.118,1093,3.116,1094,3.43,1095,3.116,3193,7.107,3194,7.107]],["title/classes/SetUserCart.html",[0,0.262,674,3.018]],["body/classes/SetUserCart.html",[0,0.499,2,0.795,3,0.04,4,0.035,5,0.035,8,0.162,9,0.596,13,0.53,15,0.431,16,0.005,18,0.347,20,0.829,22,1.365,26,0.073,27,0.002,28,0.003,29,0.002,34,1.639,39,0.239,80,0.508,84,0.866,85,0.845,101,1.058,102,1.046,124,2.044,139,1.456,172,2.037,221,1.373,225,1.822,227,1.439,228,3.32,231,1.728,232,2.319,240,1.554,244,1.083,254,1.847,257,2.517,394,3.998,395,4.955,577,5.391,590,4.332,591,3.32,618,3.902,621,3.05,645,3.875,652,4.408,653,3.05,654,3.427,674,4.332,675,3.222,679,3.32,730,3.546,731,3.43,732,3.32,733,3.801,734,3.427,3035,4.498,3195,7.269,3196,5.407]],["title/classes/SetUserProfile.html",[0,0.262,675,3.018]],["body/classes/SetUserProfile.html",[0,0.499,2,0.795,3,0.04,4,0.035,5,0.035,8,0.162,9,0.596,13,0.53,15,0.431,16,0.005,18,0.347,20,0.829,22,1.365,26,0.073,27,0.002,28,0.003,29,0.002,34,1.639,39,0.239,80,0.508,84,0.866,85,0.845,101,1.058,102,1.046,124,2.044,139,1.083,172,2.037,221,1.846,225,1.822,227,1.439,228,2.044,231,1.728,232,2.319,240,1.554,244,1.083,254,1.847,257,2.517,394,3.998,395,4.955,577,5.391,590,4.332,591,3.32,618,3.902,621,3.05,645,3.875,652,4.408,653,3.05,654,3.427,674,3.222,675,4.332,679,3.32,730,3.546,731,3.43,732,3.32,733,3.801,734,5.567,3197,5.407,3198,7.269,3199,5.407]],["title/modules/SharedModule.html",[425,1.681,439,2.487]],["body/modules/SharedModule.html",[0,0.246,3,0.035,4,0.031,5,0.031,16,0.005,26,0.035,27,0.002,28,0.003,29,0.002,39,0.336,52,3.141,59,4.277,79,3.722,105,0.762,107,3.859,108,2.758,125,1.223,132,3.141,162,3.141,171,2.856,191,1.223,202,3.141,204,2.041,242,2.246,272,4.277,399,2.685,425,1.58,427,2.013,428,2.246,429,3.49,430,3.143,431,2.338,432,3.426,439,5.217,443,3.143,444,2.291,446,3.025,447,2.97,501,2.203,604,3.206,788,4.277,1202,3.96,1552,7.411,1996,4.277,2151,4.277,2175,7.411,2270,7.411,2387,7.411,3200,4.277,3201,4.277,3202,4.277,3203,4.277,3204,4.76,3205,4.76,3206,7.684,3207,7.684,3208,7.684,3209,7.684,3210,7.684,3211,7.684,3212,3.96,3213,4.277,3214,4.76,3215,4.76,3216,4.76,3217,4.277,3218,4.76,3219,4.76,3220,4.76,3221,4.76,3222,4.76,3223,4.76,3224,4.76,3225,4.76,3226,4.76,3227,4.76,3228,6.661,3229,4.76]],["title/components/ShopComponent.html",[51,0.946,198,1.593]],["body/components/ShopComponent.html",[0,0.101,3,0.014,4,0.013,5,0.013,8,0.058,9,0.272,13,0.763,15,0.389,16,0.005,18,0.405,20,0.335,22,1.372,26,0.025,27,0.001,28,0.001,29,0.001,34,0.735,39,0.286,51,0.808,52,0.613,53,1.072,54,0.63,55,0.639,56,0.639,57,0.639,61,0.978,62,1.418,63,0.605,64,2.892,65,3.209,66,1.449,68,1.086,70,1.086,73,0.696,76,1.673,80,0.183,84,1.168,85,1.14,93,1.744,94,2.338,101,1.218,102,1.461,105,0.312,125,0.501,126,1.086,127,1.072,128,0.639,129,1.673,130,0.639,131,0.639,132,0.613,133,1.086,134,0.613,135,0.639,136,0.613,137,0.639,138,0.605,139,0.867,140,2.473,141,0.613,142,1.453,143,1.673,144,0.605,145,0.613,146,0.639,147,0.613,148,1.086,149,0.605,150,0.63,151,0.613,152,0.501,153,0.639,154,0.605,155,0.639,156,0.605,157,0.639,158,0.613,159,0.639,160,0.613,161,0.639,162,0.613,163,0.639,164,0.639,165,0.605,166,0.567,167,0.613,168,0.639,169,0.613,170,0.639,171,0.613,172,0.546,173,0.639,174,0.613,175,0.639,176,0.613,177,0.639,178,0.613,179,0.941,180,0.605,181,0.613,182,0.639,183,0.613,184,0.575,185,0.613,186,1.192,187,0.605,188,0.613,189,0.639,190,0.613,191,0.501,192,0.639,193,0.613,194,1.398,195,0.639,196,0.613,197,0.639,198,1.606,199,0.639,200,0.605,201,1.213,202,0.613,203,0.639,204,0.597,205,0.639,206,0.613,207,0.639,208,0.613,209,0.613,210,0.613,211,1.467,212,0.605,213,0.613,214,1.454,215,0.639,216,0.605,217,0.613,218,0.639,219,0.613,220,0.613,221,0.495,222,0.639,223,0.639,227,1.385,231,0.577,237,1.831,238,0.869,239,3.342,240,0.56,241,1.072,242,2.701,243,1.1,250,1.022,251,1.072,253,1.418,254,0.382,255,1.7,267,1.072,277,2.381,278,2.935,282,1.197,283,3.039,284,2.304,299,0.839,301,3.074,304,1.022,306,0.748,308,0.811,310,1.954,314,1.622,320,3.582,324,0.839,331,3.148,332,2.935,336,2.935,345,2.258,346,2.352,361,1.622,364,2.594,365,1.447,391,0.825,393,0.886,421,4.114,544,1.622,588,2.175,589,2.352,666,3.622,721,1.622,991,2.036,1011,3.658,1020,1.022,1028,3.212,1030,1.565,1064,1.525,1233,2.462,1234,3.993,1247,2.981,1248,2.839,1250,1.622,1251,2.258,1289,1.236,1290,1.162,1293,3.849,1294,1.506,1296,1.279,1297,1.236,1299,1.279,1300,3.621,1305,3.512,1306,1.1,1312,1.236,1313,1.197,1490,5.595,1503,2.594,1603,2.759,1604,2.759,1605,2.759,1606,2.594,1703,1.525,1730,3.069,1868,4.249,1894,2.594,1908,2.981,1958,1.525,1977,1.447,2056,3.6,2065,3.6,2066,2.759,2074,1.525,2093,1.622,2131,3.79,2353,1.622,2365,2.462,2568,2.759,2749,4.248,2765,1.622,2768,1.525,2769,1.752,2771,1.622,2772,1.622,2775,1.622,2843,5.595,2880,1.752,2881,1.752,3128,1.525,3137,4.589,3171,4.248,3183,2.981,3230,1.752,3231,4.328,3232,3.317,3233,3.889,3234,4.328,3235,3.889,3236,4.328,3237,4.328,3238,5.724,3239,3.317,3240,3.317,3241,4.589,3242,5.106,3243,3.317,3244,5.106,3245,3.317,3246,3.317,3247,3.317,3248,3.317,3249,3.317,3250,1.95,3251,1.95,3252,3.317,3253,1.95,3254,3.317,3255,1.95,3256,1.95,3257,1.95,3258,1.95,3259,1.95,3260,3.317,3261,1.95,3262,1.95,3263,3.317,3264,1.95,3265,3.317,3266,1.95,3267,3.317,3268,1.95,3269,3.317,3270,1.95,3271,3.317,3272,1.95,3273,1.95,3274,1.95,3275,1.95,3276,1.95,3277,1.95,3278,1.95,3279,1.95,3280,1.95,3281,1.95,3282,1.95,3283,1.95,3284,1.95,3285,1.95,3286,1.95,3287,1.95,3288,1.622,3289,1.525,3290,1.752,3291,1.95,3292,1.752,3293,2.981,3294,1.752,3295,1.95,3296,5.724,3297,3.317,3298,1.95,3299,1.95,3300,3.317,3301,3.317,3302,6.993,3303,1.752,3304,1.622,3305,4.328,3306,3.889,3307,3.317,3308,2.981,3309,1.95,3310,1.95,3311,2.981,3312,1.95,3313,3.317,3314,1.95,3315,3.317,3316,3.317,3317,3.317,3318,1.95,3319,1.95,3320,4.328,3321,1.95,3322,1.95,3323,3.317,3324,3.317,3325,1.95,3326,4.328,3327,1.95,3328,1.95,3329,1.95,3330,1.95,3331,1.95,3332,3.317,3333,3.317,3334,3.317,3335,2.594,3336,4.589,3337,5.106,3338,5.106,3339,1.95,3340,1.752]],["title/components/ShopLayoutComponent.html",[51,0.946,200,1.572]],["body/components/ShopLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,2.497,201,2.612,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,477,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,3341,6.621]],["title/modules/ShopLayoutModule.html",[425,1.681,3342,3.96]],["body/modules/ShopLayoutModule.html",[0,0.352,3,0.05,4,0.044,5,0.044,16,0.004,26,0.05,27,0.003,28,0.004,29,0.003,39,0.335,105,1.09,125,1.75,191,1.75,198,3.158,201,1.907,398,2.357,425,2.26,427,2.88,428,3.212,429,4.164,430,3.212,431,3.344,432,3.036,439,4.931,443,3.981,444,3.276,446,3.832,447,3.762,453,3.654,454,3.654,477,5.324,501,3.151,536,3.744,604,4.06,606,3.944,785,4.18,1327,5.743,1328,5.663,3341,6.118,3342,8.041,3343,6.118,3344,6.118,3345,6.808,3346,6.808,3347,6.808,3348,6.808]],["title/components/ShowErrorDialogComponent.html",[51,0.946,202,1.593]],["body/components/ShowErrorDialogComponent.html",[0,0.185,3,0.026,4,0.023,5,0.023,8,0.107,9,0.442,13,0.639,15,0.33,16,0.005,18,0.347,20,0.733,26,0.026,27,0.002,28,0.002,29,0.002,34,1.107,39,0.178,51,1.216,52,1.122,53,1.745,54,1.153,55,1.169,56,1.169,57,1.169,61,1.591,62,2.133,63,1.108,64,3.047,65,3.381,66,1.532,68,1.768,70,1.768,73,1.134,76,2.379,78,3.541,80,0.335,84,0.571,85,0.558,93,0.749,94,1.494,104,3.315,105,0.571,121,3.315,125,0.917,126,1.768,127,1.745,128,1.169,129,2.379,130,1.169,131,1.169,132,1.122,133,1.768,134,1.122,135,1.169,136,1.122,137,1.169,138,1.108,139,0.715,140,3,141,1.122,142,1.844,143,2.379,144,1.108,145,1.122,146,1.169,147,1.122,148,1.768,149,1.108,150,1.153,151,1.122,152,0.917,153,1.169,154,1.108,155,1.169,156,1.108,157,1.169,158,1.122,159,1.169,160,1.122,161,1.169,162,1.122,163,1.169,164,1.169,165,1.108,166,1.038,167,1.122,168,1.169,169,1.122,170,1.169,171,1.122,172,1.513,173,1.169,174,1.122,175,1.169,176,1.122,177,1.169,178,1.122,179,1.532,180,1.108,181,1.122,182,1.169,183,1.122,184,1.052,185,1.122,186,1.26,187,1.108,188,1.122,189,1.169,190,1.122,191,0.917,192,1.169,193,1.122,194,1.153,195,1.169,196,1.122,197,1.169,198,1.122,199,1.169,200,1.108,201,1,202,2.285,203,2.875,204,3.144,205,1.169,206,1.122,207,1.169,208,1.122,209,1.122,210,1.122,211,1.551,212,1.108,213,1.122,214,1.26,215,1.169,216,1.108,217,1.122,218,1.169,219,1.122,220,1.122,221,0.906,222,1.169,223,1.169,227,1.069,254,0.698,278,3.616,282,2.191,296,3.808,305,2.79,341,3.422,344,2.261,589,2.53,1138,3.206,1741,4.852,1899,3.206,1933,3.206,1943,3.206,2001,7.01,2437,4.852,3217,7.66,3349,8.523,3350,3.568,3351,6.513,3352,5.399,3353,7.801,3354,5.399,3355,3.568,3356,3.568,3357,3.568,3358,3.568,3359,3.568,3360,7.262,3361,5.399,3362,5.399,3363,7.262,3364,3.568,3365,3.568,3366,3.568,3367,3.568,3368,3.568,3369,3.568,3370,3.568,3371,3.568,3372,3.568,3373,3.568,3374,3.568,3375,3.568,3376,3.568,3377,3.206,3378,3.568,3379,3.568]],["title/components/SidebarComponent.html",[51,0.946,206,1.593]],["body/components/SidebarComponent.html",[0,0.181,3,0.026,4,0.023,5,0.023,8,0.105,9,0.437,13,0.706,15,0.344,16,0.005,18,0.358,26,0.026,27,0.002,28,0.002,29,0.002,34,1.095,39,0.31,51,1.203,52,1.103,53,1.722,54,1.133,55,1.149,56,1.149,57,1.149,61,1.571,62,2.111,63,1.089,64,3.044,65,3.377,66,1.512,68,1.745,70,1.745,73,1.119,76,2.358,78,3.495,80,0.329,84,0.853,85,0.833,93,1.119,94,1.783,104,3.957,105,0.561,125,0.901,126,1.745,127,1.722,128,1.149,129,2.358,130,1.149,131,1.149,132,1.103,133,1.745,134,1.103,135,1.149,136,1.103,137,1.149,138,1.089,139,0.703,140,2.987,141,1.103,142,1.966,143,2.358,144,1.089,145,1.103,146,1.149,147,1.103,148,1.745,149,1.089,150,1.133,151,1.103,152,0.901,153,1.149,154,1.089,155,1.149,156,1.089,157,1.149,158,1.103,159,1.149,160,1.103,161,1.149,162,1.103,163,1.149,164,1.149,165,1.089,166,1.02,167,1.103,168,1.149,169,1.103,170,1.149,171,1.103,172,0.982,173,1.149,174,1.103,175,1.149,176,1.103,177,1.149,178,1.103,179,1.512,180,1.089,181,1.103,182,1.149,183,1.103,184,1.034,185,1.103,186,1.244,187,1.089,188,1.103,189,1.149,190,1.103,191,0.901,192,1.149,193,1.103,194,1.133,195,1.149,196,1.103,197,1.149,198,1.103,199,1.149,200,1.089,201,0.982,202,1.103,203,1.149,204,1.074,205,1.149,206,2.265,207,1.149,208,1.103,209,1.103,210,1.103,211,1.531,212,1.089,213,1.103,214,1.244,215,1.149,216,1.089,217,1.103,218,1.149,219,1.103,220,1.103,221,0.89,222,1.149,223,1.149,227,1.533,254,0.686,277,2.994,283,3.67,284,3.116,296,2.794,306,1.346,308,1.458,310,1.819,318,1.306,320,2.617,378,2.487,381,3.778,391,1.483,397,1.655,398,1.214,417,2.223,588,3.495,629,3.166,979,4.061,983,2.09,992,2.487,1011,3.611,1020,1.839,1030,2.514,1050,2.387,1063,2.487,1066,3.151,1293,4.171,1294,1.593,1304,2.931,1312,2.223,1313,2.153,1634,4.433,1701,2.917,1702,3.151,1703,2.742,1704,3.151,1705,5.361,1958,2.742,1959,2.917,1960,2.917,1961,2.917,2239,2.742,2316,5.361,2317,5.792,2332,5.361,2768,2.742,3288,2.917,3289,2.742,3304,2.917,3335,4.167,3380,3.507,3381,5.328,3382,6.445,3383,5.328,3384,3.507,3385,3.507,3386,3.507,3387,5.328,3388,3.507,3389,3.507,3390,5.328,3391,3.507,3392,3.151,3393,3.507,3394,5.328]],["title/components/StripeCheckoutComponent.html",[51,0.946,208,1.593]],["body/components/StripeCheckoutComponent.html",[0,0.124,3,0.018,4,0.026,5,0.016,8,0.072,9,0.323,11,4.425,13,0.493,15,0.377,16,0.005,18,0.372,20,0.398,26,0.018,27,0.002,28,0.002,29,0.001,34,0.854,39,0.286,51,0.939,52,0.755,53,1.276,54,0.776,55,0.786,56,0.786,57,0.786,61,1.164,62,1.646,63,0.745,64,2.954,65,3.278,66,1.12,68,1.293,70,1.293,73,0.829,76,1.907,78,2.589,80,0.225,81,1.703,82,3.691,84,0.384,85,0.375,86,2.502,89,4.248,93,1.055,94,1.78,101,0.773,102,1.126,103,2.469,104,2.424,105,0.384,106,3.086,107,1.391,108,1.391,110,0.786,114,1.474,118,1.179,121,2.424,125,0.617,126,1.293,127,1.624,128,0.786,129,1.907,130,0.786,131,0.786,132,0.755,133,1.293,134,0.755,135,0.786,136,0.755,137,0.786,138,0.745,139,0.481,140,2.667,141,0.755,142,1.478,143,1.907,144,0.745,145,0.755,146,0.786,147,0.755,148,1.293,149,0.745,150,0.776,151,0.755,152,0.617,153,0.786,154,0.745,155,0.786,156,0.745,157,0.786,158,0.755,159,0.786,160,0.755,161,0.786,162,0.755,163,0.786,164,0.786,165,0.745,166,0.699,167,0.755,168,0.786,169,0.755,170,0.786,171,0.755,172,0.673,173,0.786,174,0.755,175,0.786,176,0.755,177,0.786,178,0.755,179,1.12,180,0.745,181,0.755,182,0.786,183,0.755,184,0.708,185,0.755,186,0.922,187,0.745,188,0.755,189,0.786,190,0.755,191,0.617,192,0.786,193,0.755,194,0.776,195,0.786,196,0.755,197,0.786,198,0.755,199,0.786,200,0.745,201,0.673,202,0.755,203,0.786,204,1.971,205,0.786,206,0.755,207,0.786,208,1.832,209,2.489,210,0.755,211,1.134,212,0.745,213,0.755,214,0.922,215,0.786,216,0.745,217,0.755,218,0.786,219,0.755,220,0.755,221,0.61,222,0.786,223,0.786,227,0.995,231,0.687,240,0.69,276,2.836,277,2.091,278,3.278,283,2.943,284,2.343,295,1.782,298,2.698,299,1.033,300,2.227,301,2.978,304,1.259,306,0.922,308,0.999,309,1.204,310,1.988,311,1.782,318,2.396,320,1.179,324,2.769,332,1.231,336,2.024,337,3.284,340,1.635,341,3.186,344,1.522,377,4.078,381,3.26,391,1.016,393,1.091,398,0.831,399,1.355,645,2.747,666,3.87,735,1.782,816,5.718,818,2.119,851,3.713,852,3.285,915,2.158,918,2.158,965,1.071,966,1.391,967,2.07,1186,4.517,1187,3.548,1190,2.171,1209,2.589,1210,1.635,1229,2.799,1232,5.352,1237,4.322,1243,3.548,1244,3.284,1363,5.41,1364,6.57,1368,1.998,1429,3.087,1889,5.233,1928,1.998,1929,1.998,1935,2.158,1965,3.548,2131,2.93,2149,3.284,2355,1.878,2378,1.998,2379,1.998,2380,3.284,2459,6.57,2482,2.158,2686,2.158,2701,2.158,3128,1.878,3171,3.284,3395,8.03,3396,8.935,3397,8.03,3398,2.401,3399,5.823,3400,5.027,3401,5.027,3402,5.823,3403,7.311,3404,2.401,3405,2.401,3406,2.401,3407,2.401,3408,2.401,3409,2.401,3410,2.401,3411,5.823,3412,2.401,3413,5.027,3414,3.948,3415,3.948,3416,2.401,3417,2.401,3418,2.401,3419,2.401,3420,2.401,3421,2.401,3422,2.401,3423,3.948,3424,2.158,3425,2.158,3426,2.401,3427,3.548,3428,2.401,3429,3.948,3430,2.401,3431,2.401,3432,3.948,3433,2.401,3434,2.401,3435,2.401,3436,2.401,3437,2.401,3438,2.401,3439,2.401,3440,3.948,3441,2.401,3442,2.401,3443,2.401,3444,2.401,3445,2.401,3446,2.401,3447,2.401,3448,2.401,3449,2.401,3450,2.401,3451,2.401,3452,2.401,3453,2.401,3454,5.027,3455,3.948,3456,2.401,3457,3.948,3458,2.401,3459,2.401,3460,2.401,3461,2.401,3462,3.948,3463,2.401,3464,2.401,3465,2.401,3466,2.401,3467,3.948,3468,2.401,3469,2.401,3470,3.948,3471,3.948]],["title/modules/StripeIntegrationModule.html",[425,1.681,440,3.591]],["body/modules/StripeIntegrationModule.html",[0,0.346,3,0.049,4,0.044,5,0.044,16,0.004,26,0.049,27,0.003,28,0.004,29,0.003,39,0.323,105,1.07,125,1.717,191,1.717,208,3.307,209,2.102,399,3.769,425,2.218,427,2.826,428,3.152,429,4.129,430,3.152,431,3.282,432,4.054,439,4.908,440,7.327,443,3.934,444,3.215,446,3.787,447,3.718,453,3.586,454,3.586,497,5.558,499,7.493,501,3.092,604,4.013,3395,6.004,3397,6.004,3472,6.004,3473,6.004,3474,6.004,3475,6.68,3476,6.68,3477,6.68,3478,6.68]],["title/components/SubCategoryDetailsComponent.html",[51,0.946,210,1.593]],["body/components/SubCategoryDetailsComponent.html",[0,0.123,3,0.018,4,0.015,5,0.015,8,0.071,9,0.32,13,0.627,15,0.359,16,0.005,18,0.389,22,0.582,26,0.018,27,0.001,28,0.002,29,0.001,34,0.847,39,0.259,51,0.931,52,0.746,53,1.263,54,0.766,55,0.777,56,0.777,57,0.777,61,1.152,62,1.632,63,0.736,64,2.951,65,3.274,66,1.64,68,1.28,70,1.28,73,0.82,76,1.893,80,0.223,84,0.798,85,0.779,93,1.444,94,2.102,101,0.765,102,0.756,105,0.38,125,0.609,126,1.28,127,1.263,128,0.777,129,1.893,130,0.777,131,0.777,132,0.746,133,1.28,134,0.746,135,0.777,136,0.746,137,0.777,138,0.736,139,0.998,140,2.656,141,0.746,142,2.633,143,1.893,144,0.736,145,0.746,146,0.777,147,0.746,148,1.28,149,0.736,150,0.766,151,0.746,152,0.609,153,0.777,154,0.736,155,0.777,156,0.736,157,0.777,158,0.746,159,0.777,160,0.746,161,0.777,162,0.746,163,0.777,164,0.777,165,0.736,166,0.69,167,0.746,168,0.777,169,0.746,170,0.777,171,0.746,172,0.664,173,0.777,174,0.746,175,0.777,176,0.746,177,0.777,178,0.746,179,1.109,180,0.736,181,0.746,182,0.777,183,0.746,184,0.699,185,0.746,186,0.912,187,0.736,188,0.746,189,0.777,190,0.746,191,0.609,192,0.777,193,0.746,194,0.766,195,0.777,196,0.746,197,0.777,198,0.746,199,0.777,200,0.736,201,0.664,202,0.746,203,0.777,204,0.727,205,0.777,206,0.746,207,0.777,208,0.746,209,0.746,210,1.818,211,2.388,212,0.736,213,0.746,214,0.912,215,0.777,216,0.736,217,0.746,218,0.777,219,0.746,220,0.746,221,0.602,222,0.777,223,0.777,227,1.739,237,2.108,238,1.057,253,2.579,254,0.464,277,2.658,278,3.169,282,1.456,283,3.264,284,2.572,295,2.9,296,2.049,301,2.306,306,0.91,308,0.986,318,0.883,324,2.145,331,2.149,332,2.555,336,2.555,345,2.66,346,2.771,365,1.76,381,3.616,391,1.003,393,1.077,398,0.821,421,3.26,666,1.077,970,1.854,971,2.771,972,3.897,973,3.056,975,4.051,976,4.192,980,1.973,982,2.563,987,2.131,988,1.973,991,2.399,992,2.771,1011,4.068,1020,1.243,1233,1.76,1248,2.563,1251,3.392,1290,5.538,1293,4.403,1294,1.077,1306,1.338,1307,4.098,1308,1.555,1311,3.392,1386,2.131,1589,1.854,1730,3.534,1801,2.771,1868,1.76,1894,3.056,1962,2.131,1963,2.131,1964,2.131,1966,3.25,2351,2.131,2352,3.25,2353,1.973,2354,3.25,2355,3.056,2365,2.9,2374,3.25,2454,2.131,2541,3.25,2545,1.973,2754,4.998,2758,2.131,2760,2.131,2763,2.131,2767,2.131,2768,1.854,2775,4.145,2848,4.95,2882,1.76,2883,1.76,3233,4.478,3235,4.478,3241,5.193,3306,3.511,3308,3.511,3311,3.511,3335,3.056,3340,2.131,3392,2.131,3479,9.292,3480,8.351,3481,4.983,3482,3.907,3483,5.779,3484,3.907,3485,5.779,3486,2.371,3487,3.907,3488,2.371,3489,2.371,3490,2.371,3491,3.907,3492,2.371,3493,2.371,3494,2.371,3495,2.371,3496,2.371,3497,2.371,3498,2.371,3499,2.371,3500,2.371,3501,2.371,3502,2.371,3503,2.371,3504,2.371,3505,2.371,3506,3.511,3507,2.371,3508,2.371,3509,3.907,3510,3.907,3511,4.983,3512,2.371,3513,2.371,3514,2.371,3515,2.371,3516,3.907,3517,2.371,3518,2.371,3519,4.983,3520,2.371,3521,2.371,3522,2.371,3523,2.371,3524,2.371]],["title/classes/SubCategoryDto.html",[0,0.262,997,3.96]],["body/classes/SubCategoryDto.html",[0,0.453,2,1.065,3,0.054,4,0.047,5,0.047,8,0.217,9,0.718,11,5.671,13,0.96,15,0.398,16,0.004,18,0.398,20,1.028,22,1.305,26,0.065,27,0.003,28,0.004,29,0.003,31,5.018,993,6.021,994,6.504,997,6.85,998,6.992,3525,7.238,3526,7.238,3527,7.238]],["title/components/SubCategoryLayoutComponent.html",[51,0.946,212,1.572]],["body/components/SubCategoryLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.186,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.558,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,2.727,212,2.497,213,1.387,214,1.473,215,1.444,216,1.369,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,474,4.934,775,2.706,776,3.873,777,4.524,778,3.873,3528,5.669,3529,4.408]],["title/modules/SubCategoryLayoutModule.html",[425,1.681,3530,3.96]],["body/modules/SubCategoryLayoutModule.html",[0,0.349,3,0.05,4,0.044,5,0.044,16,0.004,26,0.05,27,0.003,28,0.004,29,0.003,39,0.33,105,1.08,125,1.733,142,2.495,191,1.733,210,3.151,211,1.938,398,2.335,425,2.239,427,2.853,428,3.182,429,4.146,430,3.182,431,3.312,432,3.007,439,4.919,443,3.957,444,3.246,446,3.809,447,3.74,453,3.62,454,3.62,474,5.274,501,3.121,536,3.709,604,4.037,606,3.907,785,4.14,1006,5.274,1290,4.019,3480,6.06,3528,6.06,3530,8.027,3531,6.06,3532,6.743,3533,6.06,3534,6.743,3535,6.743,3536,6.743]],["title/classes/SubCategoryModel.html",[0,0.262,1011,2.54]],["body/classes/SubCategoryModel.html",[0,0.324,1,7.91,2,0.921,3,0.046,4,0.041,5,0.041,8,0.187,9,0.655,10,5.446,11,4.636,12,1.89,13,0.785,14,5.446,15,0.431,16,0.004,17,4.294,18,0.431,20,0.807,22,1.431,26,0.046,27,0.003,28,0.003,29,0.003,39,0.291,142,2.031,211,1.798,237,3.731,253,2.889,998,6.547,1009,6.257,1011,4.014,1013,7.513,1014,5.623,1015,5.623,1016,5.623,1017,5.623,1018,5.623,1019,5.623,1305,4.976,1306,3.53,3506,7.926,3537,8.633,3538,6.257,3539,8.82,3540,6.257,3541,6.257,3542,6.257,3543,6.257,3544,6.257]],["title/injectables/SubCategoryService.html",[613,1.419,2848,3.447]],["body/injectables/SubCategoryService.html",[0,0.21,3,0.03,4,0.026,5,0.026,8,0.121,9,0.486,12,2.032,13,0.912,15,0.423,16,0.005,18,0.405,20,0.987,22,1.52,26,0.03,27,0.002,28,0.003,29,0.002,39,0.3,73,1.246,80,0.381,84,1.489,85,1.453,93,1.952,101,1.162,102,1.148,105,0.649,110,1.327,118,2.776,142,1.029,214,0.946,234,4.609,237,1.714,238,1.807,240,1.164,253,2.533,263,2.033,318,2.616,372,1.991,397,1.912,457,2.033,613,1.663,614,1.714,623,2.415,624,4.253,626,3.538,629,4.992,649,2.175,650,2.229,651,2.229,658,2.078,731,4.3,853,3.008,868,2.658,997,6.048,1011,2.033,1020,2.125,1037,4.938,1040,4.938,1042,3.371,1044,3.371,1046,3.371,1076,4.313,1294,2.696,1304,4.253,1305,2.286,1306,2.286,1762,6.949,2804,4.938,2848,4.041,2925,6.312,3545,9.688,3546,4.052,3547,7.024,3548,5.936,3549,5.936,3550,5.936,3551,7.733,3552,5.936,3553,5.936,3554,5.936,3555,5.936,3556,5.936,3557,5.936,3558,4.052,3559,5.936,3560,4.052,3561,5.936,3562,4.052,3563,4.052,3564,5.936,3565,4.052,3566,5.936,3567,4.052,3568,5.936,3569,4.052,3570,4.052,3571,5.936,3572,7.733,3573,4.052,3574,5.936,3575,4.052,3576,4.052,3577,4.052,3578,4.052,3579,4.052,3580,4.052,3581,4.052,3582,4.052,3583,4.052,3584,4.052,3585,4.052,3586,4.052,3587,4.052]],["title/injectables/SubCategoryState.html",[613,1.419,1676,3.96]],["body/injectables/SubCategoryState.html",[0,0.246,3,0.035,4,0.031,5,0.031,8,0.142,13,0.89,15,0.37,16,0.005,18,0.37,26,0.035,27,0.002,28,0.003,29,0.002,33,5.252,39,0.329,64,2.206,73,1.397,80,0.446,84,1.402,85,1.369,93,1.746,94,1.315,105,0.761,110,1.556,118,2.292,124,1.796,211,1.365,225,1.883,231,1.336,250,2.492,253,1.556,256,2.613,283,3.749,299,3.579,306,1.824,310,2.621,318,2.477,331,2.613,613,1.864,614,2.01,666,3.022,683,5.931,686,4.714,709,2.832,710,2.681,711,2.918,717,4.085,1010,4.758,1011,3.851,1020,2.492,1034,6.915,1064,3.716,1065,3.953,1288,5.662,1289,5.751,1290,5.407,1294,2.158,1295,5.662,1296,3.117,1297,5.751,1299,5.951,1676,5.203,2050,3.527,2765,3.953,2848,6.177,2882,3.527,2883,3.527,2885,4.27,3290,4.27,3588,4.752,3589,6.653,3590,4.752,3591,4.752,3592,6.653,3593,6.653,3594,4.752,3595,4.752,3596,4.752,3597,4.752,3598,6.653,3599,6.653,3600,4.752,3601,6.653,3602,4.752,3603,4.752,3604,4.752,3605,4.752,3606,4.752,3607,4.752,3608,4.752]],["title/interfaces/SubCategoryStateModel.html",[244,1.014,1295,3.447]],["body/interfaces/SubCategoryStateModel.html",[0,0.485,3,0.047,4,0.042,5,0.042,8,0.192,9,0.665,12,1.917,13,0.627,15,0.409,16,0.005,20,0.645,22,1.208,26,0.073,27,0.003,28,0.003,29,0.003,39,0.211,80,0.762,211,1.838,214,1.494,225,1.327,227,1.267,231,1.631,232,2.188,244,1.282,249,1.664,252,2.318,254,1.588,263,3.209,270,1.664,729,3.609,1010,5.071,1011,4.701,1020,3.354,1030,3.018,1288,4.355,1289,4.055,1290,3.812,1291,4.748,1293,5.726,1294,2.905,1295,5.524,1296,4.196,1297,4.055,1298,4.536,1299,4.196,1300,4.536]],["title/classes/SubCategoryTagModel.html",[0,0.262,1305,2.857]],["body/classes/SubCategoryTagModel.html",[0,0.367,2,1.044,3,0.053,4,0.046,5,0.046,8,0.212,9,0.709,12,2.045,13,0.849,15,0.411,16,0.004,18,0.411,20,0.716,22,1.448,26,0.053,27,0.003,28,0.004,29,0.003,39,0.234,142,2.197,214,1.656,1009,6.768,1013,7.303,1305,4.882,2094,7.929,2097,7.199,2754,7.303,2898,6.375,2899,6.375,2900,6.375,2901,6.375,2902,6.375,2903,6.375,3537,7.776]],["title/classes/Subscriber.html",[0,0.262,1829,4.212]],["body/classes/Subscriber.html",[0,0.362,2,1.028,3,0.052,4,0.046,5,0.046,8,0.209,9,0.703,12,2.192,15,0.419,16,0.005,17,4.603,18,0.419,20,0.865,22,1.277,26,0.052,27,0.003,28,0.004,29,0.003,39,0.283,511,7.255,1829,7.134,2492,4.957,2511,7.901,2516,5.815,3609,6.99,3610,9.277,3611,9.277,3612,9.277,3613,6.99,3614,6.99,3615,6.99,3616,6.99,3617,6.99,3618,6.99]],["title/classes/SubscribersNotifications.html",[0,0.262,2511,3.96]],["body/classes/SubscribersNotifications.html",[0,0.33,2,0.939,3,0.047,4,0.042,5,0.042,8,0.191,9,0.664,12,2.103,15,0.433,16,0.005,18,0.429,20,0.997,22,1.512,26,0.047,27,0.003,28,0.003,29,0.003,33,3.426,39,0.21,124,3.54,234,3.804,382,5.158,868,5.839,1357,6.951,2495,8,2498,6.962,2511,6.337,3619,10.251,3620,6.383,3621,8.902,3622,8,3623,6.383,3624,6.383,3625,6.383,3626,6.383,3627,6.383,3628,6.383,3629,6.383,3630,6.383,3631,6.383]],["title/classes/TagDto.html",[0,0.262,3632,4.212]],["body/classes/TagDto.html",[0,0.404,2,1.149,3,0.058,4,0.051,5,0.051,8,0.234,9,0.751,13,0.954,15,0.33,16,0.004,18,0.33,20,0.925,26,0.058,27,0.003,28,0.004,29,0.003,31,4.699,3632,7.625,3633,7.81,3634,7.81]],["title/components/TagItemsComponent.html",[51,0.946,213,1.593]],["body/components/TagItemsComponent.html",[0,0.174,3,0.025,4,0.022,5,0.022,8,0.101,9,0.423,13,0.691,15,0.353,16,0.005,18,0.364,20,0.521,26,0.025,27,0.001,28,0.002,29,0.001,34,1.067,39,0.275,51,1.173,52,1.058,53,1.668,54,1.087,55,1.101,56,1.101,57,1.101,61,1.521,62,2.057,63,1.044,64,3.035,65,3.368,66,1.464,68,1.69,70,1.69,73,1.083,76,2.307,80,0.316,84,0.826,85,0.807,93,1.083,94,1.738,105,0.538,125,0.864,126,1.69,127,1.668,128,1.101,129,2.307,130,1.101,131,1.101,132,1.058,133,1.69,134,1.058,135,1.101,136,1.058,137,1.101,138,1.044,139,0.674,140,2.954,141,1.058,142,1.788,143,2.307,144,1.044,145,1.058,146,1.101,147,1.058,148,1.69,149,1.044,150,1.087,151,1.058,152,0.864,153,1.101,154,1.044,155,1.101,156,1.044,157,1.101,158,1.058,159,1.101,160,1.058,161,1.101,162,1.058,163,1.101,164,1.101,165,1.044,166,0.978,167,1.058,168,1.101,169,1.058,170,1.101,171,1.058,172,0.942,173,1.101,174,1.058,175,1.101,176,1.058,177,1.101,178,1.058,179,1.464,180,1.044,181,1.058,182,1.101,183,1.058,184,0.991,185,1.058,186,1.205,187,1.044,188,1.058,189,1.101,190,1.058,191,0.864,192,1.101,193,1.058,194,1.087,195,1.101,196,1.058,197,1.101,198,1.058,199,1.101,200,1.044,201,0.942,202,1.058,203,1.101,204,1.03,205,1.101,206,1.058,207,1.101,208,1.058,209,1.058,210,1.058,211,1.483,212,1.044,213,2.216,214,2.173,215,1.101,216,1.044,217,1.058,218,1.101,219,1.058,220,1.058,221,0.854,222,1.101,223,1.101,227,1.706,254,0.658,263,3.15,277,3.16,278,3.63,283,3.556,284,3.058,306,1.291,308,1.399,318,2.338,324,1.447,352,5.228,381,3.723,391,1.422,393,1.527,398,1.164,417,2.131,975,3.98,976,4.62,982,3.385,984,2.63,986,3.022,990,2.797,991,3.168,992,4.453,1010,3.693,1011,4.188,1020,1.763,1293,2.99,1294,1.527,1634,4.293,1637,2.496,1642,4.637,1701,2.797,1703,2.63,2848,5.684,2882,2.496,2883,2.496,3164,3.022,3181,4.637,3635,8.835,3636,7.939,3637,3.362,3638,6.28,3639,5.16,3640,7.598,3641,5.16,3642,3.362,3643,3.362,3644,3.362,3645,3.362,3646,3.362,3647,3.362,3648,5.16,3649,3.362,3650,3.362,3651,3.362,3652,3.362,3653,3.362,3654,5.16,3655,5.16,3656,3.362]],["title/components/TagLayoutComponent.html",[51,0.946,216,1.572]],["body/components/TagLayoutComponent.html",[0,0.228,3,0.033,4,0.029,5,0.029,8,0.132,13,0.619,16,0.004,18,0.266,26,0.033,27,0.002,28,0.003,29,0.002,34,1.252,39,0.145,51,1.376,52,1.387,53,2.039,54,1.424,55,1.444,56,1.444,57,1.444,61,1.859,62,2.413,63,1.369,64,3.085,65,3.423,66,1.79,68,2.066,70,2.066,73,1.325,76,2.634,80,0.692,93,0.925,94,1.746,105,0.706,125,1.133,126,2.066,127,2.039,128,1.444,129,2.634,130,1.444,131,1.444,132,1.387,133,2.066,134,1.387,135,1.444,136,1.387,137,1.444,138,1.369,139,0.883,140,3.154,141,1.387,142,2.042,143,2.634,144,1.369,145,1.387,146,1.444,147,1.387,148,2.066,149,1.369,150,1.424,151,1.387,152,1.133,153,1.444,154,1.369,155,1.444,156,1.369,157,1.444,158,1.387,159,1.444,160,1.387,161,1.444,162,1.387,163,1.444,164,1.444,165,1.369,166,1.283,167,1.387,168,1.444,169,1.387,170,1.444,171,1.387,172,1.235,173,1.444,174,1.387,175,1.444,176,1.387,177,1.444,178,1.387,179,1.79,180,1.369,181,1.387,182,1.444,183,1.387,184,1.299,185,1.387,186,1.473,187,1.369,188,1.387,189,1.444,190,1.387,191,1.133,192,1.444,193,1.387,194,1.424,195,1.444,196,1.387,197,1.444,198,1.387,199,1.444,200,1.369,201,1.235,202,1.387,203,1.444,204,1.351,205,1.444,206,1.387,207,1.444,208,1.387,209,1.387,210,1.387,211,1.813,212,1.369,213,1.387,214,2.216,215,1.444,216,2.497,217,1.387,218,1.444,219,1.387,220,1.387,221,1.119,222,1.444,223,1.444,493,5.762,775,2.706,776,3.873,777,4.524,778,3.873,779,2.794,780,2.794,3657,6.621]],["title/modules/TagLayoutModule.html",[425,1.681,3658,3.96]],["body/modules/TagLayoutModule.html",[0,0.345,3,0.049,4,0.043,5,0.043,16,0.004,26,0.049,27,0.003,28,0.004,29,0.003,39,0.334,105,1.067,125,1.713,191,1.713,213,3.142,214,1.556,217,3.142,398,2.308,425,2.213,427,2.819,428,3.145,429,4.124,430,3.145,431,3.274,432,2.972,439,4.905,443,3.929,444,3.208,446,3.782,447,3.713,453,3.577,454,3.577,493,5.212,501,3.085,536,3.666,604,4.007,606,3.862,785,4.092,3636,5.99,3657,5.99,3658,8.134,3659,5.99,3660,6.665,3661,5.99,3662,6.665,3663,6.665,3664,6.665,3665,6.665,3666,6.665]],["title/classes/TagModel.html",[0,0.262,3667,3.96]],["body/classes/TagModel.html",[0,0.378,2,1.076,3,0.054,4,0.048,5,0.048,8,0.219,9,0.722,10,6.44,12,2.235,13,0.928,14,6.44,15,0.415,16,0.004,17,5.272,18,0.415,20,0.889,22,1.313,26,0.054,27,0.003,28,0.004,29,0.003,3667,6.893,3668,7.312,3669,7.312,3670,7.312,3671,7.312,3672,7.312]],["title/pipes/TagPipe.html",[1021,3.109,2740,3.96]],["body/pipes/TagPipe.html",[0,0.363,3,0.052,4,0.046,5,0.046,13,0.911,15,0.296,16,0.005,18,0.296,20,0.937,26,0.052,27,0.003,28,0.004,29,0.003,39,0.283,61,2.065,63,2.176,73,1.471,84,1.122,85,1.095,93,1.471,105,1.122,118,2.564,296,3.674,1021,5.273,1023,5.201,1026,5.48,1028,7.186,1031,6.717,1033,6.297,1304,5.108,2740,6.717,3667,7.906,3673,7.007,3674,8.588,3675,8.588,3676,7.007,3677,6.297,3678,7.007]],["title/injectables/TagService.html",[613,1.419,3679,4.212]],["body/injectables/TagService.html",[0,0.341,3,0.049,4,0.043,5,0.043,8,0.197,13,0.646,15,0.278,16,0.005,18,0.382,26,0.049,27,0.003,28,0.004,29,0.003,39,0.337,73,1.736,80,0.619,84,1.055,85,1.03,93,1.736,105,1.055,110,2.158,118,2.468,142,1.673,240,1.893,372,3.236,397,3.109,457,3.305,613,2.316,614,2.787,623,3.926,624,5.21,626,4.926,629,4.793,649,3.536,650,3.623,651,3.623,658,3.378,1030,3.109,1294,2.992,1305,3.717,1306,4.663,1307,3.926,1308,4.321,1664,8.513,3632,5.481,3667,5.153,3677,5.921,3679,6.877,3680,6.588,3681,9.472,3682,6.588,3683,6.588,3684,6.588,3685,6.588,3686,6.588,3687,6.588]],["title/injectables/TagState.html",[613,1.419,1680,3.96]],["body/injectables/TagState.html",[0,0.243,3,0.035,4,0.031,5,0.031,8,0.141,13,0.911,15,0.382,16,0.005,18,0.382,26,0.035,27,0.002,28,0.003,29,0.002,33,5.242,39,0.325,64,2.506,73,1.387,80,0.442,84,1.448,85,1.414,93,1.831,94,1.302,105,0.753,110,1.541,118,2.472,142,1.195,225,1.928,231,1.574,299,3.754,306,1.806,310,2.827,613,1.851,614,1.99,666,3.761,683,5.996,686,4.689,709,2.804,710,2.654,711,2.889,717,2.889,922,3.336,923,3.336,946,4.685,1294,2.137,1301,6.157,1304,4.2,1305,3.727,1306,3.727,1307,3.937,1308,3.086,1309,6.324,1310,5.938,1311,5.938,1312,2.982,1313,5.553,1314,6.157,1680,5.167,3289,3.68,3679,7.525,3688,4.705,3689,4.705,3690,4.705,3691,6.607,3692,6.607,3693,4.705,3694,6.607,3695,6.607,3696,4.705,3697,6.607,3698,6.607,3699,4.705,3700,6.607,3701,4.705,3702,6.607,3703,4.705,3704,4.705,3705,4.705,3706,4.705,3707,4.705,3708,4.705,3709,4.705,3710,4.705,3711,6.607,3712,4.705]],["title/interfaces/TagStateModel.html",[244,1.014,1309,3.447]],["body/interfaces/TagStateModel.html",[0,0.483,3,0.047,4,0.041,5,0.041,8,0.189,9,0.659,12,1.901,15,0.416,16,0.005,22,0.94,26,0.073,27,0.003,28,0.003,29,0.003,39,0.265,80,0.832,142,1.603,214,2.249,225,1.31,231,1.623,232,2.177,244,1.265,249,1.642,252,2.304,253,2.068,254,1.235,270,1.642,729,3.561,1010,3.31,1294,2.867,1301,4.297,1302,4.685,1304,4.871,1305,5.261,1306,4.539,1307,5.558,1308,4.14,1309,5.477,1310,6.349,1311,6.349,1312,4.001,1313,3.876,1314,4.297,1315,4.476]],["title/components/TagsComponent.html",[51,0.946,217,1.593]],["body/components/TagsComponent.html",[0,0.195,3,0.028,4,0.025,5,0.025,8,0.113,9,0.461,13,0.732,15,0.337,16,0.004,18,0.354,26,0.028,27,0.002,28,0.002,29,0.002,34,1.143,39,0.294,51,1.256,52,1.184,53,1.816,54,1.217,55,1.233,56,1.233,57,1.233,61,1.657,62,2.203,63,1.169,64,3.057,65,3.393,66,1.595,68,1.841,70,1.841,73,1.18,76,2.444,80,0.354,84,0.9,85,0.879,93,1.18,94,1.861,105,0.603,125,0.968,126,1.841,127,1.816,128,1.233,129,2.444,130,1.233,131,1.233,132,1.184,133,1.841,134,1.184,135,1.233,136,1.184,137,1.233,138,1.169,139,0.754,140,3.041,141,1.184,142,2.027,143,2.444,144,1.169,145,1.184,146,1.233,147,1.184,148,1.841,149,1.169,150,1.217,151,1.184,152,0.968,153,1.233,154,1.169,155,1.233,156,1.169,157,1.233,158,1.184,159,1.233,160,1.184,161,1.233,162,1.184,163,1.233,164,1.233,165,1.169,166,1.096,167,1.184,168,1.233,169,1.184,170,1.233,171,1.184,172,1.055,173,1.233,174,1.184,175,1.233,176,1.184,177,1.233,178,1.184,179,1.595,180,1.169,181,1.184,182,1.233,183,1.184,184,1.11,185,1.184,186,1.312,187,1.169,188,1.184,189,1.233,190,1.184,191,0.968,192,1.233,193,1.184,194,1.217,195,1.233,196,1.184,197,1.233,198,1.184,199,1.233,200,1.169,201,1.055,202,1.184,203,1.233,204,1.154,205,1.233,206,1.184,207,1.233,208,1.184,209,1.184,210,1.184,211,1.615,212,1.169,213,1.184,214,1.571,215,1.233,216,1.169,217,2.347,218,1.233,219,1.184,220,1.184,221,0.956,222,1.233,223,1.233,227,1.766,254,0.737,277,3.321,278,3.737,283,3.67,284,3.213,306,1.445,308,1.566,310,1.285,318,1.402,320,1.849,332,1.93,336,1.93,352,2.794,381,3.87,391,1.593,393,1.71,398,1.303,991,3.451,1294,1.71,1304,4.103,1305,4.209,1306,2.124,1312,2.386,1313,2.312,1637,2.794,3288,3.132,3289,2.944,3303,3.383,3304,3.132,3335,5.261,3713,3.765,3714,6.727,3715,5.621,3716,5.621,3717,3.765,3718,5.621,3719,3.765,3720,3.765,3721,3.765,3722,3.765,3723,3.765,3724,3.765]],["title/interceptors/TokenInterceptor.html",[442,3.96,1153,4.212]],["body/interceptors/TokenInterceptor.html",[0,0.346,3,0.05,4,0.044,5,0.044,8,0.2,13,0.819,15,0.353,16,0.005,18,0.353,26,0.05,27,0.003,28,0.004,29,0.003,39,0.3,61,1.974,73,1.753,80,0.629,84,1.337,85,1.305,93,1.406,105,1.072,110,2.193,118,1.999,277,3.473,284,3.835,308,2.785,324,2.882,378,4.748,391,2.833,442,6.531,457,3.359,613,2.34,1155,5.571,1158,6.947,1160,6.947,1161,7.926,1162,7.571,1163,7.926,1165,5.571,1167,6.947,3725,6.696,3726,6.696,3727,6.696,3728,6.696,3729,6.696,3730,6.696,3731,6.696,3732,6.696,3733,6.696,3734,6.696]],["title/injectables/TokenService.html",[613,1.419,3735,4.55]],["body/injectables/TokenService.html",[0,0.332,3,0.047,4,0.042,5,0.042,8,0.192,13,0.629,15,0.271,16,0.005,18,0.343,20,0.647,26,0.047,27,0.003,28,0.003,29,0.003,39,0.326,73,1.706,80,0.602,84,1.027,85,1.002,93,1.346,94,1.774,105,1.027,110,2.1,124,2.424,277,3.71,283,4.042,284,3.775,306,2.461,308,2.667,310,2.189,318,3.322,320,3.149,324,2.759,372,3.149,380,6.588,382,3.715,391,2.712,395,3.617,457,3.216,613,2.277,614,2.712,621,5.46,624,5.158,658,3.287,2526,5.334,2528,6.76,3735,7.302,3736,6.411,3737,6.411,3738,6.411,3739,6.411,3740,6.411,3741,8.125,3742,6.411]],["title/classes/UpdateCartProductQuantity.html",[0,0.262,824,2.718]],["body/classes/UpdateCartProductQuantity.html",[0,0.498,2,0.65,3,0.033,4,0.029,5,0.029,8,0.132,9,0.517,13,0.433,15,0.43,16,0.005,18,0.36,20,0.445,22,1.501,26,0.073,27,0.002,28,0.003,29,0.002,34,1.073,39,0.265,80,0.8,84,0.707,85,0.69,101,0.864,102,0.854,120,3.563,139,2.09,152,1.135,186,1.879,225,1.838,227,1.908,228,3.219,231,1.714,232,2.3,240,1.815,244,0.884,249,1.149,252,1.149,253,1.446,254,1.734,257,2.553,268,2.501,270,1.643,309,2.215,310,1.507,312,2.315,316,2.315,512,1.777,531,2.263,731,3.479,762,3.479,763,2.169,792,3.622,794,2.491,818,2.37,819,2.428,823,2.428,824,3.39,830,5.145,840,4.934,843,2.315,844,3.473,845,2.558,846,2.558,851,4.571,852,3.563,855,2.558,873,2.491,874,2.428,875,2.428,879,2.428,885,2.491,964,2.631,965,1.969,966,2.558,967,3.312,3035,3.673,3743,6.316,3744,7.374]],["title/classes/UpdateCartState.html",[0,0.262,879,2.785]],["body/classes/UpdateCartState.html",[0,0.503,2,0.68,3,0.034,4,0.03,5,0.03,8,0.138,9,0.535,13,0.453,15,0.429,16,0.005,18,0.319,20,0.466,22,1.339,26,0.074,27,0.002,28,0.003,29,0.002,34,1.109,39,0.271,80,0.814,84,0.74,85,0.722,101,0.904,102,0.894,120,3.681,139,2.112,152,1.188,186,1.766,225,1.705,227,1.781,228,2.466,231,1.728,232,2.319,240,1.875,244,0.926,249,1.202,252,1.202,253,1.514,254,1.76,257,2.618,268,1.83,270,1.697,309,2.318,310,2.227,312,2.423,316,2.423,512,1.86,531,2.369,731,3.568,762,3.568,763,2.27,792,4.417,794,2.607,818,2.48,819,2.542,823,2.542,824,2.48,830,4.266,840,2.678,843,2.423,844,3.588,845,2.678,846,2.678,851,4.651,852,3.681,855,2.678,873,2.607,874,2.542,875,2.542,879,3.588,885,2.607,964,2.754,965,2.061,966,2.678,967,3.421,3745,4.621,3746,6.524,3747,4.621]],["title/classes/UpdateOrder.html",[0,0.262,769,3.109]],["body/classes/UpdateOrder.html",[0,0.488,2,0.795,3,0.04,4,0.035,5,0.035,8,0.162,9,0.596,12,2.278,13,0.53,15,0.431,16,0.005,18,0.371,20,0.546,22,1.406,26,0.073,27,0.002,28,0.003,29,0.002,34,0.919,39,0.239,80,0.771,84,0.866,85,0.845,101,1.058,102,1.046,179,2.911,225,1.902,227,1.815,231,1.706,232,2.289,240,1.554,244,1.083,249,1.407,252,1.891,254,1.719,257,2.517,270,1.407,512,2.176,754,3.32,755,3.681,756,3.427,759,3.546,760,4.306,761,3.05,762,4.324,763,2.656,764,3.427,765,4.21,766,3.133,767,3.222,768,3.546,769,4.463,770,6.238,771,3.32,772,2.712,773,3.32,3748,7.269,3749,7.269]],["title/classes/UpdateProductDto.html",[0,0.262,3750,4.55]],["body/classes/UpdateProductDto.html",[0,0.359,2,1.021,3,0.051,4,0.045,5,0.045,8,0.208,9,0.699,11,5.358,13,0.907,15,0.418,16,0.004,18,0.418,20,0.973,22,1.502,26,0.051,27,0.003,28,0.004,29,0.003,31,5.17,268,3.663,998,6.864,1360,6.236,1361,6.236,2803,8.31,3750,7.672,3751,10.085,3752,6.939,3753,6.939,3754,6.939,3755,6.939]],["title/classes/UpdateShopProducts.html",[0,0.262,256,2.785]],["body/classes/UpdateShopProducts.html",[0,0.507,2,0.703,3,0.035,4,0.031,5,0.031,8,0.143,9,0.547,12,1.577,13,0.655,15,0.431,16,0.005,18,0.325,20,0.674,22,1.306,26,0.074,27,0.002,28,0.003,29,0.002,39,0.22,66,1.355,80,0.824,84,0.765,85,0.746,101,0.935,102,0.924,139,0.957,186,2.332,201,2.157,214,1.115,224,2.563,225,1.73,226,2.846,227,1.65,228,1.805,229,2.563,230,2.448,231,1.738,232,2.332,237,4.026,238,2.13,239,4.132,240,1.372,241,2.626,242,3.15,243,2.694,244,0.957,245,2.694,246,2.694,247,2.694,248,2.694,249,1.242,250,2.504,251,2.626,252,2.427,253,3.297,254,1.779,255,2.448,256,3.672,257,2.312,258,2.626,259,2.626,260,2.767,261,3.583,262,2.767,263,2.396,264,2.767,265,2.626,266,2.846,267,2.626,268,1.891,269,2.694,270,1.242,3756,4.775,3757,6.676,3758,4.775]],["title/classes/UpdateToken.html",[0,0.262,621,2.857]],["body/classes/UpdateToken.html",[0,0.499,2,0.797,3,0.04,4,0.035,5,0.035,8,0.162,9,0.596,13,0.531,15,0.431,16,0.005,18,0.347,20,0.953,22,1.084,26,0.073,27,0.002,28,0.003,29,0.002,34,1.605,39,0.24,80,0.509,84,0.867,85,0.847,101,1.06,102,1.048,124,2.048,139,1.085,172,2.039,221,1.375,225,1.824,227,1.441,228,2.048,231,1.729,232,2.32,240,1.556,244,1.085,254,1.848,257,2.846,394,4.003,395,4.958,577,5.393,590,4.338,591,3.326,618,3.907,621,4.106,645,4.552,652,4.412,653,3.056,654,3.433,674,3.228,675,3.228,679,3.326,730,3.553,731,3.434,732,3.326,733,3.369,734,3.433,3759,5.417,3760,7.279,3761,5.417]],["title/classes/UpdateUser.html",[0,0.262,732,3.109]],["body/classes/UpdateUser.html",[0,0.499,2,0.797,3,0.04,4,0.035,5,0.035,8,0.162,9,0.596,13,0.531,15,0.431,16,0.005,18,0.347,20,0.829,22,1.084,26,0.073,27,0.002,28,0.003,29,0.002,34,1.706,39,0.24,80,0.509,84,0.867,85,0.847,101,1.06,102,1.048,124,2.048,139,1.085,172,2.039,221,1.375,225,1.824,227,1.441,228,2.048,231,1.729,232,2.32,240,1.556,244,1.085,254,1.848,257,2.846,394,4.003,395,4.958,577,5.393,590,4.338,591,3.326,618,3.907,621,3.056,645,3.879,652,5.068,653,3.056,654,3.433,674,3.228,675,3.228,679,3.326,730,3.553,731,3.434,732,4.469,733,3.369,734,3.433,3762,5.417,3763,7.279,3764,5.417]],["title/guards/UserAuthGuard.html",[537,4.212,3765,4.55]],["body/guards/UserAuthGuard.html",[0,0.326,3,0.047,4,0.041,5,0.041,8,0.189,13,0.788,15,0.339,16,0.005,18,0.339,26,0.047,27,0.003,28,0.003,29,0.003,39,0.317,61,1.856,73,1.687,80,0.592,84,1.286,85,1.256,93,1.322,105,1.008,110,2.063,118,2.399,277,3.68,283,3.961,284,3.75,301,2.915,306,2.418,308,2.62,310,3.181,318,2.992,372,3.094,381,4.461,391,2.664,398,2.181,421,3.553,537,6.684,549,8.374,613,2.251,658,3.229,670,4.466,681,5.469,975,3.992,1480,5.66,1637,4.675,1672,5.66,1694,5.66,3766,6.298,3767,8.847,3768,6.298,3769,6.298,3770,8.034,3771,9.318,3772,9.318,3773,6.298,3774,6.298]],["title/components/UserCartComponent.html",[51,0.946,219,1.593]],["body/components/UserCartComponent.html",[0,0.122,3,0.017,4,0.015,5,0.015,8,0.071,9,0.318,13,0.794,15,0.35,16,0.005,18,0.38,20,0.392,22,0.351,26,0.017,27,0.001,28,0.002,29,0.001,34,1.375,39,0.267,51,0.926,52,0.741,53,1.256,54,0.761,55,0.772,56,0.772,57,0.772,61,1.145,62,1.625,63,0.731,64,2.949,65,3.272,66,1.633,68,1.273,70,1.273,73,0.816,76,1.885,80,0.221,84,1.097,85,1.071,93,1.522,94,2.006,101,0.76,102,1.113,104,2.386,105,0.377,110,0.772,120,3.593,125,0.605,126,1.273,127,1.256,128,0.772,129,1.885,130,0.772,131,0.772,132,0.741,133,1.273,134,0.741,135,0.772,136,0.741,137,0.772,138,0.731,139,1.757,140,2.65,141,0.741,142,1.461,143,1.885,144,0.731,145,0.741,146,0.772,147,0.741,148,1.273,149,0.731,150,0.761,151,0.741,152,0.605,153,0.772,154,0.731,155,0.772,156,0.731,157,0.772,158,0.741,159,0.772,160,0.741,161,0.772,162,0.741,163,0.772,164,0.772,165,0.731,166,0.686,167,0.741,168,0.772,169,0.741,170,0.772,171,0.741,172,0.66,173,0.772,174,0.741,175,0.772,176,0.741,177,0.772,178,0.741,179,1.103,180,0.731,181,0.741,182,0.772,183,0.741,184,0.694,185,0.741,186,1.487,187,0.731,188,0.741,189,0.772,190,0.741,191,0.605,192,0.772,193,0.741,194,0.761,195,0.772,196,0.741,197,0.772,198,0.741,199,0.772,200,0.731,201,1.784,202,0.741,203,0.772,204,1.951,205,0.772,206,0.741,207,0.772,208,0.741,209,0.741,210,0.741,211,1.117,212,0.731,213,0.741,214,0.907,215,0.772,216,0.731,217,0.741,218,0.772,219,1.811,220,0.741,221,0.598,222,0.772,223,0.772,227,1.357,231,0.676,253,1.273,257,1.993,268,2.715,273,2.117,274,4.457,275,3.492,276,2.798,277,2.649,278,3.256,280,3.492,281,3.492,283,2.759,284,2.563,285,3.492,292,2.117,294,2.117,296,2.038,297,2.117,298,2.662,299,1.014,300,2.192,301,1.798,302,2.117,304,1.235,306,0.904,308,0.98,309,1.182,310,2.587,311,1.749,312,1.235,313,1.842,316,1.235,317,1.96,319,2.117,320,2.436,321,2.117,322,2.117,323,2.117,331,2.728,332,2.543,336,2.543,337,4.126,338,2.117,340,1.604,341,3.144,342,3.43,343,3.43,344,1.493,347,3.492,348,3.039,349,3.492,350,2.117,352,5.088,353,3.492,354,1.842,355,1.842,356,1.842,357,1.842,358,3.879,359,2.117,360,3.492,361,3.233,362,1.96,363,3.492,364,1.842,365,1.749,366,1.842,367,2.117,368,2.117,369,2.117,370,2.117,391,0.996,393,1.07,421,3.593,588,3.253,666,2.614,721,1.96,787,8.182,796,7.042,800,2.117,824,2.662,875,2.728,937,2.117,938,2.117,967,2.038,991,1.446,1030,1.834,1190,2.137,1236,5.382,1237,4.272,1238,5.172,1239,3.492,1240,3.492,1241,3.492,1244,3.233,1419,5.361,1636,6.16,1637,1.749,1650,2.117,1730,3.517,1868,1.749,1890,4.788,1924,3.233,1934,3.492,2374,5.702,2568,3.233,3098,3.233,3775,9.105,3776,4.96,3777,4.96,3778,3.886,3779,2.356,3780,3.886,3781,2.356,3782,5.755,3783,2.356,3784,2.356,3785,3.886,3786,2.356,3787,3.886,3788,2.356,3789,2.356,3790,2.356,3791,2.356,3792,2.356,3793,2.356,3794,2.356,3795,2.356,3796,3.886,3797,2.356,3798,2.356,3799,2.356,3800,2.356,3801,2.356,3802,3.886,3803,3.886,3804,3.886,3805,3.886,3806,5.172,3807,3.886,3808,5.755,3809,5.755,3810,3.886,3811,5.755,3812,3.886,3813,3.886,3814,3.886,3815,3.886,3816,3.886,3817,3.886,3818,3.886,3819,3.886,3820,3.886,3821,3.886,3822,3.886,3823,3.886,3824,3.886]],["title/classes/UserModel.html",[0,0.262,652,2.718]],["body/classes/UserModel.html",[0,0.269,2,0.765,3,0.039,4,0.034,5,0.034,8,0.156,9,0.58,12,1.902,13,0.51,15,0.439,16,0.005,18,0.439,20,1.041,22,1.509,26,0.039,27,0.002,28,0.003,29,0.002,39,0.285,80,0.488,84,0.833,85,0.813,227,1.924,228,3.044,254,1.018,593,4.321,594,5.281,595,5.481,652,3.801,681,6.351,734,5.103,760,4.222,765,4.128,1263,4.665,1264,4.665,1273,4.665,1281,4.943,3622,7.235,3825,5.2,3826,8.643,3827,9.042,3828,8.051,3829,8.051,3830,9.042,3831,8.051,3832,5.2,3833,8.051,3834,7.081,3835,8.051,3836,5.2,3837,7.235,3838,5.2,3839,5.2,3840,5.2,3841,5.2,3842,5.2,3843,5.2,3844,5.2,3845,5.2,3846,5.2,3847,5.2,3848,5.2,3849,5.2,3850,5.2,3851,5.2,3852,5.2,3853,5.2,3854,5.2]],["title/components/UserProfileComponent.html",[51,0.946,220,1.593]],["body/components/UserProfileComponent.html",[0,0.114,3,0.016,4,0.014,5,0.024,8,0.066,9,0.301,13,0.751,15,0.324,16,0.005,18,0.396,20,0.371,26,0.016,27,0.001,28,0.002,29,0.001,34,1.411,39,0.288,51,0.883,52,0.693,53,1.188,54,0.712,55,0.722,56,0.722,57,0.722,61,1.084,62,1.549,63,0.684,64,2.93,65,3.251,66,1.043,67,4.099,68,1.204,70,1.204,72,4.615,73,0.772,74,3.304,76,1.809,80,0.207,81,1.562,82,3.5,84,0.757,85,0.739,86,2.33,87,3.058,89,2.905,91,3.304,93,1.548,94,2.119,101,0.926,102,1.068,103,4.158,105,0.353,106,2.257,107,1.277,108,1.277,109,1.833,110,0.722,111,1.98,112,1.397,113,1.98,114,4.32,115,1.636,116,1.98,118,1.649,125,0.566,126,1.204,127,1.188,128,0.722,129,1.809,130,0.722,131,0.722,132,0.693,133,1.204,134,0.693,135,0.722,136,0.693,137,0.722,138,0.684,139,0.441,140,2.589,141,0.693,142,1.402,143,1.809,144,0.684,145,0.693,146,0.722,147,0.693,148,1.204,149,0.684,150,0.712,151,0.693,152,0.566,153,0.722,154,0.684,155,0.722,156,0.684,157,0.722,158,0.693,159,0.722,160,0.693,161,0.722,162,0.693,163,0.722,164,0.722,165,0.684,166,0.641,167,0.693,168,0.722,169,0.693,170,0.722,171,0.693,172,0.617,173,0.722,174,0.693,175,0.722,176,0.693,177,0.722,178,0.693,179,2.355,180,0.684,181,0.693,182,0.722,183,0.693,184,0.649,185,0.693,186,0.858,187,0.684,188,0.693,189,0.722,190,0.693,191,0.566,192,0.722,193,0.693,194,0.712,195,0.722,196,0.693,197,0.722,198,0.693,199,0.722,200,0.684,201,0.617,202,0.693,203,0.722,204,1.881,205,0.722,206,0.693,207,0.722,208,0.693,209,0.693,210,0.693,211,1.056,212,0.684,213,0.693,214,0.858,215,0.722,216,0.684,217,0.693,218,0.722,219,0.693,220,1.737,221,2.007,222,0.722,223,0.722,227,1.313,231,0.961,257,1.273,261,1.973,276,2.669,277,1.968,278,3.181,283,2.832,284,2.223,296,1.928,298,3.295,299,1.582,300,2.074,301,3.413,304,1.155,306,0.846,308,0.916,310,2.264,318,2.056,320,2.713,331,1.212,332,1.885,336,1.885,340,3.22,342,3.291,343,3.291,380,4.615,381,3.138,391,0.932,393,1.001,398,0.763,402,1.636,421,3.115,588,3.622,593,2.539,666,1.67,681,2.503,740,3.355,742,3.355,759,3.622,765,2.831,803,3.56,991,1.353,1073,1.277,1080,2.191,1086,1.277,1087,2.669,1088,1.313,1089,1.313,1090,3.5,1092,1.277,1102,1.636,1131,3.058,1190,2.022,1191,3.7,1198,1.723,1209,1.445,1234,2.875,1370,4.319,1371,3.511,1385,1.98,1387,4.251,1388,3.304,1390,4.703,1395,1.98,1405,1.98,1406,1.98,1410,1.833,1412,1.723,1418,1.98,1419,4.319,1420,1.833,1424,3.304,1425,3.935,1426,1.98,1429,4.319,1430,3.304,1431,1.98,1432,3.304,1433,1.98,1434,1.98,1435,1.98,1436,1.98,1437,1.98,1438,1.98,1439,1.98,1454,8.48,1557,1.723,1558,3.7,1580,3.304,1581,3.058,1670,1.98,1724,3.304,1746,3.304,1748,1.98,1780,5.517,1879,3.935,1890,3.058,2145,3.304,2148,2.875,2687,1.98,2975,1.98,2976,1.98,2977,1.98,2978,1.98,3066,1.98,3098,3.058,3427,1.98,3855,9.436,3856,4.731,3857,4.731,3858,4.731,3859,4.731,3860,5.522,3861,5.522,3862,5.522,3863,5.522,3864,5.522,3865,3.676,3866,2.203,3867,2.203,3868,2.203,3869,2.203,3870,2.203,3871,2.203,3872,2.203,3873,2.203,3874,3.676,3875,2.203,3876,2.203,3877,2.203,3878,2.203,3879,2.203,3880,2.203,3881,2.203,3882,2.203,3883,2.203,3884,2.203,3885,2.203,3886,2.203,3887,2.203,3888,2.203,3889,3.676,3890,4.731,3891,2.203,3892,2.203,3893,2.203,3894,2.203,3895,2.203,3896,2.203,3897,2.203,3898,2.203,3899,2.203,3900,2.203,3901,2.203,3902,2.203,3903,2.203,3904,5.522,3905,2.203,3906,3.676,3907,3.676,3908,2.203,3909,2.203,3910,5.522,3911,3.676]],["title/dependencies.html",[428,2.879,3912,4.208]],["body/dependencies.html",[5,0.036,16,0.005,27,0.002,28,0.003,29,0.002,79,4.369,105,0.894,107,4.305,108,3.237,209,1.757,242,2.636,306,2.144,397,2.636,398,1.934,399,5.485,400,4.647,401,4.369,428,2.636,430,4.199,443,2.636,451,6.677,471,5.02,472,7.502,495,5.811,501,2.585,505,4.647,506,4.647,540,5.02,803,2.998,1113,5.02,1114,5.02,1149,4.369,1202,4.647,1557,4.369,1558,4.369,1582,5.02,1735,4.369,2293,5.02,2375,4.647,2398,5.02,3212,4.647,3213,5.02,3424,5.02,3425,5.02,3913,5.586,3914,8.983,3915,5.586,3916,5.586,3917,5.586,3918,5.586,3919,5.586,3920,5.586,3921,7.43,3922,5.586,3923,5.586,3924,5.586,3925,5.586,3926,5.586,3927,8.898,3928,5.586,3929,5.586,3930,5.586,3931,5.586,3932,5.586,3933,5.586,3934,5.586,3935,5.586,3936,5.586,3937,5.586,3938,5.586,3939,5.586,3940,5.586,3941,5.586,3942,5.586,3943,5.586,3944,5.586,3945,5.586,3946,5.586,3947,5.586,3948,5.586,3949,5.586,3950,5.586,3951,5.586,3952,5.586,3953,5.586,3954,5.586,3955,5.586,3956,5.586,3957,5.586,3958,5.586,3959,5.586,3960,5.586,3961,5.586,3962,5.586,3963,5.586,3964,5.586,3965,5.586,3966,5.586,3967,5.586,3968,5.586,3969,5.586,3970,5.586]],["title/miscellaneous/enumerations.html",[3971,2.984,3972,5.483]],["body/miscellaneous/enumerations.html",[8,0.167,16,0.005,27,0.002,28,0.003,29,0.002,34,1.263,35,6.181,102,2.085,172,2.082,214,1.735,242,3.506,257,1.934,394,4.086,618,3.988,967,4.377,1293,3.237,1363,5.811,1371,5.515,1420,4.647,1927,6.677,1928,6.181,1929,6.181,1930,6.677,2554,6.677,2603,6.181,3230,5.02,3292,6.677,3293,6.677,3294,5.02,3837,6.677,3971,3.961,3972,5.02,3973,5.586,3974,7.43,3975,5.586,3976,5.586,3977,5.586,3978,7.43,3979,5.586,3980,7.43,3981,5.586,3982,7.43,3983,5.586,3984,5.586,3985,5.586,3986,7.43,3987,7.43,3988,5.586,3989,5.586,3990,7.43,3991,7.43,3992,7.43,3993,5.586,3994,7.43,3995,7.43,3996,7.43,3997,7.43,3998,5.586,3999,7.43,4000,7.43,4001,5.586,4002,7.43,4003,5.586,4004,7.43,4005,5.586,4006,7.43,4007,7.43,4008,7.43]],["title/miscellaneous/functions.html",[3971,2.984,4009,5.483]],["body/miscellaneous/functions.html",[8,0.234,13,0.768,16,0.004,27,0.003,28,0.004,29,0.003,84,1.254,85,1.224,1486,7.637,3971,5.554,4009,7.038,4010,9.74,4011,7.831,4012,9.18,4013,7.831,4014,9.18,4015,7.831,4016,7.831,4017,7.831,4018,9.18,4019,7.831]],["title/index.html",[8,0.126,4020,4.208,4021,4.208]],["body/index.html",[4,0.043,13,0.648,16,0.004,27,0.003,28,0.004,29,0.003,51,1.689,65,2.105,103,3.244,444,3.178,528,5.934,1080,3.935,1149,7.072,1177,5.934,1232,5.494,1503,5.164,1563,5.494,1566,7.072,1614,5.934,1883,7.439,1947,8.126,2567,7.439,3212,8.41,3806,5.934,3914,5.934,4022,6.603,4023,8.278,4024,6.603,4025,9.043,4026,6.603,4027,6.603,4028,9.764,4029,6.603,4030,6.603,4031,6.603,4032,6.603,4033,6.603,4034,6.603,4035,6.603,4036,9.043,4037,6.603,4038,9.764,4039,6.603,4040,6.603,4041,6.603,4042,6.603,4043,6.603,4044,6.603,4045,5.934,4046,8.278,4047,9.48,4048,8.278,4049,8.278,4050,6.603,4051,9.48,4052,6.603,4053,6.603,4054,6.603]],["title/modules.html",[427,2.941]],["body/modules.html",[16,0.003,27,0.003,28,0.003,29,0.003,426,4.904,427,2.653,438,4.655,439,3.08,440,4.447,460,4.655,495,8.319,599,4.904,781,4.904,1000,4.904,1145,4.904,1317,4.655,1327,4.269,1446,4.904,1505,4.904,1552,4.655,1801,6.972,1902,8.835,2007,4.904,2175,4.655,2270,4.655,2387,4.655,2585,4.904,2693,5.217,2795,4.904,3342,4.904,3377,9.559,3530,4.904,3658,4.904,4055,10.637,4056,10.747]],["title/overview.html",[4057,6.248]],["body/overview.html",[2,0.434,16,0.005,27,0.001,28,0.002,29,0.001,52,2.503,53,0.953,125,0.758,132,2.503,134,2.503,136,1.818,138,1.794,141,1.818,144,1.794,145,1.818,147,1.818,149,1.794,151,1.818,154,1.794,156,1.794,158,2.503,160,1.818,162,2.503,165,1.794,167,1.818,169,1.818,171,1.818,174,2.503,176,1.818,178,1.818,180,1.794,181,1.818,183,1.818,185,1.818,187,1.794,188,1.818,190,1.818,191,0.758,193,2.503,196,1.818,198,1.818,200,1.794,202,2.503,206,2.503,208,2.503,210,1.818,212,1.794,213,1.818,216,1.794,217,1.818,219,1.818,220,1.818,296,1.547,425,0.98,426,8.151,427,1.248,428,1.392,429,1.34,430,1.392,431,1.449,432,1.316,433,2.651,434,2.651,435,2.651,436,2.651,437,2.651,438,4.872,439,5.119,440,6.019,441,4.518,442,4.518,443,2.199,444,1.42,460,6.953,535,2.307,599,6.798,600,2.651,602,2.651,614,1.248,729,1.664,781,6.798,782,2.651,784,2.651,1000,5.941,1001,2.651,1002,2.651,1022,6.221,1023,2.19,1097,4.806,1145,5.941,1146,2.651,1147,2.651,1317,6.452,1318,2.651,1319,2.651,1321,2.651,1327,6.307,1330,2.651,1331,2.651,1333,2.651,1446,6.798,1447,2.651,1449,2.651,1505,5.941,1506,2.651,1508,2.651,1552,5.905,1581,2.454,1592,6.221,1984,2.454,1985,2.454,2007,5.941,2008,2.651,2010,2.651,2175,5.905,2270,5.905,2387,5.905,2585,6.449,2586,2.651,2588,2.651,2736,2.651,2737,2.651,2738,2.651,2739,6.221,2740,6.221,2795,5.941,2796,2.651,2797,2.651,3200,2.651,3201,2.651,3202,2.651,3203,2.651,3342,5.941,3343,2.651,3344,2.651,3472,2.651,3473,2.651,3474,2.651,3530,5.941,3531,2.651,3533,2.651,3658,6.449,3659,2.651,3661,2.651,3765,2.651,4057,2.651,4058,2.95,4059,2.95,4060,2.95,4061,2.95]],["title/routes.html",[535,5.438]],["body/routes.html",[16,0.004,27,0.004,28,0.004,29,0.004,535,6.536]],["title/miscellaneous/variables.html",[3971,2.984,4062,5.483]],["body/miscellaneous/variables.html",[8,0.105,13,0.343,15,0.401,16,0.005,20,0.537,27,0.001,28,0.002,29,0.001,34,0.904,72,2.294,101,1.838,102,1.817,124,1.322,139,0.701,194,1.13,214,0.817,221,0.888,225,0.726,234,2.085,253,1.146,283,1.408,295,4.776,301,2.462,421,1.973,464,4.78,465,4.78,467,6.461,577,1.924,593,1.878,594,3.489,595,2.381,616,3.144,617,3.144,619,2.91,620,3.144,621,1.973,622,3.144,645,1.65,649,2.855,670,2.481,673,3.144,765,1.793,869,2.736,1010,1.834,1030,2.51,1047,2.736,1189,4.78,1203,3.948,1273,2.027,1281,2.148,1304,1.924,1606,2.736,1616,2.91,1673,2.736,1676,2.736,1678,2.736,1680,2.736,1682,2.736,1684,2.736,1938,3.144,2148,2.736,2176,3.144,2177,4.78,2179,3.144,2181,4.78,2184,3.144,2186,3.144,2188,3.144,2190,3.144,2192,3.144,2193,4.78,2195,4.78,2197,4.78,2199,3.144,2201,4.78,2202,4.78,2204,4.78,2207,3.144,2208,4.78,2210,4.78,2212,4.78,2213,4.78,2215,3.144,2217,4.78,2219,4.78,2221,4.78,2222,3.144,2224,3.144,2226,3.144,2228,3.144,2230,4.78,2232,4.78,2234,4.78,2236,3.144,2238,4.78,2240,4.78,2242,3.144,2244,4.78,2245,3.144,2247,3.144,2249,4.78,2251,3.144,2253,4.78,2254,3.144,2256,3.144,2258,4.78,2260,3.144,2263,3.144,2266,4.78,2267,4.78,2269,4.78,2271,3.144,2273,3.144,2274,3.144,2275,3.144,2280,3.144,2282,3.144,2285,3.144,2286,3.144,2287,3.144,2290,3.144,2291,3.144,2294,4.78,2295,3.144,2296,4.425,2297,3.144,2298,3.144,2299,4.425,2300,4.425,2301,3.144,2302,3.144,2303,4.425,2304,3.144,2305,3.144,2388,3.144,2401,3.144,2402,4.78,2403,3.144,2404,3.144,2405,3.144,2414,3.144,2492,2.481,2516,2.91,2710,2.91,2784,3.144,3185,3.144,3336,3.144,3971,2.481,4045,4.78,4062,3.144,4063,5.319,4064,6.435,4065,5.319,4066,5.319,4067,3.498,4068,3.498,4069,3.498,4070,3.498,4071,3.498,4072,3.498,4073,3.498,4074,5.319,4075,5.319,4076,5.319,4077,3.498,4078,3.498,4079,3.498,4080,3.498,4081,3.498,4082,3.498,4083,3.498,4084,3.498,4085,3.498,4086,3.498,4087,3.498,4088,3.498,4089,3.498,4090,3.498,4091,3.498,4092,3.498,4093,3.498,4094,3.498,4095,3.498,4096,3.498,4097,3.498,4098,3.498,4099,3.498,4100,3.498,4101,3.498,4102,3.498,4103,3.498,4104,3.498,4105,3.498,4106,3.498,4107,3.498,4108,3.498,4109,3.498,4110,3.498,4111,3.498,4112,5.319,4113,3.498,4114,3.498,4115,3.498,4116,5.319,4117,3.498,4118,3.498,4119,3.498,4120,3.498,4121,3.498,4122,3.498,4123,3.498,4124,3.498,4125,3.498,4126,3.498,4127,3.498,4128,3.498,4129,3.498,4130,3.498,4131,3.498,4132,3.498,4133,3.498,4134,3.498,4135,3.498,4136,3.498,4137,3.498,4138,3.498,4139,3.498,4140,3.498,4141,3.498,4142,3.498,4143,3.498,4144,3.498,4145,3.498,4146,3.498,4147,3.498,4148,3.498,4149,3.498,4150,3.498,4151,3.498,4152,3.498,4153,3.498,4154,3.498,4155,3.498,4156,3.498,4157,3.498,4158,3.498,4159,3.498,4160,3.498,4161,3.498,4162,3.498,4163,3.498,4164,3.498,4165,3.498,4166,3.498,4167,3.498,4168,3.498,4169,9.113,4170,5.319,4171,3.498,4172,5.319,4173,3.498,4174,3.498,4175,5.319,4176,5.319,4177,3.498,4178,5.319,4179,6.435,4180,3.498,4181,3.498,4182,5.319,4183,5.319,4184,5.319,4185,5.319,4186,5.319,4187,5.319,4188,3.498,4189,3.498,4190,3.498,4191,3.498,4192,3.498,4193,3.498,4194,3.498,4195,5.319,4196,5.319,4197,3.498,4198,3.498]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":331,"title":{},"body":{"components/AddToCartComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"injectables/GlobalDataService.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.10.2",{"_index":3970,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":3963,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3959,"title":{},"body":{"dependencies.html":{}}}],["0.8",{"_index":2466,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["000000",{"_index":2385,"title":{},"body":{"components/NavbarComponent.html":{}}}],["01",{"_index":1953,"title":{},"body":{"components/HomeComponent.html":{}}}],["0px",{"_index":2462,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["1",{"_index":296,"title":{},"body":{"components/AddToCartComponent.html":{},"pipes/CategoryPipe.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"pipes/TagPipe.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["1.0.1",{"_index":3944,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":3968,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":3965,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":3955,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":3932,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1977,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["10)).subscribe",{"_index":3322,"title":{},"body":{"components/ShopComponent.html":{}}}],["10.1.1",{"_index":3957,"title":{},"body":{"dependencies.html":{}}}],["10.1.2",{"_index":3961,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1251,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/NavbarComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["1000",{"_index":3330,"title":{},"body":{"components/ShopComponent.html":{}}}],["100px",{"_index":2447,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["100vw",{"_index":2453,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["109",{"_index":4060,"title":{},"body":{"overview.html":{}}}],["10px",{"_index":2464,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["12",{"_index":1985,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["12.0.1",{"_index":3962,"title":{},"body":{"dependencies.html":{}}}],["12.03",{"_index":3821,"title":{},"body":{"components/UserCartComponent.html":{}}}],["16",{"_index":1983,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["16.03",{"_index":3823,"title":{},"body":{"components/UserCartComponent.html":{}}}],["166",{"_index":2444,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["180px",{"_index":2469,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["18px",{"_index":3443,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["1px",{"_index":2354,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["2",{"_index":1131,"title":{},"body":{"components/ChatbotComponent.html":{},"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["2.0.8",{"_index":3950,"title":{},"body":{"dependencies.html":{}}}],["2.1.2",{"_index":3931,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":3939,"title":{},"body":{"dependencies.html":{}}}],["2.5.0",{"_index":3942,"title":{},"body":{"dependencies.html":{}}}],["2.5.2",{"_index":3930,"title":{},"body":{"dependencies.html":{}}}],["2.792.0",{"_index":3937,"title":{},"body":{"dependencies.html":{}}}],["2.9.24",{"_index":3934,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":1825,"title":{},"body":{"injectables/HelperService.html":{}}}],["200px",{"_index":2383,"title":{},"body":{"components/NavbarComponent.html":{}}}],["20px",{"_index":2478,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["234",{"_index":1954,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":4058,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1978,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["250px",{"_index":2384,"title":{},"body":{"components/NavbarComponent.html":{}}}],["26",{"_index":1984,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"overview.html":{}}}],["283048",{"_index":2358,"title":{},"body":{"components/NavbarComponent.html":{}}}],["290px",{"_index":2363,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2b5876",{"_index":1970,"title":{},"body":{"components/HomeComponent.html":{}}}],["2c3e50",{"_index":2368,"title":{},"body":{"components/NavbarComponent.html":{}}}],["3",{"_index":1580,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["3.5.1",{"_index":3952,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3927,"title":{},"body":{"dependencies.html":{}}}],["30px",{"_index":2356,"title":{},"body":{"components/NavbarComponent.html":{}}}],["31325f",{"_index":3438,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["320px",{"_index":2454,"title":{},"body":{"components/NoInternetComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["36.99",{"_index":3182,"title":{},"body":{"components/SearchComponent.html":{}}}],["4",{"_index":1581,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["4.1.1",{"_index":3936,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":3946,"title":{},"body":{"dependencies.html":{}}}],["4.5.2",{"_index":3940,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3948,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":3369,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["401].indexof(err.status",{"_index":1479,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["401].indexof(this.error.statuscode",{"_index":3365,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["403].indexof(this.error.statuscode",{"_index":3359,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["404",{"_index":3370,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["409].indexof(this.error.statuscode",{"_index":3371,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["434343",{"_index":2386,"title":{},"body":{"components/NavbarComponent.html":{}}}],["44",{"_index":4059,"title":{},"body":{"overview.html":{}}}],["4][0",{"_index":4183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e4376",{"_index":1976,"title":{},"body":{"components/HomeComponent.html":{}}}],["4px",{"_index":3340,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["5",{"_index":1234,"title":{},"body":{"components/CheckoutComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/UserProfileComponent.html":{}}}],["5.1",{"_index":1979,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["5.15.0",{"_index":3924,"title":{},"body":{"dependencies.html":{}}}],["5.6.1",{"_index":3956,"title":{},"body":{"dependencies.html":{}}}],["500].indexof(this.error.statuscode",{"_index":3374,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["52",{"_index":4061,"title":{},"body":{"overview.html":{}}}],["567",{"_index":1955,"title":{},"body":{"components/HomeComponent.html":{}}}],["5]|[0",{"_index":4182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5px",{"_index":2463,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["6",{"_index":1980,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["6.0.0",{"_index":3925,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":3966,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":1252,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["654px",{"_index":2490,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["666ee8",{"_index":3437,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["680",{"_index":2455,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["7",{"_index":1986,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["768px",{"_index":1249,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["8.5.1",{"_index":3954,"title":{},"body":{"dependencies.html":{}}}],["800px",{"_index":1967,"title":{},"body":{"components/HomeComponent.html":{}}}],["859398",{"_index":2359,"title":{},"body":{"components/NavbarComponent.html":{}}}],["89",{"_index":1956,"title":{},"body":{"components/HomeComponent.html":{}}}],["8px",{"_index":2477,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["9",{"_index":4179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&\\'*+/=?^_",{"_index":4170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":3916,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":3960,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":3958,"title":{},"body":{"dependencies.html":{}}}],["9.1.12",{"_index":3919,"title":{},"body":{"dependencies.html":{}}}],["9.1.3",{"_index":3914,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.4",{"_index":3921,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":1253,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["94126",{"_index":1951,"title":{},"body":{"components/HomeComponent.html":{}}}],["99",{"_index":1219,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["999",{"_index":1218,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["9999",{"_index":1220,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["9](?:[a",{"_index":4178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]))\\\\.){3}(?:(2(5[0",{"_index":4188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\\\.)+[a",{"_index":4180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\\\[(?:(?:(2(5[0",{"_index":4181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])|1[0",{"_index":4184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])|[a",{"_index":4189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]:(?:[\\x01",{"_index":4190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?[0",{"_index":4187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":4185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{4",{"_index":1216,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["9]{5",{"_index":1215,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["9]|[1",{"_index":4186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":2450,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["_http",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/InvoiceService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{}}}],["a.authmodule",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["a11ymodule",{"_index":2222,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["absolute",{"_index":2382,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abstractcategory",{"_index":1,"title":{"classes/AbstractCategory.html":{}},"body":{"classes/AbstractCategory.html":{},"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["abstractcategory:10",{"_index":1018,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["abstractcategory:2",{"_index":1016,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["abstractcategory:4",{"_index":1017,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["abstractcategory:6",{"_index":1015,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["abstractcategory:8",{"_index":1014,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["accept",{"_index":3824,"title":{},"body":{"components/UserCartComponent.html":{}}}],["access",{"_index":2437,"title":{},"body":{"components/NoInternetComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["accesskeyid",{"_index":1125,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["accessors",{"_index":1190,"title":{},"body":{"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["accesstoken",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["accordionmodule",{"_index":2392,"title":{},"body":{"modules/NgxModule.html":{}}}],["accordionmodule.forroot",{"_index":2403,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":2148,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["accounts",{"_index":1904,"title":{},"body":{"components/HomeComponent.html":{}}}],["action",{"_index":33,"title":{},"body":{"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"classes/Content.html":{},"injectables/HelperService.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"classes/SubscribersNotifications.html":{},"injectables/TagState.html":{}}}],["action(addtocart",{"_index":2851,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(cancelorder",{"_index":2630,"title":{},"body":{"injectables/OrderState.html":{}}}],["action(changeprofileimage",{"_index":2951,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(checkoutoncart",{"_index":888,"title":{},"body":{"injectables/CartState.html":{}}}],["action(checkoutonsingleproduct",{"_index":891,"title":{},"body":{"injectables/CartState.html":{}}}],["action(clearcartcontent",{"_index":894,"title":{},"body":{"injectables/CartState.html":{}}}],["action(clearcartfromstorage",{"_index":897,"title":{},"body":{"injectables/CartState.html":{}}}],["action(clearcategory",{"_index":1058,"title":{},"body":{"injectables/CategoryState.html":{}}}],["action(clearinvoicesfromstorage",{"_index":2034,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["action(clearordersfromstorage",{"_index":2633,"title":{},"body":{"injectables/OrderState.html":{}}}],["action(clearpaymentsfromstorage",{"_index":2715,"title":{},"body":{"injectables/PaymentState.html":{}}}],["action(clearproducts",{"_index":2854,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(clearprofiledata",{"_index":2954,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(clearsubcategory",{"_index":3593,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["action(cleartags",{"_index":3692,"title":{},"body":{"injectables/TagState.html":{}}}],["action(createusercart",{"_index":900,"title":{},"body":{"injectables/CartState.html":{}}}],["action(createuserprofile",{"_index":2957,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(deleteprofileimage",{"_index":2960,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(editprofile",{"_index":2963,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(fetchallcategories",{"_index":1061,"title":{},"body":{"injectables/CategoryState.html":{}}}],["action(fetchallsubcategories",{"_index":3596,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["action(fetchcustomproducts",{"_index":2857,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(fetchmixlatestproducts",{"_index":2860,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(fetchmostsalesproducts",{"_index":2863,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(fetchproductstags",{"_index":3695,"title":{},"body":{"injectables/TagState.html":{}}}],["action(fetchshopproducts",{"_index":2866,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(fetchsubcategoriesbytagname",{"_index":3599,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["action(fetchsubcategoriestags",{"_index":3698,"title":{},"body":{"injectables/TagState.html":{}}}],["action(fetchusercart",{"_index":903,"title":{},"body":{"injectables/CartState.html":{}}}],["action(fetchuserinvoices",{"_index":2037,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["action(fetchuserorders",{"_index":2635,"title":{},"body":{"injectables/OrderState.html":{}}}],["action(fetchuserpayments",{"_index":2718,"title":{},"body":{"injectables/PaymentState.html":{}}}],["action(fetchuserprofile",{"_index":2966,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(login",{"_index":684,"title":{},"body":{"injectables/AuthState.html":{}}}],["action(logout",{"_index":688,"title":{},"body":{"injectables/AuthState.html":{}}}],["action(pushinvoice",{"_index":2042,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["action(pushorder",{"_index":2640,"title":{},"body":{"injectables/OrderState.html":{}}}],["action(pushpayment",{"_index":2723,"title":{},"body":{"injectables/PaymentState.html":{}}}],["action(register",{"_index":691,"title":{},"body":{"injectables/AuthState.html":{}}}],["action(removecartproduct",{"_index":906,"title":{},"body":{"injectables/CartState.html":{}}}],["action(removeproductsfromcart",{"_index":909,"title":{},"body":{"injectables/CartState.html":{}}}],["action(setcustomertoken",{"_index":2726,"title":{},"body":{"injectables/PaymentState.html":{}}}],["action(setprofileimage",{"_index":2971,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action(setusercart",{"_index":694,"title":{},"body":{"injectables/AuthState.html":{}}}],["action(setuserprofile",{"_index":697,"title":{},"body":{"injectables/AuthState.html":{}}}],["action(updatecartproductquantity",{"_index":912,"title":{},"body":{"injectables/CartState.html":{}}}],["action(updatecartstate",{"_index":880,"title":{},"body":{"injectables/CartState.html":{}}}],["action(updateorder",{"_index":2643,"title":{},"body":{"injectables/OrderState.html":{}}}],["action(updateshopproducts",{"_index":2875,"title":{},"body":{"injectables/ProductState.html":{}}}],["action(updatetoken",{"_index":703,"title":{},"body":{"injectables/AuthState.html":{}}}],["action.cart",{"_index":947,"title":{},"body":{"injectables/CartState.html":{}}}],["action.cartid",{"_index":727,"title":{},"body":{"injectables/AuthState.html":{},"injectables/ProductState.html":{}}}],["action.cartproductid",{"_index":949,"title":{},"body":{"injectables/CartState.html":{}}}],["action.cartproductid).pipe",{"_index":952,"title":{},"body":{"injectables/CartState.html":{}}}],["action.createcartproductdto).pipe",{"_index":2894,"title":{},"body":{"injectables/ProductState.html":{}}}],["action.id",{"_index":2657,"title":{},"body":{"injectables/OrderState.html":{}}}],["action.newquantity).pipe",{"_index":950,"title":{},"body":{"injectables/CartState.html":{}}}],["action.payload).pipe",{"_index":962,"title":{},"body":{"injectables/CartState.html":{}}}],["action.products",{"_index":2890,"title":{},"body":{"injectables/ProductState.html":{}}}],["action.profileid",{"_index":724,"title":{},"body":{"injectables/AuthState.html":{}}}],["action.subfolder).pipe",{"_index":2987,"title":{},"body":{"injectables/ProfileState.html":{}}}],["action.token",{"_index":728,"title":{},"body":{"injectables/AuthState.html":{}}}],["action.updateorderdto).pipe",{"_index":2653,"title":{},"body":{"injectables/OrderState.html":{}}}],["actions",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/SubscribersNotifications.html":{},"injectables/TokenService.html":{}}}],["actions.ts",{"_index":730,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["actions.ts:10",{"_index":2105,"title":{},"body":{"classes/Login.html":{}}}],["actions.ts:12",{"_index":2106,"title":{},"body":{"classes/Login.html":{}}}],["actions.ts:17",{"_index":3760,"title":{},"body":{"classes/UpdateToken.html":{}}}],["actions.ts:19",{"_index":3761,"title":{},"body":{"classes/UpdateToken.html":{}}}],["actions.ts:24",{"_index":3763,"title":{},"body":{"classes/UpdateUser.html":{}}}],["actions.ts:26",{"_index":3764,"title":{},"body":{"classes/UpdateUser.html":{}}}],["actions.ts:34",{"_index":2999,"title":{},"body":{"classes/Register.html":{}}}],["actions.ts:36",{"_index":3000,"title":{},"body":{"classes/Register.html":{}}}],["actions.ts:42",{"_index":2174,"title":{},"body":{"classes/Logout.html":{}}}],["actions.ts:49",{"_index":3198,"title":{},"body":{"classes/SetUserProfile.html":{}}}],["actions.ts:51",{"_index":3199,"title":{},"body":{"classes/SetUserProfile.html":{}}}],["actions.ts:56",{"_index":3195,"title":{},"body":{"classes/SetUserCart.html":{}}}],["actions.ts:58",{"_index":3196,"title":{},"body":{"classes/SetUserCart.html":{}}}],["activatedroute",{"_index":976,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{}}}],["activatedroutesnapshot",{"_index":3771,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["activitydto",{"_index":30,"title":{"classes/ActivityDto.html":{}},"body":{"classes/ActivityDto.html":{}}}],["activityendpoints",{"_index":4105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activitymodel",{"_index":42,"title":{"classes/ActivityModel.html":{}},"body":{"classes/ActivityModel.html":{}}}],["activitytype",{"_index":35,"title":{},"body":{"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"miscellaneous/enumerations.html":{}}}],["actual_component",{"_index":223,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["add",{"_index":66,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearProducts.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProductStateModel.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["add_product_to_cart",{"_index":3995,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addcontact",{"_index":74,"title":{},"body":{"components/AddContactsComponent.html":{},"components/UserProfileComponent.html":{}}}],["addcontact(contact",{"_index":91,"title":{},"body":{"components/AddContactsComponent.html":{},"components/UserProfileComponent.html":{}}}],["addcontactscomponent",{"_index":52,"title":{"components/AddContactsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["added",{"_index":339,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["adding",{"_index":353,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["addnewproduct",{"_index":3548,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["addnewproduct(id",{"_index":3557,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["addproducttocart",{"_index":871,"title":{},"body":{"injectables/CartState.html":{}}}],["addproducttocart(ctx",{"_index":878,"title":{},"body":{"injectables/CartState.html":{}}}],["addpushsubscriber",{"_index":2525,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["addpushsubscriber(sub",{"_index":2529,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["address",{"_index":112,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"classes/Contact.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderModel.html":{},"components/UserProfileComponent.html":{}}}],["address.ts",{"_index":737,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:10",{"_index":748,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:2",{"_index":751,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:3",{"_index":749,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:4",{"_index":747,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:5",{"_index":745,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:6",{"_index":746,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:7",{"_index":753,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:8",{"_index":752,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address.ts:9",{"_index":750,"title":{},"body":{"classes/BillingAddress.html":{}}}],["address1",{"_index":738,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{}}}],["address2",{"_index":739,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{}}}],["addtagstosubcategory",{"_index":3549,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["addtagstosubcategory(id",{"_index":3559,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["addtocart",{"_index":224,"title":{"classes/AddToCart.html":{}},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["addtocart(ctx",{"_index":2850,"title":{},"body":{"injectables/ProductState.html":{}}}],["addtocart(productid",{"_index":2827,"title":{},"body":{"injectables/ProductService.html":{}}}],["addtocart(this.product.id",{"_index":333,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["addtocartcomponent",{"_index":132,"title":{"components/AddToCartComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["adipisicing",{"_index":1576,"title":{},"body":{"components/FooterComponent.html":{}}}],["adjustdata",{"_index":1720,"title":{},"body":{"injectables/HelperService.html":{}}}],["adminemail",{"_index":3833,"title":{},"body":{"classes/UserModel.html":{}}}],["adminid",{"_index":3826,"title":{},"body":{"classes/UserModel.html":{}}}],["adminusername",{"_index":3827,"title":{},"body":{"classes/UserModel.html":{}}}],["aftercheckoutcomplete",{"_index":872,"title":{},"body":{"injectables/CartState.html":{}}}],["aftercheckoutcomplete(result",{"_index":882,"title":{},"body":{"injectables/CartState.html":{}}}],["aftercreateuserprofile",{"_index":3860,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["again",{"_index":2439,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["ai",{"_index":1150,"title":{},"body":{"modules/ChatbotModule.html":{}}}],["akiajm6t2lpvyfhhy3vq",{"_index":1126,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["algeria",{"_index":4167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["align",{"_index":2486,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["already",{"_index":3029,"title":{},"body":{"components/RegisterComponent.html":{}}}],["amet",{"_index":1574,"title":{},"body":{"components/FooterComponent.html":{}}}],["amount",{"_index":1237,"title":{},"body":{"components/CheckoutComponent.html":{},"classes/CreatePaymentDto.html":{},"classes/PaymentModel.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["angular",{"_index":1149,"title":{},"body":{"modules/ChatbotModule.html":{},"modules/MdbModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3913,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3915,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/a11y",{"_index":2223,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/accordion",{"_index":2246,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/bidi",{"_index":2248,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/drag",{"_index":2261,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/layout",{"_index":2336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular/cdk/observers",{"_index":2237,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/overlay",{"_index":2200,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/platform",{"_index":2243,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/portal",{"_index":2225,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/scrolling",{"_index":2191,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/stepper",{"_index":2216,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/table",{"_index":2227,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/cdk/tree",{"_index":2229,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"interceptors/CheckConnectionInterceptor.html":{},"injectables/ContactService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{}}}],["angular/compiler",{"_index":3917,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":105,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"injectables/ContactService.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":108,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":3918,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":3920,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2209,"title":{},"body":{"modules/MaterialModule.html":{},"components/SearchBarComponent.html":{}}}],["angular/material/badge",{"_index":2259,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/bottom",{"_index":2264,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/button",{"_index":2182,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":2214,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/checkbox",{"_index":2211,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/chips",{"_index":2252,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/core",{"_index":2255,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/datepicker",{"_index":2198,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/dialog",{"_index":1776,"title":{},"body":{"injectables/HelperService.html":{},"modules/MaterialModule.html":{}}}],["angular/material/divider",{"_index":2268,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/expansion",{"_index":2196,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/form",{"_index":2180,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/grid",{"_index":2205,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":2233,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/input",{"_index":2194,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":2235,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/menu",{"_index":2203,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/paginator",{"_index":2074,"title":{},"body":{"components/InvoicesComponent.html":{},"modules/MaterialModule.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{}}}],["angular/material/progress",{"_index":2187,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/radio",{"_index":2250,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/select",{"_index":2231,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":2239,"title":{},"body":{"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/material/slide",{"_index":2189,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/slider",{"_index":2257,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":1778,"title":{},"body":{"injectables/HelperService.html":{},"modules/MaterialModule.html":{}}}],["angular/material/sort",{"_index":2073,"title":{},"body":{"components/InvoicesComponent.html":{},"modules/MaterialModule.html":{},"components/OrdersComponent.html":{}}}],["angular/material/stepper",{"_index":2241,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/table",{"_index":1781,"title":{},"body":{"injectables/HelperService.html":{},"modules/MaterialModule.html":{}}}],["angular/material/tabs",{"_index":2218,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/toolbar",{"_index":2178,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tooltip",{"_index":2220,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/tree",{"_index":2185,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"components/CategoryDetailsComponent.html":{},"modules/CategoryLayoutModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"modules/DashboardModule.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ErrorModule.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"modules/InvoiceLayoutModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"modules/OrderLayoutModule.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"modules/ProductLayoutModule.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/ShopLayoutModule.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"components/TagItemsComponent.html":{},"modules/TagLayoutModule.html":{},"components/TagsComponent.html":{},"guards/UserAuthGuard.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["animate.css",{"_index":3935,"title":{},"body":{"dependencies.html":{}}}],["anton",{"_index":2377,"title":{},"body":{"components/NavbarComponent.html":{}}}],["anytime",{"_index":1891,"title":{},"body":{"components/HomeComponent.html":{}}}],["anywhere",{"_index":1892,"title":{},"body":{"components/HomeComponent.html":{}}}],["api.herokuapp.com",{"_index":4155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiendpoints",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["apiendpoints.authendpoints.forgotpassword}/${email",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiendpoints.authendpoints.sendemailverification}/${email",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiendpoints.authendpoints.verifyemail}/${token",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiendpoints.cartendpoints.rootcart}/checkout",{"_index":854,"title":{},"body":{"injectables/CartService.html":{}}}],["apiendpoints.cartendpoints.rootcart}/remove",{"_index":867,"title":{},"body":{"injectables/CartService.html":{}}}],["apiendpoints.categoryendpoints.rootcategories}/match",{"_index":1045,"title":{},"body":{"injectables/CategoryService.html":{}}}],["apiendpoints.paymentendpoints.rootpayments}/customer/set",{"_index":2708,"title":{},"body":{"injectables/PaymentService.html":{}}}],["apiendpoints.productendpoints.rootproducts}/${productid}/add",{"_index":2844,"title":{},"body":{"injectables/ProductService.html":{}}}],["apiendpoints.productendpoints.rootproducts}/match",{"_index":2841,"title":{},"body":{"injectables/ProductService.html":{}}}],["apiendpoints.profileendpoints.rootprofile}/create",{"_index":2936,"title":{},"body":{"injectables/ProfileService.html":{}}}],["apiendpoints.profileendpoints.rootprofile}/user",{"_index":2938,"title":{},"body":{"injectables/ProfileService.html":{}}}],["apiendpoints.subcategoryendpoints.rootsubcategories",{"_index":3574,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["apiendpoints.subcategoryendpoints.rootsubcategories}/match",{"_index":3579,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["apiendpoints.vapidkeys.publickey",{"_index":1871,"title":{},"body":{"components/HomeComponent.html":{}}}],["app",{"_index":65,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["app.component",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":134,"title":{"components/AppComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["appearance",{"_index":363,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["append",{"_index":2047,"title":{},"body":{"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{}}}],["append([action.invoice",{"_index":2051,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["append([action.order",{"_index":2659,"title":{},"body":{"injectables/OrderState.html":{}}}],["append([action.payment",{"_index":2731,"title":{},"body":{"injectables/PaymentState.html":{}}}],["appmodule",{"_index":426,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":521,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{}}}],["approutingmodule",{"_index":438,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":1597,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["array.filter(item",{"_index":1598,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["arrow",{"_index":2343,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifacts",{"_index":4039,"title":{},"body":{"index.html":{}}}],["associated",{"_index":3654,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["asyncpipe",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["auth",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Key.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":137,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["auth.component.css",{"_index":582,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":583,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.guard",{"_index":539,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth.guard.ts",{"_index":3768,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["auth.guard.ts:11",{"_index":3769,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":3773,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["auth.service",{"_index":3739,"title":{},"body":{"injectables/TokenService.html":{}}}],["auth/auth",{"_index":921,"title":{},"body":{"injectables/CartState.html":{},"injectables/PaymentState.html":{},"injectables/ProfileState.html":{}}}],["auth/auth.state",{"_index":934,"title":{},"body":{"injectables/CartState.html":{}}}],["authcomponent",{"_index":136,"title":{"components/AuthComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["authcredentialsdto",{"_index":590,"title":{"classes/AuthCredentialsDto.html":{}},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["authendpoints",{"_index":4078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authlayoutroutes",{"_index":605,"title":{},"body":{"modules/AuthModule.html":{}}}],["authmodule",{"_index":599,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":3731,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["authorized",{"_index":3368,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["authservice",{"_index":380,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TokenService.html":{},"components/UserProfileComponent.html":{}}}],["authstate",{"_index":670,"title":{"injectables/AuthState.html":{}},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/GlobalDataService.html":{},"guards/UserAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["authstatemodel",{"_index":679,"title":{"interfaces/AuthStateModel.html":{}},"body":{"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["auto",{"_index":1961,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["automatically",{"_index":4033,"title":{},"body":{"index.html":{}}}],["availability",{"_index":1908,"title":{},"body":{"components/HomeComponent.html":{},"components/ShopComponent.html":{}}}],["available",{"_index":1801,"title":{},"body":{"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"modules.html":{}}}],["awesome",{"_index":3947,"title":{},"body":{"dependencies.html":{}}}],["aws",{"_index":1113,"title":{},"body":{"components/ChatbotComponent.html":{},"dependencies.html":{}}}],["b4ysqxbingctidyr3yvekflrfrfiljjacxuncvlerufwj2pvhsn0o7un8",{"_index":4151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b52ab4",{"_index":2471,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["back",{"_index":589,"title":{},"body":{"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/OrderDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["background",{"_index":1969,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["backtotop",{"_index":2749,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["badgemodule",{"_index":2273,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":1779,"title":{},"body":{"injectables/HelperService.html":{},"modules/MaterialModule.html":{},"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{}}}],["bar'},{'name",{"_index":195,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["bar.component",{"_index":1326,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["bar.component.css",{"_index":3079,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.html",{"_index":3080,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts",{"_index":3078,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3104,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3109,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:23",{"_index":3108,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:24",{"_index":3092,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:25",{"_index":3090,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3107,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:32",{"_index":3103,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:34",{"_index":3093,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3094,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:37",{"_index":3095,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:53",{"_index":3101,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:64",{"_index":3100,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar.component.ts:71",{"_index":3097,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["bar/search",{"_index":1325,"title":{},"body":{"modules/CommonLayoutModule.html":{},"components/SearchBarComponent.html":{}}}],["base",{"_index":3435,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["baseurl",{"_index":2411,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["basic",{"_index":2551,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["bcryptjs",{"_index":3938,"title":{},"body":{"dependencies.html":{}}}],["bdc3c7",{"_index":2367,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bearer",{"_index":3732,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["best",{"_index":1895,"title":{},"body":{"components/HomeComponent.html":{}}}],["bidimodule",{"_index":2247,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["billing",{"_index":1228,"title":{},"body":{"components/CheckoutComponent.html":{},"components/OrderDetailsComponent.html":{}}}],["billingaddress",{"_index":735,"title":{"classes/BillingAddress.html":{}},"body":{"classes/BillingAddress.html":{},"classes/OrderDto.html":{},"classes/OrderModel.html":{},"components/StripeCheckoutComponent.html":{}}}],["billingform",{"_index":1188,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["bkmes0rabk4yri7tig3faq",{"_index":4149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":868,"title":{},"body":{"injectables/CartService.html":{},"components/HomeComponent.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayloadDto.html":{},"injectables/SubCategoryService.html":{},"classes/SubscribersNotifications.html":{}}}],["booking",{"_index":3818,"title":{},"body":{"components/UserCartComponent.html":{}}}],["boolean",{"_index":681,"title":{},"body":{"injectables/AuthState.html":{},"injectables/HelperService.html":{},"classes/ProductModel.html":{},"components/SearchComponent.html":{},"guards/UserAuthGuard.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["bootstrap",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MdbModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":2393,"title":{},"body":{"modules/NgxModule.html":{}}}],["bootstrap/carousel",{"_index":2389,"title":{},"body":{"modules/NgxModule.html":{}}}],["bootstrap/dropdown",{"_index":2400,"title":{},"body":{"modules/NgxModule.html":{}}}],["bootstrap/modal",{"_index":1777,"title":{},"body":{"injectables/HelperService.html":{},"components/InvalidCredentialsComponent.html":{},"modules/NgxModule.html":{}}}],["bootstrap/ng",{"_index":3213,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["bootstrap/pagination",{"_index":2395,"title":{},"body":{"modules/NgxModule.html":{}}}],["bootstrap/popover",{"_index":2391,"title":{},"body":{"modules/NgxModule.html":{}}}],["bootstrap/tooltip",{"_index":2390,"title":{},"body":{"modules/NgxModule.html":{}}}],["border",{"_index":2352,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["bot",{"_index":1144,"title":{},"body":{"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{}}}],["botalias",{"_index":1119,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["botname",{"_index":1120,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["bottom",{"_index":2366,"title":{},"body":{"components/NavbarComponent.html":{}}}],["box",{"_index":1118,"title":{},"body":{"components/ChatbotComponent.html":{},"components/NoInternetComponent.html":{}}}],["breadcrumbmodule",{"_index":2274,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":3171,"title":{},"body":{"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["breakpointobserver",{"_index":2319,"title":{},"body":{"components/NavbarComponent.html":{}}}],["breakpoints",{"_index":2335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["browse",{"_index":4056,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":529,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1973,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["bsdropdownmodule",{"_index":2399,"title":{},"body":{"modules/NgxModule.html":{}}}],["bsdropdownmodule.forroot",{"_index":2405,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["bsmodalref",{"_index":1767,"title":{},"body":{"injectables/HelperService.html":{},"components/InvalidCredentialsComponent.html":{}}}],["bsmodalservice",{"_index":1734,"title":{},"body":{"injectables/HelperService.html":{}}}],["btn",{"_index":2470,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["build",{"_index":4038,"title":{},"body":{"index.html":{}}}],["button",{"_index":361,"title":{},"body":{"components/AddToCartComponent.html":{},"components/ShopComponent.html":{},"components/UserCartComponent.html":{}}}],["button:focus",{"_index":2456,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["buttonsmodule",{"_index":2277,"title":{},"body":{"modules/MdbModule.html":{}}}],["buttonsmodule.forroot",{"_index":2297,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["buy",{"_index":1889,"title":{},"body":{"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["c.cartlayoutmodule",{"_index":561,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["c.categorylayoutmodule",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["c.commonlayoutmodule",{"_index":566,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["c.id",{"_index":988,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"injectables/GlobalDataService.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["ca",{"_index":1950,"title":{},"body":{"components/HomeComponent.html":{}}}],["calc(20px",{"_index":2452,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["calc(475px",{"_index":2461,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["canactivate",{"_index":549,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/UserAuthGuard.html":{}}}],["canactivate(route",{"_index":3770,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["cancel",{"_index":759,"title":{},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{},"components/UserProfileComponent.html":{}}}],["cancelorder",{"_index":754,"title":{"classes/CancelOrder.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["cancelorder(ctx",{"_index":2629,"title":{},"body":{"injectables/OrderState.html":{}}}],["cancelorder(id",{"_index":2615,"title":{},"body":{"injectables/OrderService.html":{}}}],["card",{"_index":2459,"title":{},"body":{"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["cardsmodule",{"_index":2283,"title":{},"body":{"modules/MdbModule.html":{}}}],["cardsmodule.forroot",{"_index":2301,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["carouselmodule",{"_index":2288,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{}}}],["carouselmodule.forroot",{"_index":2303,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["cart",{"_index":139,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthStateModel.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProducts.html":{},"components/CommonLayoutComponent.html":{},"classes/CreateCartProductDto.html":{},"classes/CreateUserCart.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProductStateModel.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["cart'},{'name",{"_index":133,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["cart(state",{"_index":884,"title":{},"body":{"injectables/CartState.html":{}}}],["cart.actions",{"_index":914,"title":{},"body":{"injectables/CartState.html":{}}}],["cart.component",{"_index":788,"title":{},"body":{"modules/CartLayoutModule.html":{},"modules/SharedModule.html":{}}}],["cart.component.css",{"_index":274,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.html",{"_index":275,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts",{"_index":273,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:106",{"_index":3784,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:18",{"_index":3791,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:19",{"_index":286,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cart.component.ts:20",{"_index":297,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:21",{"_index":3794,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:22",{"_index":3793,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:23",{"_index":285,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:25",{"_index":303,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cart.component.ts:26",{"_index":3792,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:27",{"_index":302,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:30",{"_index":292,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:34",{"_index":3779,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:43",{"_index":290,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cart.component.ts:55",{"_index":293,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cart.component.ts:56",{"_index":3788,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:64",{"_index":294,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["cart.component.ts:69",{"_index":3790,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:72",{"_index":287,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cart.component.ts:82",{"_index":3786,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.component.ts:97",{"_index":3781,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart.model",{"_index":815,"title":{},"body":{"classes/CartProductModel.html":{}}}],["cart.totalitems",{"_index":3807,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cart/${cartid",{"_index":2845,"title":{},"body":{"injectables/ProductService.html":{}}}],["cart/${cartproductid",{"_index":864,"title":{},"body":{"injectables/CartService.html":{}}}],["cart/add",{"_index":272,"title":{},"body":{"components/AddToCartComponent.html":{},"modules/SharedModule.html":{}}}],["cart/cart.actions",{"_index":2884,"title":{},"body":{"injectables/ProductState.html":{}}}],["cart/user",{"_index":787,"title":{},"body":{"modules/CartLayoutModule.html":{},"components/UserCartComponent.html":{}}}],["cartactions",{"_index":309,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"injectables/ProductState.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["cartactions.checkoutoncart",{"_index":918,"title":{},"body":{"injectables/CartState.html":{},"components/StripeCheckoutComponent.html":{}}}],["cartactions.checkoutonsingleproduct",{"_index":919,"title":{},"body":{"injectables/CartState.html":{}}}],["cartactions.clearcartcontent",{"_index":917,"title":{},"body":{"injectables/CartState.html":{}}}],["cartactions.clearcartfromstorage",{"_index":916,"title":{},"body":{"injectables/CartState.html":{},"injectables/GlobalDataService.html":{}}}],["cartactions.createusercart",{"_index":317,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/CartState.html":{},"components/UserCartComponent.html":{}}}],["cartactions.fetchusercart",{"_index":313,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/CartState.html":{},"components/LoginComponent.html":{},"components/UserCartComponent.html":{}}}],["cartactions.removecartproduct",{"_index":938,"title":{},"body":{"injectables/CartState.html":{},"components/UserCartComponent.html":{}}}],["cartactions.removeproductsfromcart",{"_index":920,"title":{},"body":{"injectables/CartState.html":{}}}],["cartactions.updatecartproductquantity",{"_index":937,"title":{},"body":{"injectables/CartState.html":{},"components/UserCartComponent.html":{}}}],["cartactions.updatecartstate",{"_index":939,"title":{},"body":{"injectables/CartState.html":{},"injectables/ProductState.html":{}}}],["cartendpoints",{"_index":4132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cartid",{"_index":228,"title":{},"body":{"classes/AddToCart.html":{},"interfaces/AuthStateModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProducts.html":{},"classes/CreateUserCart.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"classes/Login.html":{},"classes/Logout.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{}}}],["cartlayoutcomponent",{"_index":138,"title":{"components/CartLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["cartlayoutmodule",{"_index":781,"title":{"modules/CartLayoutModule.html":{}},"body":{"modules/CartLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["cartlayoutroutes",{"_index":789,"title":{},"body":{"modules/CartLayoutModule.html":{}}}],["cartmodel",{"_index":792,"title":{"classes/CartModel.html":{}},"body":{"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["cartproduct",{"_index":3782,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cartproduct.id)).subscribe",{"_index":3799,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cartproduct.quantity",{"_index":3801,"title":{},"body":{"components/UserCartComponent.html":{}}}],["cartproductid",{"_index":830,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["cartproductmodel",{"_index":796,"title":{"classes/CartProductModel.html":{}},"body":{"classes/CartModel.html":{},"classes/CartProductModel.html":{},"components/UserCartComponent.html":{}}}],["cartproducts",{"_index":794,"title":{},"body":{"classes/CartModel.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["carts",{"_index":1613,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["cartservice",{"_index":816,"title":{"injectables/CartService.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"components/StripeCheckoutComponent.html":{}}}],["cartstate",{"_index":869,"title":{"injectables/CartState.html":{}},"body":{"injectables/CartState.html":{},"injectables/GlobalDataService.html":{},"miscellaneous/variables.html":{}}}],["cartstatemodel",{"_index":885,"title":{"interfaces/CartStateModel.html":{}},"body":{"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["case",{"_index":2131,"title":{},"body":{"components/LoginComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["cash_on_delivery",{"_index":4004,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch(err",{"_index":1880,"title":{},"body":{"components/HomeComponent.html":{}}}],["catcherror",{"_index":1476,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":1478,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["categories",{"_index":1030,"title":{},"body":{"pipes/CategoryPipe.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/ClearSubCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"interfaces/SubCategoryStateModel.html":{},"injectables/TagService.html":{},"components/UserCartComponent.html":{},"miscellaneous/variables.html":{}}}],["categories(state",{"_index":1053,"title":{},"body":{"injectables/CategoryState.html":{}}}],["categories.filter(category",{"_index":1032,"title":{},"body":{"pipes/CategoryPipe.html":{}}}],["categories/${category.id",{"_index":1702,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/SidebarComponent.html":{}}}],["categories/${subcategory.categoryid",{"_index":3652,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["categoriesarray",{"_index":3134,"title":{},"body":{"components/SearchComponent.html":{}}}],["categoriesfilter",{"_index":1025,"title":{},"body":{"pipes/CategoryPipe.html":{}}}],["category",{"_index":142,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"interfaces/CategoryStateModel.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"classes/SubCategoryTagModel.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["category.actions",{"_index":1064,"title":{},"body":{"injectables/CategoryState.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{}}}],["category.actions.ts",{"_index":1291,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["category.actions.ts:16",{"_index":1543,"title":{},"body":{"classes/FetchSubCategoryById.html":{}}}],["category.actions.ts:18",{"_index":1544,"title":{},"body":{"classes/FetchSubCategoryById.html":{}}}],["category.actions.ts:24",{"_index":1540,"title":{},"body":{"classes/FetchSubCategoriesByTagName.html":{}}}],["category.actions.ts:26",{"_index":1541,"title":{},"body":{"classes/FetchSubCategoriesByTagName.html":{}}}],["category.actions.ts:32",{"_index":1292,"title":{},"body":{"classes/ClearSubCategory.html":{}}}],["category.actions.ts:9",{"_index":1516,"title":{},"body":{"classes/FetchAllSubCategories.html":{}}}],["category.id",{"_index":3173,"title":{},"body":{"components/SearchComponent.html":{}}}],["category.model",{"_index":1020,"title":{},"body":{"classes/CategoryModel.html":{},"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{}}}],["category.model.ts",{"_index":3538,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["category.model.ts:10",{"_index":3540,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["category.model.ts:12",{"_index":3542,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["category.model.ts:6",{"_index":3541,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["category.model.ts:8",{"_index":3543,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["category.name",{"_index":1705,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{}}}],["category.name.tolowercase().indexof(searchterm.tolowercase",{"_index":1033,"title":{},"body":{"pipes/CategoryPipe.html":{},"pipes/TagPipe.html":{}}}],["category.pipe",{"_index":2742,"title":{},"body":{"modules/PipesModule.html":{}}}],["category.service",{"_index":2883,"title":{},"body":{"injectables/ProductState.html":{},"components/SearchBarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{}}}],["category.service.ts",{"_index":3546,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:14",{"_index":3556,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:19",{"_index":3563,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:25",{"_index":3565,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:29",{"_index":3570,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:34",{"_index":3567,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:38",{"_index":3558,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:44",{"_index":3560,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:48",{"_index":3569,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:56",{"_index":3573,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.service.ts:60",{"_index":3562,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["category.state",{"_index":1677,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["category.state.ts",{"_index":3588,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.state.ts:22",{"_index":3591,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.state.ts:28",{"_index":3602,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.state.ts:34",{"_index":3600,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.state.ts:48",{"_index":3597,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.state.ts:60",{"_index":3594,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["category.subcategories.find(s",{"_index":3508,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["category.ts",{"_index":7,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category.ts:10",{"_index":25,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category.ts:2",{"_index":23,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category.ts:4",{"_index":24,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category.ts:6",{"_index":21,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category.ts:8",{"_index":19,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["category/sub",{"_index":1290,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["categoryactions",{"_index":1063,"title":{},"body":{"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{},"components/SidebarComponent.html":{}}}],["categoryactions.clearcategory",{"_index":1067,"title":{},"body":{"injectables/CategoryState.html":{}}}],["categoryactions.fetchallcategories",{"_index":1066,"title":{},"body":{"injectables/CategoryState.html":{},"components/SidebarComponent.html":{}}}],["categorydetailscomponent",{"_index":141,"title":{"components/CategoryDetailsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["categorydto",{"_index":993,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/SubCategoryDto.html":{}}}],["categoryendpoints",{"_index":4117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categoryid",{"_index":3506,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryModel.html":{}}}],["categorylayoutcomponent",{"_index":144,"title":{"components/CategoryLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["categorylayoutmodule",{"_index":1000,"title":{"modules/CategoryLayoutModule.html":{}},"body":{"modules/CategoryLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["categorylayoutroutes",{"_index":1004,"title":{},"body":{"modules/CategoryLayoutModule.html":{}}}],["categorymodel",{"_index":979,"title":{"classes/CategoryModel.html":{}},"body":{"components/CategoryDetailsComponent.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{}}}],["categorypipe",{"_index":1022,"title":{"pipes/CategoryPipe.html":{}},"body":{"pipes/CategoryPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["categoryservice",{"_index":1034,"title":{"injectables/CategoryService.html":{}},"body":{"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"components/SearchBarComponent.html":{},"injectables/SubCategoryState.html":{}}}],["categorystate",{"_index":1047,"title":{"injectables/CategoryState.html":{}},"body":{"injectables/CategoryState.html":{},"injectables/GlobalDataService.html":{},"miscellaneous/variables.html":{}}}],["categorystatemodel",{"_index":1054,"title":{"interfaces/CategoryStateModel.html":{}},"body":{"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{}}}],["cdkaccordionmodule",{"_index":2245,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["cdksteppermodule",{"_index":2215,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["cdktablemodule",{"_index":2226,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["cdktreemodule",{"_index":2228,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["center",{"_index":1962,"title":{},"body":{"components/HomeComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["cfd7e0",{"_index":3445,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["cfdef3",{"_index":2362,"title":{},"body":{"components/NavbarComponent.html":{}}}],["change",{"_index":1080,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["changed",{"_index":3066,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["changeprofileimage",{"_index":1073,"title":{"classes/ChangeProfileImage.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["changeprofileimage(ctx",{"_index":2950,"title":{},"body":{"injectables/ProfileState.html":{}}}],["changeprofileimage(imageform",{"_index":2924,"title":{},"body":{"injectables/ProfileService.html":{}}}],["changeprofileimage(this.helperservice.imageformdata",{"_index":3905,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["changes",{"_index":1906,"title":{},"body":{"components/HomeComponent.html":{}}}],["characters",{"_index":1502,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["chart.js",{"_index":3941,"title":{},"body":{"dependencies.html":{}}}],["chartsmodule",{"_index":2290,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["chat",{"_index":1151,"title":{},"body":{"modules/ChatbotModule.html":{}}}],["chatbot",{"_index":1097,"title":{},"body":{"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"overview.html":{}}}],["chatbot'},{'name",{"_index":146,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["chatbot.component",{"_index":1152,"title":{},"body":{"modules/ChatbotModule.html":{}}}],["chatbot.component.css",{"_index":1098,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["chatbot.component.html",{"_index":1099,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["chatbotcomponent",{"_index":145,"title":{"components/ChatbotComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["chatbotmodule",{"_index":1145,"title":{"modules/ChatbotModule.html":{}},"body":{"modules/ChatbotModule.html":{},"modules.html":{},"overview.html":{}}}],["check",{"_index":1177,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"index.html":{}}}],["checkboxmodule",{"_index":2286,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["checkconnectioninterceptor",{"_index":1154,"title":{"interceptors/CheckConnectionInterceptor.html":{}},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["checkonlinestatus",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["checkout",{"_index":967,"title":{},"body":{"interfaces/CartStateModel.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"components/LoginComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{},"miscellaneous/enumerations.html":{}}}],["checkout'},{'name",{"_index":148,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["checkout.component",{"_index":3478,"title":{},"body":{"modules/StripeIntegrationModule.html":{}}}],["checkout.component.css",{"_index":1186,"title":{},"body":{"components/CheckoutComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["checkout.component.html",{"_index":1187,"title":{},"body":{"components/CheckoutComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts",{"_index":3398,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:153",{"_index":3407,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:24",{"_index":3405,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:25",{"_index":3418,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:26",{"_index":3412,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:27",{"_index":3409,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:28",{"_index":3420,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:29",{"_index":3416,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:32",{"_index":3410,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:33",{"_index":3417,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:37",{"_index":3404,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:39",{"_index":3419,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:48",{"_index":3408,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:85",{"_index":3422,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout.component.ts:91",{"_index":3406,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["checkout/stripe",{"_index":3397,"title":{},"body":{"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{}}}],["checkout_on_single_product",{"_index":3993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["checkoutcomponent",{"_index":147,"title":{"components/CheckoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["checkoutoncart",{"_index":818,"title":{"classes/CheckoutOnCart.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["checkoutoncart(ctx",{"_index":887,"title":{},"body":{"injectables/CartState.html":{}}}],["checkoutoncart(payload",{"_index":826,"title":{},"body":{"injectables/CartService.html":{}}}],["checkoutonsingleproduct",{"_index":819,"title":{"classes/CheckoutOnSingleProduct.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["checkoutonsingleproduct(cartproductid",{"_index":828,"title":{},"body":{"injectables/CartService.html":{}}}],["checkoutonsingleproduct(ctx",{"_index":890,"title":{},"body":{"injectables/CartState.html":{}}}],["checkoutreturndata",{"_index":847,"title":{"interfaces/CheckoutReturnData.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CheckoutReturnData.html":{}}}],["checkusername",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["checkusername(username",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkvalue",{"_index":279,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["checkvalue(quantityvalue",{"_index":288,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["children",{"_index":545,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["chrome",{"_index":354,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["circle",{"_index":2484,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["city",{"_index":740,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{},"classes/CreateProfileDto.html":{},"components/CreateUserProfileComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{}}}],["cktmb8jrmjbubsmv9fquy",{"_index":4154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claims",{"_index":3828,"title":{},"body":{"classes/UserModel.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"classes/AddToCart.html":{},"classes/AppPage.html":{},"classes/AuthCredentialsDto.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"classes/InsertTagDto.html":{},"classes/InvoiceModel.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"classes/PaymentModel.html":{},"classes/ProductModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/ResetPasswordDto.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"classes/TagModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{}},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["class=\"fas",{"_index":2341,"title":{},"body":{"components/NavbarComponent.html":{}}}],["class=\"waves",{"_index":3814,"title":{},"body":{"components/UserCartComponent.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"classes/AddToCart.html":{},"classes/AppPage.html":{},"classes/AuthCredentialsDto.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"classes/InsertTagDto.html":{},"classes/InvoiceModel.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"classes/PaymentModel.html":{},"classes/ProductModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/ResetPasswordDto.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"classes/TagModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{},"overview.html":{}}}],["classes/billing",{"_index":2573,"title":{},"body":{"classes/OrderDto.html":{}}}],["classes/contact",{"_index":1378,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["classes/key",{"_index":3618,"title":{},"body":{"classes/Subscriber.html":{}}}],["classes/notification",{"_index":3631,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["clear",{"_index":270,"title":{},"body":{"classes/AddToCart.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{}}}],["clear:both",{"_index":1591,"title":{},"body":{"components/FooterComponent.html":{}}}],["clear_cart",{"_index":3996,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clearcart",{"_index":820,"title":{},"body":{"injectables/CartService.html":{}}}],["clearcartcontent",{"_index":873,"title":{"classes/ClearCartContent.html":{}},"body":{"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["clearcartcontent(ctx",{"_index":893,"title":{},"body":{"injectables/CartState.html":{}}}],["clearcartfromstorage",{"_index":874,"title":{"classes/ClearCartFromStorage.html":{}},"body":{"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"injectables/GlobalDataService.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["clearcartfromstorage(ctx",{"_index":896,"title":{},"body":{"injectables/CartState.html":{}}}],["clearcategories",{"_index":1049,"title":{},"body":{"injectables/CategoryState.html":{}}}],["clearcategories(ctx",{"_index":1056,"title":{},"body":{"injectables/CategoryState.html":{}}}],["clearcategory",{"_index":1057,"title":{"classes/ClearCategory.html":{}},"body":{"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{}}}],["clearcontactform",{"_index":1831,"title":{},"body":{"components/HomeComponent.html":{}}}],["clearerror",{"_index":3402,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["clearinvoicesfromstorage",{"_index":1270,"title":{"classes/ClearInvoicesFromStorage.html":{}},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/GlobalDataService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["clearinvoicesfromstorage(ctx",{"_index":2033,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["clearordersfromstorage",{"_index":773,"title":{"classes/ClearOrdersFromStorage.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/GlobalDataService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["clearordersfromstorage(ctx",{"_index":2632,"title":{},"body":{"injectables/OrderState.html":{}}}],["clearpaymentsfromstorage",{"_index":1278,"title":{"classes/ClearPaymentsFromStorage.html":{}},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/GlobalDataService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["clearpaymentsfromstorage()]).subscribe",{"_index":1707,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["clearpaymentsfromstorage(ctx",{"_index":2714,"title":{},"body":{"injectables/PaymentState.html":{}}}],["clearproducts",{"_index":269,"title":{"classes/ClearProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["clearproducts(ctx",{"_index":2853,"title":{},"body":{"injectables/ProductState.html":{}}}],["clearprofiledata",{"_index":1095,"title":{"classes/ClearProfileData.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/GlobalDataService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["clearprofiledata(ctx",{"_index":2953,"title":{},"body":{"injectables/ProfileState.html":{}}}],["clearsubcategories",{"_index":3589,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["clearsubcategories(ctx",{"_index":3592,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["clearsubcategory",{"_index":1288,"title":{"classes/ClearSubCategory.html":{}},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["cleartags",{"_index":1301,"title":{"classes/ClearTags.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["cleartags(ctx",{"_index":3691,"title":{},"body":{"injectables/TagState.html":{}}}],["cli",{"_index":4025,"title":{},"body":{"index.html":{}}}],["clients",{"_index":1925,"title":{},"body":{"components/HomeComponent.html":{}}}],["close",{"_index":341,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["clouse",{"_index":2436,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["cluster_appmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":435,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":600,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":602,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":601,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_cartlayoutmodule",{"_index":782,"title":{},"body":{"modules/CartLayoutModule.html":{},"overview.html":{}}}],["cluster_cartlayoutmodule_declarations",{"_index":784,"title":{},"body":{"modules/CartLayoutModule.html":{},"overview.html":{}}}],["cluster_cartlayoutmodule_imports",{"_index":783,"title":{},"body":{"modules/CartLayoutModule.html":{}}}],["cluster_categorylayoutmodule",{"_index":1001,"title":{},"body":{"modules/CategoryLayoutModule.html":{},"overview.html":{}}}],["cluster_categorylayoutmodule_declarations",{"_index":1002,"title":{},"body":{"modules/CategoryLayoutModule.html":{},"overview.html":{}}}],["cluster_categorylayoutmodule_imports",{"_index":1003,"title":{},"body":{"modules/CategoryLayoutModule.html":{}}}],["cluster_chatbotmodule",{"_index":1146,"title":{},"body":{"modules/ChatbotModule.html":{},"overview.html":{}}}],["cluster_chatbotmodule_declarations",{"_index":1147,"title":{},"body":{"modules/ChatbotModule.html":{},"overview.html":{}}}],["cluster_commonlayoutmodule",{"_index":1318,"title":{},"body":{"modules/CommonLayoutModule.html":{},"overview.html":{}}}],["cluster_commonlayoutmodule_declarations",{"_index":1321,"title":{},"body":{"modules/CommonLayoutModule.html":{},"overview.html":{}}}],["cluster_commonlayoutmodule_exports",{"_index":1319,"title":{},"body":{"modules/CommonLayoutModule.html":{},"overview.html":{}}}],["cluster_commonlayoutmodule_imports",{"_index":1320,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["cluster_componentmodule",{"_index":1330,"title":{},"body":{"modules/ComponentModule.html":{},"overview.html":{}}}],["cluster_componentmodule_declarations",{"_index":1333,"title":{},"body":{"modules/ComponentModule.html":{},"overview.html":{}}}],["cluster_componentmodule_exports",{"_index":1331,"title":{},"body":{"modules/ComponentModule.html":{},"overview.html":{}}}],["cluster_componentmodule_imports",{"_index":1332,"title":{},"body":{"modules/ComponentModule.html":{}}}],["cluster_dashboardmodule",{"_index":1447,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":1449,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":1448,"title":{},"body":{"modules/DashboardModule.html":{}}}],["cluster_errormodule",{"_index":1506,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":1508,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":1507,"title":{},"body":{"modules/ErrorModule.html":{}}}],["cluster_invoicelayoutmodule",{"_index":2008,"title":{},"body":{"modules/InvoiceLayoutModule.html":{},"overview.html":{}}}],["cluster_invoicelayoutmodule_declarations",{"_index":2010,"title":{},"body":{"modules/InvoiceLayoutModule.html":{},"overview.html":{}}}],["cluster_invoicelayoutmodule_imports",{"_index":2009,"title":{},"body":{"modules/InvoiceLayoutModule.html":{}}}],["cluster_orderlayoutmodule",{"_index":2586,"title":{},"body":{"modules/OrderLayoutModule.html":{},"overview.html":{}}}],["cluster_orderlayoutmodule_declarations",{"_index":2588,"title":{},"body":{"modules/OrderLayoutModule.html":{},"overview.html":{}}}],["cluster_orderlayoutmodule_imports",{"_index":2587,"title":{},"body":{"modules/OrderLayoutModule.html":{}}}],["cluster_pipesmodule",{"_index":2736,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":2738,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":2737,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_productlayoutmodule",{"_index":2796,"title":{},"body":{"modules/ProductLayoutModule.html":{},"overview.html":{}}}],["cluster_productlayoutmodule_declarations",{"_index":2797,"title":{},"body":{"modules/ProductLayoutModule.html":{},"overview.html":{}}}],["cluster_productlayoutmodule_imports",{"_index":2798,"title":{},"body":{"modules/ProductLayoutModule.html":{}}}],["cluster_sharedmodule",{"_index":3200,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":3201,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":3202,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":3203,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_shoplayoutmodule",{"_index":3343,"title":{},"body":{"modules/ShopLayoutModule.html":{},"overview.html":{}}}],["cluster_shoplayoutmodule_declarations",{"_index":3344,"title":{},"body":{"modules/ShopLayoutModule.html":{},"overview.html":{}}}],["cluster_shoplayoutmodule_imports",{"_index":3345,"title":{},"body":{"modules/ShopLayoutModule.html":{}}}],["cluster_stripeintegrationmodule",{"_index":3472,"title":{},"body":{"modules/StripeIntegrationModule.html":{},"overview.html":{}}}],["cluster_stripeintegrationmodule_declarations",{"_index":3474,"title":{},"body":{"modules/StripeIntegrationModule.html":{},"overview.html":{}}}],["cluster_stripeintegrationmodule_exports",{"_index":3473,"title":{},"body":{"modules/StripeIntegrationModule.html":{},"overview.html":{}}}],["cluster_stripeintegrationmodule_imports",{"_index":3475,"title":{},"body":{"modules/StripeIntegrationModule.html":{}}}],["cluster_subcategorylayoutmodule",{"_index":3531,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{},"overview.html":{}}}],["cluster_subcategorylayoutmodule_declarations",{"_index":3533,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{},"overview.html":{}}}],["cluster_subcategorylayoutmodule_imports",{"_index":3532,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{}}}],["cluster_taglayoutmodule",{"_index":3659,"title":{},"body":{"modules/TagLayoutModule.html":{},"overview.html":{}}}],["cluster_taglayoutmodule_declarations",{"_index":3661,"title":{},"body":{"modules/TagLayoutModule.html":{},"overview.html":{}}}],["cluster_taglayoutmodule_imports",{"_index":3660,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["code",{"_index":1232,"title":{},"body":{"components/CheckoutComponent.html":{},"components/StripeCheckoutComponent.html":{},"index.html":{}}}],["collapsemodule",{"_index":2289,"title":{},"body":{"modules/MdbModule.html":{}}}],["collapsemodule.forroot",{"_index":2304,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":2380,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["color=\"default",{"_index":3813,"title":{},"body":{"components/UserCartComponent.html":{}}}],["columns",{"_index":1568,"title":{},"body":{"components/FooterComponent.html":{}}}],["come",{"_index":1943,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["comments",{"_index":741,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{}}}],["common",{"_index":150,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["commonlayoutcomponent",{"_index":149,"title":{"components/CommonLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["commonlayoutmodule",{"_index":1317,"title":{"modules/CommonLayoutModule.html":{}},"body":{"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules.html":{},"overview.html":{}}}],["commonlayoutroutes",{"_index":1322,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["commonmodule",{"_index":604,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["commons/api",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{}}}],["commons/classes/abstract",{"_index":1019,"title":{},"body":{"classes/CategoryModel.html":{},"classes/SubCategoryModel.html":{}}}],["commons/classes/billing",{"_index":2607,"title":{},"body":{"classes/OrderModel.html":{}}}],["commons/classes/contact",{"_index":109,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{}}}],["commons/classes/item",{"_index":2903,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["commons/constants",{"_index":1204,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["commons/constants/countries",{"_index":1200,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["commons/enums/activity",{"_index":50,"title":{},"body":{"classes/ActivityModel.html":{}}}],["commons/enums/gender.enum",{"_index":2918,"title":{},"body":{"classes/ProfileModel.html":{}}}],["commons/enums/order",{"_index":2609,"title":{},"body":{"classes/OrderModel.html":{},"components/OrdersComponent.html":{}}}],["commons/enums/payment",{"_index":2701,"title":{},"body":{"classes/PaymentModel.html":{},"components/StripeCheckoutComponent.html":{}}}],["commons/enums/user",{"_index":3852,"title":{},"body":{"classes/UserModel.html":{}}}],["commons/guards/user",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commons/helpers/functions/error",{"_index":1412,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["commons/interfaces/checkout",{"_index":848,"title":{},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{}}}],["commons/interfaces/login",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{}}}],["commons/interfaces/remove",{"_index":845,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["commons/pipes/pipes.module",{"_index":1328,"title":{},"body":{"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/ShopLayoutModule.html":{}}}],["commons/public",{"_index":240,"title":{},"body":{"classes/AddToCart.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"injectables/ContactService.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserProfile.html":{},"classes/Login.html":{},"classes/Logout.html":{},"injectables/OrderService.html":{},"interfaces/OrderStateModel.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushOrder.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["completed",{"_index":3466,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["component",{"_index":51,"title":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["component_template",{"_index":130,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["componentmodule",{"_index":460,"title":{"modules/ComponentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ComponentModule.html":{},"modules.html":{},"overview.html":{}}}],["components",{"_index":53,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["components/add",{"_index":3222,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/component.module",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["components/invalid",{"_index":3214,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/login",{"_index":3225,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/products/add",{"_index":3227,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/show",{"_index":3216,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/stripe",{"_index":3477,"title":{},"body":{"modules/StripeIntegrationModule.html":{}}}],["concat(subcategory.products.slice(0",{"_index":3318,"title":{},"body":{"components/ShopComponent.html":{}}}],["confirm",{"_index":2145,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfileComponent.html":{}}}],["confirmpassword",{"_index":3059,"title":{},"body":{"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{}}}],["connect",{"_index":2426,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["connection",{"_index":1783,"title":{},"body":{"injectables/HelperService.html":{},"components/NoInternetComponent.html":{}}}],["connection.interceptor.ts",{"_index":1157,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["connection.interceptor.ts:13",{"_index":1159,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["connection.interceptor.ts:18",{"_index":1164,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["connectivity",{"_index":1178,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["consectetur",{"_index":1575,"title":{},"body":{"components/FooterComponent.html":{}}}],["consider",{"_index":1914,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log('file",{"_index":1813,"title":{},"body":{"injectables/HelperService.html":{}}}],["console.log(data",{"_index":1139,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["console.log(err",{"_index":1136,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["const",{"_index":324,"title":{},"body":{"components/AddToCartComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"injectables/ContactService.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["constructor(_http",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/InvoiceService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{}}}],["constructor(adminid",{"_index":3832,"title":{},"body":{"classes/UserModel.html":{}}}],["constructor(authservice",{"_index":676,"title":{},"body":{"injectables/AuthState.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(breakpointobserver",{"_index":2318,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(cart",{"_index":3745,"title":{},"body":{"classes/UpdateCartState.html":{}}}],["constructor(cartid",{"_index":3035,"title":{},"body":{"classes/RemoveCartProduct.html":{},"classes/SetUserCart.html":{},"classes/UpdateCartProductQuantity.html":{}}}],["constructor(cartproductid",{"_index":1257,"title":{},"body":{"classes/CheckoutOnSingleProduct.html":{}}}],["constructor(cartservice",{"_index":876,"title":{},"body":{"injectables/CartState.html":{}}}],["constructor(categoryservice",{"_index":1051,"title":{},"body":{"injectables/CategoryState.html":{}}}],["constructor(content",{"_index":2308,"title":{},"body":{"classes/Message.html":{}}}],["constructor(createprofiledto",{"_index":1380,"title":{},"body":{"classes/CreateUserProfile.html":{}}}],["constructor(customerid",{"_index":3190,"title":{},"body":{"classes/SetCustomerToken.html":{}}}],["constructor(dialog",{"_index":1731,"title":{},"body":{"injectables/HelperService.html":{}}}],["constructor(fb",{"_index":81,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/RegisterComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(gdservice",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/HomeComponent.html":{},"components/OrderDetailsComponent.html":{},"components/SidebarComponent.html":{},"interceptors/TokenInterceptor.html":{}}}],["constructor(helperservice",{"_index":282,"title":{},"body":{"components/AddToCartComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoicesComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["constructor(http",{"_index":2526,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/SearchService.html":{},"injectables/TokenService.html":{}}}],["constructor(id",{"_index":756,"title":{},"body":{"classes/CancelOrder.html":{},"classes/FetchCategoryById.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/UpdateOrder.html":{}}}],["constructor(imageform",{"_index":1077,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/SetProfileImage.html":{}}}],["constructor(invoice",{"_index":2990,"title":{},"body":{"classes/PushInvoice.html":{}}}],["constructor(invoiceservice",{"_index":2031,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["constructor(order",{"_index":2993,"title":{},"body":{"classes/PushOrder.html":{}}}],["constructor(orderservice",{"_index":2627,"title":{},"body":{"injectables/OrderState.html":{}}}],["constructor(payload",{"_index":1254,"title":{},"body":{"classes/CheckoutOnCart.html":{},"classes/Login.html":{},"classes/Register.html":{},"classes/RemoveProductsFromCart.html":{}}}],["constructor(payment",{"_index":2996,"title":{},"body":{"classes/PushPayment.html":{}}}],["constructor(paymentservice",{"_index":2712,"title":{},"body":{"injectables/PaymentState.html":{}}}],["constructor(private",{"_index":110,"title":{},"body":{"components/AddContactsComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"injectables/ContactService.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/LoginComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["constructor(productid",{"_index":233,"title":{},"body":{"classes/AddToCart.html":{}}}],["constructor(products",{"_index":3756,"title":{},"body":{"classes/UpdateShopProducts.html":{}}}],["constructor(productscustomfilterdto",{"_index":1519,"title":{},"body":{"classes/FetchCustomProducts.html":{}}}],["constructor(productservice",{"_index":2847,"title":{},"body":{"injectables/ProductState.html":{}}}],["constructor(productsservice",{"_index":3089,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["constructor(profileid",{"_index":3197,"title":{},"body":{"classes/SetUserProfile.html":{}}}],["constructor(profileservice",{"_index":2948,"title":{},"body":{"injectables/ProfileState.html":{}}}],["constructor(public",{"_index":254,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Message.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{}}}],["constructor(router",{"_index":974,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/SearchComponent.html":{}}}],["constructor(store",{"_index":1637,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{}}}],["constructor(subcategoryservice",{"_index":3590,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["constructor(tagname",{"_index":1533,"title":{},"body":{"classes/FetchProductsByTagName.html":{},"classes/FetchSubCategoriesByTagName.html":{}}}],["constructor(tagservice",{"_index":3689,"title":{},"body":{"injectables/TagState.html":{}}}],["constructor(take",{"_index":1537,"title":{},"body":{"classes/FetchShopProducts.html":{}}}],["constructor(token",{"_index":3759,"title":{},"body":{"classes/UpdateToken.html":{}}}],["constructor(updateprofiledto",{"_index":1459,"title":{},"body":{"classes/EditProfile.html":{}}}],["constructor(user",{"_index":3762,"title":{},"body":{"classes/UpdateUser.html":{}}}],["constructor(users",{"_index":1617,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["contact",{"_index":72,"title":{"classes/Contact.html":{}},"body":{"components/AddContactsComponent.html":{},"classes/Contact.html":{},"classes/CreateProfileDto.html":{},"components/HomeComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["contact@mdbootstrap.com",{"_index":1957,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactcontrol",{"_index":75,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contactcontrol(controlindex",{"_index":95,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contactcontrols",{"_index":1833,"title":{},"body":{"components/HomeComponent.html":{}}}],["contactmessagedto",{"_index":1342,"title":{"classes/ContactMessageDto.html":{}},"body":{"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{}}}],["contacts",{"_index":67,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/CreateProfileDto.html":{},"components/CreateUserProfileComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{}}}],["contacts'},{'name",{"_index":131,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["contacts.component",{"_index":3223,"title":{},"body":{"modules/SharedModule.html":{}}}],["contacts.component.css",{"_index":69,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.html",{"_index":71,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts",{"_index":60,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:12",{"_index":90,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:13",{"_index":88,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:14",{"_index":83,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:20",{"_index":92,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:27",{"_index":98,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:30",{"_index":100,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts.component.ts:35",{"_index":96,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["contacts/add",{"_index":59,"title":{},"body":{"components/AddContactsComponent.html":{},"modules/SharedModule.html":{}}}],["contactservice",{"_index":1348,"title":{"injectables/ContactService.html":{}},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{}}}],["container",{"_index":2350,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["content",{"_index":531,"title":{"classes/Content.html":{}},"body":{"classes/AppPage.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/Content.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"components/FooterComponent.html":{},"classes/Message.html":{},"classes/Notification.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["context",{"_index":4065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["continue",{"_index":2427,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["controlindex",{"_index":97,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["controlname",{"_index":4019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["controls",{"_index":1191,"title":{},"body":{"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["cookie",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["copyright",{"_index":1586,"title":{},"body":{"components/FooterComponent.html":{}}}],["countries",{"_index":1189,"title":{},"body":{"components/CheckoutComponent.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":742,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{},"classes/CreateProfileDto.html":{},"components/CreateUserProfileComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{}}}],["cover",{"_index":3523,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["create",{"_index":152,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProfileData.html":{},"components/CommonLayoutComponent.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProfileStateModel.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetProfileImage.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["createcartproductdto",{"_index":229,"title":{"classes/CreateCartProductDto.html":{}},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/ClearProducts.html":{},"classes/CreateCartProductDto.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["created",{"_index":2087,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["createdat",{"_index":10,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/CategoryModel.html":{},"classes/OrderModel.html":{},"components/OrdersComponent.html":{},"classes/ProductModel.html":{},"classes/SubCategoryModel.html":{},"classes/TagModel.html":{}}}],["createorderdto",{"_index":852,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["createpaymentdto",{"_index":851,"title":{"classes/CreatePaymentDto.html":{}},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["createprofile",{"_index":1392,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["createprofiledto",{"_index":1083,"title":{"classes/CreateProfileDto.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["createprofileform",{"_index":1389,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["createusercart",{"_index":316,"title":{"classes/CreateUserCart.html":{}},"body":{"components/AddToCartComponent.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["createusercart()).subscribe",{"_index":321,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["createusercart(ctx",{"_index":899,"title":{},"body":{"injectables/CartState.html":{}}}],["createuserprofile",{"_index":1087,"title":{"classes/CreateUserProfile.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["createuserprofile(createprofiledto",{"_index":2927,"title":{},"body":{"injectables/ProfileService.html":{}}}],["createuserprofile(ctx",{"_index":2956,"title":{},"body":{"injectables/ProfileState.html":{}}}],["createuserprofile(this.createprofileform.value)).topromise().then",{"_index":1422,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["createuserprofilecomponent",{"_index":151,"title":{"components/CreateUserProfileComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["creating",{"_index":3984,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["creation",{"_index":3985,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["credentials",{"_index":1998,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials'},{'name",{"_index":164,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["credentials.component",{"_index":3215,"title":{},"body":{"modules/SharedModule.html":{}}}],["credentials.component.css",{"_index":1999,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.html",{"_index":2000,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.ts",{"_index":1997,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.ts:11",{"_index":2003,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.ts:12",{"_index":2002,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.ts:14",{"_index":2005,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.component.ts:17",{"_index":2004,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["credentials.dto",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["credentials.dto.ts",{"_index":592,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:3",{"_index":598,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:5",{"_index":596,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials.dto.ts:7",{"_index":597,"title":{},"body":{"classes/AuthCredentialsDto.html":{}}}],["credentials/invalid",{"_index":1996,"title":{},"body":{"components/InvalidCredentialsComponent.html":{},"modules/SharedModule.html":{}}}],["cropped",{"_index":1963,"title":{},"body":{"components/HomeComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["crypto",{"_index":3943,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":686,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["ctx.getstate().user",{"_index":722,"title":{},"body":{"injectables/AuthState.html":{}}}],["ctx.patchstate",{"_index":725,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/ProfileState.html":{}}}],["ctx.setstate",{"_index":717,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["ctx.setstate(patch",{"_index":946,"title":{},"body":{"injectables/CartState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/TagState.html":{}}}],["currentpassword",{"_index":3071,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["currentprice",{"_index":2803,"title":{},"body":{"classes/ProductModel.html":{},"classes/UpdateProductDto.html":{}}}],["currentvalue",{"_index":325,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["cursor",{"_index":2488,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["custom",{"_index":242,"title":{},"body":{"classes/AddToCart.html":{},"components/CheckoutComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductsCustomFilterDto.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["customer",{"_index":1285,"title":{},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"components/HomeComponent.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["customerid",{"_index":954,"title":{},"body":{"injectables/CartState.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/PaymentService.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["customformsmodule",{"_index":3208,"title":{},"body":{"modules/SharedModule.html":{}}}],["customized",{"_index":1898,"title":{},"body":{"components/HomeComponent.html":{}}}],["customvalidators",{"_index":1205,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["customvalidators.email",{"_index":1212,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["d",{"_index":1808,"title":{},"body":{"injectables/HelperService.html":{}}}],["d.dashboardmodule",{"_index":548,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["d.target.result",{"_index":1810,"title":{},"body":{"injectables/HelperService.html":{}}}],["dashboard",{"_index":1441,"title":{},"body":{"components/DashboardComponent.html":{},"modules/DashboardModule.html":{}}}],["dashboard'},{'name",{"_index":155,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["dashboard.component.css",{"_index":1442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":1443,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":154,"title":{"components/DashboardComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["dashboardlayoutroutes",{"_index":1451,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardmodule",{"_index":1446,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":124,"title":{},"body":{"components/AddContactsComponent.html":{},"interfaces/AuthStateModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"classes/ClearProfileData.html":{},"injectables/ContactService.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/HelperService.html":{},"injectables/InvoiceState.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Notification.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"interfaces/ProfileStateModel.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"components/SearchComponent.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"injectables/SubCategoryState.html":{},"classes/SubscribersNotifications.html":{},"injectables/TokenService.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/variables.html":{}}}],["data.dto",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.dto.ts",{"_index":1612,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:1",{"_index":1618,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:10",{"_index":1625,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:11",{"_index":1627,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:12",{"_index":1619,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:13",{"_index":1626,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:14",{"_index":1629,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:3",{"_index":1630,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:4",{"_index":1623,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:5",{"_index":1622,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:6",{"_index":1624,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:7",{"_index":1621,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:8",{"_index":1620,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.dto.ts:9",{"_index":1628,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["data.message",{"_index":1142,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["data.order",{"_index":2548,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["data.orderitemsproducts",{"_index":2550,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["data.service",{"_index":308,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["data.service.ts",{"_index":1632,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:104",{"_index":1640,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:111",{"_index":1643,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:122",{"_index":1645,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:30",{"_index":1638,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:36",{"_index":1647,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:40",{"_index":1649,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:44",{"_index":1651,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:48",{"_index":1653,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:56",{"_index":1655,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:60",{"_index":1657,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:64",{"_index":1659,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:69",{"_index":1661,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:73",{"_index":1663,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:77",{"_index":1665,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:82",{"_index":1667,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:87",{"_index":1669,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:91",{"_index":1671,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:95",{"_index":1641,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.service.ts:99",{"_index":1644,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["data.ts",{"_index":1262,"title":{},"body":{"interfaces/CheckoutReturnData.html":{},"classes/NotificationData.html":{}}}],["data.ts:2",{"_index":2506,"title":{},"body":{"classes/NotificationData.html":{}}}],["data.ts:3",{"_index":2507,"title":{},"body":{"classes/NotificationData.html":{}}}],["date",{"_index":17,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityModel.html":{},"classes/CategoryModel.html":{},"components/FooterComponent.html":{},"classes/InvoiceModel.html":{},"components/InvoicesComponent.html":{},"classes/NotificationData.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderModel.html":{},"components/OrdersComponent.html":{},"classes/PaymentModel.html":{},"classes/ProductModel.html":{},"classes/SubCategoryModel.html":{},"classes/Subscriber.html":{},"classes/TagModel.html":{}}}],["dateofarrival",{"_index":2504,"title":{},"body":{"classes/NotificationData.html":{}}}],["days",{"_index":1932,"title":{},"body":{"components/HomeComponent.html":{}}}],["debouncetime",{"_index":3110,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["debouncetime(200",{"_index":3116,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["declarations",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"overview.html":{}}}],["decorators",{"_index":299,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["default",{"_index":101,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/CancelOrder.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProfileService.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":711,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["delay",{"_index":1934,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCartComponent.html":{}}}],["delete",{"_index":1094,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["deleteprofileimage",{"_index":1093,"title":{"classes/DeleteProfileImage.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["deleteprofileimage(ctx",{"_index":2959,"title":{},"body":{"injectables/ProfileState.html":{}}}],["deletesubcategory",{"_index":3550,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["deletesubcategory(id",{"_index":3561,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["deleteuseraccount",{"_index":4089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleting",{"_index":3986,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deliver",{"_index":1900,"title":{},"body":{"components/HomeComponent.html":{}}}],["delivered",{"_index":1930,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["delivery",{"_index":1924,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailsComponent.html":{},"components/UserCartComponent.html":{}}}],["demo.herokuapp.com",{"_index":2415,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["department",{"_index":1704,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/SidebarComponent.html":{}}}],["dependencies",{"_index":428,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"interceptors/CheckConnectionInterceptor.html":{},"classes/CreatePaymentDto.html":{},"classes/ProductModel.html":{},"components/StripeCheckoutComponent.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"classes/UpdateProductDto.html":{}}}],["desktop",{"_index":2357,"title":{},"body":{"components/NavbarComponent.html":{}}}],["details",{"_index":971,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details'},{'name",{"_index":143,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["details.component",{"_index":1006,"title":{},"body":{"modules/CategoryLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SubCategoryLayoutModule.html":{}}}],["details.component.css",{"_index":972,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.html",{"_index":973,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts",{"_index":970,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:114",{"_index":3488,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:119",{"_index":3489,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:13",{"_index":977,"title":{},"body":{"components/CategoryDetailsComponent.html":{}}}],["details.component.ts:15",{"_index":2539,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["details.component.ts:16",{"_index":981,"title":{},"body":{"components/CategoryDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":980,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":3499,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":2541,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":2761,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":2763,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":2760,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":2758,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":3498,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":3495,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:30",{"_index":3496,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:31",{"_index":3497,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:32",{"_index":978,"title":{},"body":{"components/CategoryDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":3492,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:35",{"_index":2542,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["details.component.ts:36",{"_index":2543,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["details.component.ts:38",{"_index":2540,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{}}}],["details.component.ts:42",{"_index":2755,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":3500,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:52",{"_index":3490,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":2762,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:64",{"_index":2757,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:68",{"_index":2764,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:69",{"_index":2759,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:71",{"_index":2752,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["details.component.ts:91",{"_index":3486,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details.component.ts:97",{"_index":3494,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["details/category",{"_index":969,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"modules/CategoryLayoutModule.html":{}}}],["details/order",{"_index":2536,"title":{},"body":{"components/OrderDetailsComponent.html":{},"modules/OrderLayoutModule.html":{}}}],["details/product",{"_index":2747,"title":{},"body":{"components/ProductDetailsComponent.html":{},"modules/ProductLayoutModule.html":{}}}],["details/sub",{"_index":3480,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{},"modules/SubCategoryLayoutModule.html":{}}}],["dev",{"_index":4030,"title":{},"body":{"index.html":{}}}],["development",{"_index":4027,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["device",{"_index":2434,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["dialog",{"_index":1741,"title":{},"body":{"injectables/HelperService.html":{},"components/ShowErrorDialogComponent.html":{}}}],["dialog'},{'name",{"_index":205,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["dialog.component",{"_index":3218,"title":{},"body":{"modules/SharedModule.html":{}}}],["dialog.component.css",{"_index":3351,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.html",{"_index":3352,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":3350,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts:10",{"_index":3357,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts:11",{"_index":3356,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":3354,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":3358,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":3355,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["dialog/show",{"_index":3217,"title":{},"body":{"modules/SharedModule.html":{},"components/ShowErrorDialogComponent.html":{}}}],["different",{"_index":3804,"title":{},"body":{"components/UserCartComponent.html":{}}}],["digits",{"_index":1235,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["direct",{"_index":3805,"title":{},"body":{"components/UserCartComponent.html":{}}}],["directive",{"_index":128,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["directives",{"_index":222,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":4037,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1942,"title":{},"body":{"components/HomeComponent.html":{}}}],["directory",{"_index":4042,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":3427,"title":{},"body":{"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["disc",{"_index":2483,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["display",{"_index":1430,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["displayedcolumns",{"_index":2055,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["displayname",{"_index":1370,"title":{},"body":{"classes/CreateProfileDto.html":{},"components/CreateUserProfileComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{}}}],["dist",{"_index":4041,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":3111,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["docheck",{"_index":3481,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["document.body.scrolltop",{"_index":2771,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["document.documentelement.scrolltop",{"_index":2772,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["dolor",{"_index":1572,"title":{},"body":{"components/FooterComponent.html":{}}}],["dom",{"_index":56,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["down",{"_index":2344,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dragdropmodule",{"_index":2260,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["drawer",{"_index":3088,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["dressesproducts",{"_index":3502,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["drop",{"_index":2262,"title":{},"body":{"modules/MaterialModule.html":{}}}],["dropdownmodule",{"_index":2284,"title":{},"body":{"modules/MdbModule.html":{}}}],["dropdownmodule.forroot",{"_index":2302,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["dto/activity.dto.ts",{"_index":32,"title":{},"body":{"classes/ActivityDto.html":{}}}],["dto/activity.dto.ts:4",{"_index":36,"title":{},"body":{"classes/ActivityDto.html":{}}}],["dto/activity.dto.ts:5",{"_index":38,"title":{},"body":{"classes/ActivityDto.html":{}}}],["dto/activity.dto.ts:6",{"_index":37,"title":{},"body":{"classes/ActivityDto.html":{}}}],["dto/auth",{"_index":591,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["dto/category.dto",{"_index":3575,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["dto/category.dto.ts",{"_index":994,"title":{},"body":{"classes/CategoryDto.html":{},"classes/SubCategoryDto.html":{}}}],["dto/category.dto.ts:2",{"_index":996,"title":{},"body":{"classes/CategoryDto.html":{}}}],["dto/category.dto.ts:3",{"_index":995,"title":{},"body":{"classes/CategoryDto.html":{}}}],["dto/category.dto.ts:7",{"_index":3526,"title":{},"body":{"classes/SubCategoryDto.html":{}}}],["dto/category.dto.ts:8",{"_index":3525,"title":{},"body":{"classes/SubCategoryDto.html":{}}}],["dto/category.dto.ts:9",{"_index":3527,"title":{},"body":{"classes/SubCategoryDto.html":{}}}],["dto/contact",{"_index":1343,"title":{},"body":{"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{}}}],["dto/create",{"_index":965,"title":{},"body":{"interfaces/CartStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProfileData.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetProfileImage.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["dto/email",{"_index":1463,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["dto/get",{"_index":1601,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["dto/global",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"classes/GlobalDataDto.html":{}}}],["dto/insert",{"_index":1992,"title":{},"body":{"classes/InsertTagDto.html":{}}}],["dto/order.dto",{"_index":763,"title":{},"body":{"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserOrders.html":{},"injectables/OrderService.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{}}}],["dto/order.dto.ts",{"_index":2571,"title":{},"body":{"classes/OrderDto.html":{}}}],["dto/order.dto.ts:4",{"_index":2572,"title":{},"body":{"classes/OrderDto.html":{}}}],["dto/products",{"_index":241,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["dto/reset",{"_index":3069,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["dto/tag.dto",{"_index":3685,"title":{},"body":{"injectables/TagService.html":{}}}],["dto/tag.dto.ts",{"_index":3633,"title":{},"body":{"classes/TagDto.html":{}}}],["dto/tag.dto.ts:2",{"_index":3634,"title":{},"body":{"classes/TagDto.html":{}}}],["dto/update",{"_index":3751,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["due",{"_index":2090,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["duedate",{"_index":2015,"title":{},"body":{"classes/InvoiceModel.html":{},"components/InvoicesComponent.html":{}}}],["duration",{"_index":1824,"title":{},"body":{"injectables/HelperService.html":{}}}],["dynamic",{"_index":3922,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1812,"title":{},"body":{"injectables/HelperService.html":{}}}],["e.errormodule",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["e.target.error.code",{"_index":1815,"title":{},"body":{"injectables/HelperService.html":{}}}],["e0eafc",{"_index":2361,"title":{},"body":{"components/NavbarComponent.html":{}}}],["e2e",{"_index":4052,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":522,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":527,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":525,"title":{},"body":{"classes/AppPage.html":{}}}],["east",{"_index":1130,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["ece9e6",{"_index":1988,"title":{},"body":{"components/HomeComponent.html":{}}}],["edge",{"_index":356,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["edit",{"_index":1090,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["editprofile",{"_index":1089,"title":{"classes/EditProfile.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["editprofile(ctx",{"_index":2962,"title":{},"body":{"injectables/ProfileState.html":{}}}],["editprofile(this.updateprofileform.value)).subscribe",{"_index":3902,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["edituserprofile",{"_index":2921,"title":{},"body":{"injectables/ProfileService.html":{}}}],["edituserprofile(updateprofiledto",{"_index":2930,"title":{},"body":{"injectables/ProfileService.html":{}}}],["edituserroles",{"_index":4096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["egypt",{"_index":4161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":127,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["element(by.css('app",{"_index":530,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":3105,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["elements",{"_index":3399,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["elementsoptions",{"_index":3400,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["elit",{"_index":1577,"title":{},"body":{"components/FooterComponent.html":{}}}],["email",{"_index":593,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{},"classes/ContactMessageDto.html":{},"classes/EmailLoginDto.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"injectables/NotificationsService.html":{},"components/RegisterComponent.html":{},"classes/ResetPasswordDto.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["emaillogindto",{"_index":1462,"title":{"classes/EmailLoginDto.html":{}},"body":{"classes/EmailLoginDto.html":{},"components/LoginComponent.html":{}}}],["emailpattern",{"_index":1203,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["emailrequestform",{"_index":2110,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailverified",{"_index":3829,"title":{},"body":{"classes/UserModel.html":{}}}],["empty",{"_index":3803,"title":{},"body":{"components/UserCartComponent.html":{}}}],["en",{"_index":3415,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["enablecookies",{"_index":2315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enabled",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["encounter",{"_index":2429,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["end",{"_index":4051,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":3610,"title":{},"body":{"classes/Subscriber.html":{}}}],["endpoints",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{}}}],["endpoints.ts",{"_index":4064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enter",{"_index":122,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/CheckoutComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["entity.ts",{"_index":2510,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["entity.ts:11",{"_index":2514,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["entity.ts:4",{"_index":2513,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["entity.ts:6",{"_index":2515,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["entity.ts:8",{"_index":2512,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["enum",{"_index":3291,"title":{},"body":{"components/ShopComponent.html":{}}}],["enumerations",{"_index":3972,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/activity",{"_index":40,"title":{},"body":{"classes/ActivityDto.html":{}}}],["enums/gender.enum",{"_index":1377,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["enums/payment",{"_index":1367,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["environment",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":1135,"title":{},"body":{"components/ChatbotComponent.html":{},"interceptors/ErrorInterceptor.html":{}}}],["err.error",{"_index":1881,"title":{},"body":{"components/HomeComponent.html":{}}}],["err.message",{"_index":1884,"title":{},"body":{"components/HomeComponent.html":{}}}],["err.stack",{"_index":1137,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["error",{"_index":204,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ErrorModule.html":{},"components/FooterComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["error'},{'name",{"_index":157,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["error.component.css",{"_index":1468,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1469,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error1",{"_index":3467,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["errorcomponent",{"_index":156,"title":{"components/ErrorComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["errorinterceptor",{"_index":441,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["errorlayoutroutes",{"_index":1510,"title":{},"body":{"modules/ErrorModule.html":{}}}],["errormessage",{"_index":2001,"title":{},"body":{"components/InvalidCredentialsComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["errormessages",{"_index":1390,"title":{"classes/ErrorMessages.html":{}},"body":{"components/CreateUserProfileComponent.html":{},"classes/ErrorMessages.html":{},"injectables/HelperService.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.notvalidfield(\"email",{"_index":3027,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield('city",{"_index":1435,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield('country",{"_index":1434,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield('display",{"_index":1431,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield('email",{"_index":3026,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield('gender",{"_index":1433,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield('password",{"_index":3028,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield('username",{"_index":3025,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield(\\'city",{"_index":1439,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield(\\'country",{"_index":1438,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield(\\'display",{"_index":1436,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield(\\'email",{"_index":3031,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield(\\'gender",{"_index":1437,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["errormessages.requiredfield(\\'password",{"_index":3032,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormessages.requiredfield(\\'username",{"_index":3030,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errormodule",{"_index":1505,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errorname",{"_index":3353,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["erroroncharge",{"_index":3401,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["erroroncharge.code",{"_index":3470,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["erroroncharge.message",{"_index":3471,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["errortemplate",{"_index":276,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["especially",{"_index":1897,"title":{},"body":{"components/HomeComponent.html":{}}}],["etc",{"_index":1913,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":1748,"title":{},"body":{"injectables/HelperService.html":{},"components/UserProfileComponent.html":{}}}],["event.files[0",{"_index":1803,"title":{},"body":{"injectables/HelperService.html":{}}}],["event.target.value",{"_index":3115,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["eventemitter",{"_index":1397,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["example",{"_index":1958,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{}}}],["execute",{"_index":4048,"title":{},"body":{"index.html":{}}}],["existence",{"_index":4114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expected",{"_index":3819,"title":{},"body":{"components/UserCartComponent.html":{}}}],["expirationtime",{"_index":3611,"title":{},"body":{"classes/Subscriber.html":{}}}],["export",{"_index":26,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["exports",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"overview.html":{}}}],["express",{"_index":3945,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":1009,"title":{},"body":{"classes/CategoryModel.html":{},"classes/ProductTagModel.html":{},"classes/SubCategoryModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["f44236",{"_index":2467,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["fa",{"_index":2342,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["fallback",{"_index":1971,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["false",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2376,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["fast",{"_index":1922,"title":{},"body":{"components/HomeComponent.html":{}}}],["fb",{"_index":86,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["female",{"_index":4000,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch",{"_index":252,"title":{},"body":{"classes/AddToCart.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchallcategories",{"_index":1050,"title":{"classes/FetchAllCategories.html":{}},"body":{"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{},"components/SidebarComponent.html":{}}}],["fetchallcategories()).subscribe",{"_index":3393,"title":{},"body":{"components/SidebarComponent.html":{}}}],["fetchallcategories(ctx",{"_index":1060,"title":{},"body":{"injectables/CategoryState.html":{}}}],["fetchallsubcategories",{"_index":1297,"title":{"classes/FetchAllSubCategories.html":{}},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["fetchallsubcategories()).subscribe",{"_index":2769,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{}}}],["fetchallsubcategories(ctx",{"_index":3595,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["fetchbysubcategoryname",{"_index":3239,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchbysubcategoryname(subcategory",{"_index":3252,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchbytagname",{"_index":3240,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchbytagname(subcategorytag",{"_index":3254,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchcategorybyid",{"_index":1072,"title":{"classes/FetchCategoryById.html":{}},"body":{"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{}}}],["fetchcustomproducts",{"_index":267,"title":{"classes/FetchCustomProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchcustomproducts(ctx",{"_index":2856,"title":{},"body":{"injectables/ProductState.html":{}}}],["fetchcustomproducts(this.productscustomfilterdto)).subscribe",{"_index":3317,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchinvoicebyid",{"_index":1276,"title":{"classes/FetchInvoiceById.html":{}},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["fetchlatestproducts",{"_index":260,"title":{"classes/FetchLatestProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchmixlatestproducts",{"_index":265,"title":{"classes/FetchMixLatestProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/HomeComponent.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchmixlatestproducts()).subscribe",{"_index":1858,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetchmixlatestproducts(ctx",{"_index":2859,"title":{},"body":{"injectables/ProductState.html":{}}}],["fetchmostsalesproducts",{"_index":258,"title":{"classes/FetchMostSalesProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/HomeComponent.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchmostsalesproducts()).subscribe",{"_index":1856,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetchmostsalesproducts(ctx",{"_index":2862,"title":{},"body":{"injectables/ProductState.html":{}}}],["fetchorderbyid",{"_index":768,"title":{"classes/FetchOrderById.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["fetchpaymentbyid",{"_index":1284,"title":{"classes/FetchPaymentById.html":{}},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["fetchproductbyid",{"_index":264,"title":{"classes/FetchProductById.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchproductsbytagname",{"_index":262,"title":{"classes/FetchProductsByTagName.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchproductstags",{"_index":1314,"title":{"classes/FetchProductsTags.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["fetchproductstags(ctx",{"_index":3694,"title":{},"body":{"injectables/TagState.html":{}}}],["fetchshopproducts",{"_index":251,"title":{"classes/FetchShopProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["fetchshopproducts(10)).subscribe",{"_index":3301,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchshopproducts(ctx",{"_index":2865,"title":{},"body":{"injectables/ProductState.html":{}}}],["fetchshopproducts(this.products.length",{"_index":3321,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchsubcategoriesbytagname",{"_index":1299,"title":{"classes/FetchSubCategoriesByTagName.html":{}},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["fetchsubcategoriesbytagname(ctx",{"_index":3598,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["fetchsubcategoriesbytagname(subcategorytag.name",{"_index":3312,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchsubcategoriesbytagname(this.subcategorytag.name",{"_index":3327,"title":{},"body":{"components/ShopComponent.html":{}}}],["fetchsubcategoriestags",{"_index":1313,"title":{"classes/FetchSubCategoriesTags.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{}}}],["fetchsubcategoriestags()).subscribe",{"_index":3304,"title":{},"body":{"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/TagsComponent.html":{}}}],["fetchsubcategoriestags(ctx",{"_index":3697,"title":{},"body":{"injectables/TagState.html":{}}}],["fetchsubcategorybyid",{"_index":1298,"title":{"classes/FetchSubCategoryById.html":{}},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["fetchtagbyid",{"_index":1315,"title":{"classes/FetchTagById.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"interfaces/TagStateModel.html":{}}}],["fetchtagitems",{"_index":3716,"title":{},"body":{"components/TagsComponent.html":{}}}],["fetchtagitems(tag",{"_index":3718,"title":{},"body":{"components/TagsComponent.html":{}}}],["fetchusercart",{"_index":312,"title":{"classes/FetchUserCart.html":{}},"body":{"components/AddToCartComponent.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"components/LoginComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["fetchusercart()).subscribe",{"_index":323,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["fetchusercart(ctx",{"_index":902,"title":{},"body":{"injectables/CartState.html":{}}}],["fetchuserinvoices",{"_index":1275,"title":{"classes/FetchUserInvoices.html":{}},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"classes/PushInvoice.html":{}}}],["fetchuserinvoices()).subscribe",{"_index":2076,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["fetchuserinvoices(ctx",{"_index":2036,"title":{},"body":{"injectables/InvoiceState.html":{},"injectables/OrderState.html":{}}}],["fetchuserorders",{"_index":767,"title":{"classes/FetchUserOrders.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["fetchuserorders()).subscribe",{"_index":2680,"title":{},"body":{"components/OrdersComponent.html":{}}}],["fetchuserpayments",{"_index":1283,"title":{"classes/FetchUserPayments.html":{}},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"components/LoginComponent.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["fetchuserpayments(ctx",{"_index":2717,"title":{},"body":{"injectables/PaymentState.html":{}}}],["fetchuserprofile",{"_index":1088,"title":{"classes/FetchUserProfile.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["fetchuserprofile()).subscribe",{"_index":3894,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["fetchuserprofile(ctx",{"_index":2965,"title":{},"body":{"injectables/ProfileState.html":{}}}],["few",{"_index":1931,"title":{},"body":{"components/HomeComponent.html":{}}}],["fff",{"_index":2445,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["ffffff",{"_index":1989,"title":{},"body":{"components/HomeComponent.html":{}}}],["field",{"_index":1230,"title":{},"body":{"components/CheckoutComponent.html":{},"classes/ErrorMessages.html":{},"modules/MaterialModule.html":{}}}],["fields",{"_index":1496,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["filedropdirective",{"_index":1554,"title":{},"body":{"modules/FileModule.html":{}}}],["filemodule",{"_index":1552,"title":{"modules/FileModule.html":{}},"body":{"modules/FileModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["filereader",{"_index":1805,"title":{},"body":{"injectables/HelperService.html":{}}}],["files",{"_index":1614,"title":{},"body":{"classes/GlobalDataDto.html":{},"index.html":{}}}],["fileselectdirective",{"_index":1555,"title":{},"body":{"modules/FileModule.html":{}}}],["fileuploader",{"_index":1780,"title":{},"body":{"injectables/HelperService.html":{},"components/UserProfileComponent.html":{}}}],["fileuploadmodule",{"_index":1556,"title":{},"body":{"modules/FileModule.html":{}}}],["fill",{"_index":1965,"title":{},"body":{"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["filter",{"_index":2843,"title":{},"body":{"injectables/ProductService.html":{},"components/ShopComponent.html":{}}}],["filter.dto",{"_index":243,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["filter.dto.ts",{"_index":2904,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.dto.ts:2",{"_index":2905,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.dto.ts:3",{"_index":2906,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.dto.ts:4",{"_index":2909,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.dto.ts:5",{"_index":2907,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.dto.ts:6",{"_index":2908,"title":{},"body":{"classes/ProductsCustomFilterDto.html":{}}}],["filter.pipe",{"_index":2744,"title":{},"body":{"modules/PipesModule.html":{}}}],["filter.pipe.ts",{"_index":2788,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["filter.pipe.ts:9",{"_index":2791,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["filteredbyrange",{"_index":4111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredbystockexistence",{"_index":4113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firefox",{"_index":366,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["first",{"_index":2153,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first'},{'name",{"_index":173,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["first.component",{"_index":3226,"title":{},"body":{"modules/SharedModule.html":{}}}],["first.component.css",{"_index":2154,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.html",{"_index":2155,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts",{"_index":2152,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts:12",{"_index":2161,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts:13",{"_index":2159,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts:18",{"_index":2160,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts:25",{"_index":2163,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first.component.ts:29",{"_index":2165,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["first/login",{"_index":2151,"title":{},"body":{"components/LoginFirstComponent.html":{},"modules/SharedModule.html":{}}}],["fit",{"_index":1964,"title":{},"body":{"components/HomeComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["fix",{"_index":3378,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["fixed",{"_index":2364,"title":{},"body":{"components/NavbarComponent.html":{}}}],["flag",{"_index":4044,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1960,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["flexible",{"_index":1926,"title":{},"body":{"components/HomeComponent.html":{}}}],["foldername",{"_index":2925,"title":{},"body":{"injectables/ProfileService.html":{},"injectables/SubCategoryService.html":{}}}],["font",{"_index":2375,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"dependencies.html":{}}}],["fontfamily",{"_index":3439,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["fontsize",{"_index":3442,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["footer",{"_index":1560,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":159,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer.component.css",{"_index":1561,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1562,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer/footer.component",{"_index":1337,"title":{},"body":{"modules/ComponentModule.html":{}}}],["footercomponent",{"_index":158,"title":{"components/FooterComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["footsteps",{"_index":2428,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["forbidden",{"_index":3361,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["forgot",{"_index":2147,"title":{},"body":{"components/LoginComponent.html":{}}}],["forgotpassword",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(email",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotrequestemail",{"_index":2114,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":79,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["formarray",{"_index":87,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["formbuilder",{"_index":82,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["formchanged",{"_index":3856,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formcontrol",{"_index":106,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["formcontrol(contact.address",{"_index":113,"title":{},"body":{"components/AddContactsComponent.html":{},"components/UserProfileComponent.html":{}}}],["formcontrol(contact.phone",{"_index":116,"title":{},"body":{"components/AddContactsComponent.html":{},"components/UserProfileComponent.html":{}}}],["formcontrol(null",{"_index":1210,"title":{},"body":{"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["formcontrol(this.newpasswordtoken",{"_index":3060,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formcontrol(this.profile.city",{"_index":3897,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formcontrol(this.profile.country",{"_index":3898,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formcontrol(this.profile.displayname",{"_index":3896,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formcontrol(this.profile.gender",{"_index":3899,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formdata",{"_index":1762,"title":{},"body":{"injectables/HelperService.html":{},"injectables/SubCategoryService.html":{}}}],["formgroup",{"_index":89,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["formsmodule",{"_index":3206,"title":{},"body":{"modules/SharedModule.html":{}}}],["formsubmitted",{"_index":1391,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["fortawesome/fontawesome",{"_index":3923,"title":{},"body":{"dependencies.html":{}}}],["francisco",{"_index":1949,"title":{},"body":{"components/HomeComponent.html":{}}}],["free",{"_index":1582,"title":{},"body":{"components/FooterComponent.html":{},"dependencies.html":{}}}],["fromevent",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/SearchBarComponent.html":{}}}],["fromevent(this.searchfield.nativeelement",{"_index":3112,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["fromevent(window",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["full",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CheckoutComponent.html":{},"components/ShopComponent.html":{}}}],["fullname",{"_index":743,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{}}}],["function",{"_index":1174,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["functions",{"_index":4009,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":4053,"title":{},"body":{"index.html":{}}}],["g",{"_index":1432,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["gdservice",{"_index":277,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["gdservice.cart.totalitems",{"_index":1206,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["gdservice.invoices",{"_index":2075,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["gdservice.isauthenticated",{"_index":2132,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["gdservice.totalpurchase",{"_index":1242,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["gdservice.username",{"_index":2338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["gender",{"_index":1371,"title":{},"body":{"classes/CreateProfileDto.html":{},"components/CreateUserProfileComponent.html":{},"classes/ProfileModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["general",{"_index":3332,"title":{},"body":{"components/ShopComponent.html":{}}}],["general.pipe",{"_index":2745,"title":{},"body":{"modules/PipesModule.html":{}}}],["generalfilter",{"_index":1594,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["generalpipe",{"_index":1592,"title":{"pipes/GeneralPipe.html":{}},"body":{"pipes/GeneralPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["generate",{"_index":4036,"title":{},"body":{"index.html":{}}}],["generated",{"_index":4024,"title":{},"body":{"index.html":{}}}],["getall",{"_index":3241,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["getallcategories",{"_index":1036,"title":{},"body":{"injectables/CategoryService.html":{}}}],["getallsubcategories",{"_index":3551,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["getcart",{"_index":1650,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/UserCartComponent.html":{}}}],["getcategories",{"_index":1654,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getcontactcontrols",{"_index":1849,"title":{},"body":{"components/HomeComponent.html":{}}}],["getcontacts",{"_index":1406,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["getcontrols",{"_index":1198,"title":{},"body":{"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["getcustomproducts",{"_index":2824,"title":{},"body":{"injectables/ProductService.html":{}}}],["getcustomproducts(productscustomfilterdto",{"_index":2829,"title":{},"body":{"injectables/ProductService.html":{}}}],["getdisplayname",{"_index":3882,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["getemail",{"_index":2124,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["getforgotrequestemail",{"_index":2126,"title":{},"body":{"components/LoginComponent.html":{}}}],["getinvoicenumber",{"_index":1633,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getinvoicenumber(id",{"_index":1639,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getinvoices",{"_index":1666,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/InvoicesComponent.html":{}}}],["getisonline",{"_index":2417,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["getlatestproducts",{"_index":1660,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getloginformmodalemail",{"_index":2162,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["getloginformmodalpassword",{"_index":2164,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["getmixlatestproducts",{"_index":2825,"title":{},"body":{"injectables/ProductService.html":{}}}],["getmostsalesproducts",{"_index":1662,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/ProductService.html":{}}}],["getorderdetails",{"_index":2612,"title":{},"body":{"injectables/OrderService.html":{}}}],["getorderdetails(id",{"_index":2617,"title":{},"body":{"injectables/OrderService.html":{}}}],["getorders",{"_index":1668,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/OrdersComponent.html":{}}}],["getpassword",{"_index":3014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["getproductsbyrangedto",{"_index":1600,"title":{"classes/GetProductsByRangeDto.html":{}},"body":{"classes/GetProductsByRangeDto.html":{}}}],["getproductstags",{"_index":3681,"title":{},"body":{"injectables/TagService.html":{}}}],["getprofile",{"_index":1670,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/UserProfileComponent.html":{}}}],["getshopproducts",{"_index":1658,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/ProductService.html":{}}}],["getshopproducts(take",{"_index":2833,"title":{},"body":{"injectables/ProductService.html":{}}}],["getstripedata",{"_index":3421,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["getsubcategories",{"_index":1656,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getsubcategoriesbytagname",{"_index":3552,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["getsubcategoriesbytagname(tagname",{"_index":3564,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["getsubcategoriestags",{"_index":1664,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/TagService.html":{}}}],["getsubcategorybyid",{"_index":3553,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["getsubcategorybyid(id",{"_index":3566,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["getsystemusers",{"_index":4094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":4020,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":523,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":4010,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettotalpurchase",{"_index":1652,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getuser",{"_index":1646,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["getuserbyid",{"_index":4092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getusercart",{"_index":821,"title":{},"body":{"injectables/CartService.html":{}}}],["getuserinvoices",{"_index":2026,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["getusername",{"_index":1648,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/RegisterComponent.html":{}}}],["getuserorders",{"_index":2613,"title":{},"body":{"injectables/OrderService.html":{}}}],["getuserpayments",{"_index":2704,"title":{},"body":{"injectables/PaymentService.html":{}}}],["getuserprofile",{"_index":2922,"title":{},"body":{"injectables/ProfileService.html":{}}}],["global",{"_index":1587,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["global.module",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["global.module.ts",{"_index":3205,"title":{},"body":{"modules/SharedModule.html":{}}}],["globaldata",{"_index":4099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["globaldatadto",{"_index":655,"title":{"classes/GlobalDataDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/GlobalDataDto.html":{}}}],["globaldataservice",{"_index":284,"title":{"injectables/GlobalDataService.html":{}},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["globalmarketdemo",{"_index":4022,"title":{},"body":{"index.html":{}}}],["go",{"_index":3806,"title":{},"body":{"components/UserCartComponent.html":{},"index.html":{}}}],["gradient(180deg",{"_index":2442,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["gradient(to",{"_index":1975,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["graph",{"_index":1902,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["gratis",{"_index":1239,"title":{},"body":{"components/CheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["guard",{"_index":3765,"title":{"guards/UserAuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":3766,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["guest",{"_index":4008,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guide",{"_index":1916,"title":{},"body":{"components/HomeComponent.html":{}}}],["gwivk6y4br/jurlkwcwltvyeymnndujbmr743/fq",{"_index":1128,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["h3",{"_index":2449,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["hammerjs",{"_index":3949,"title":{},"body":{"dependencies.html":{}}}],["hang",{"_index":2782,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["happen",{"_index":1907,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":1968,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["height",{"_index":1966,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["help",{"_index":1947,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["helper.service",{"_index":1170,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["helperservice",{"_index":278,"title":{"injectables/HelperService.html":{}},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["helperservice.hidespinner",{"_index":990,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/SearchComponent.html":{},"components/TagItemsComponent.html":{}}}],["helperservice.showspinner",{"_index":986,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{}}}],["helvetica",{"_index":3440,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["here",{"_index":348,"title":{},"body":{"components/AddToCartComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/FooterComponent.html":{},"components/UserCartComponent.html":{}}}],["hesitate",{"_index":1941,"title":{},"body":{"components/HomeComponent.html":{}}}],["hi",{"_index":1110,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["hidden",{"_index":3428,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["hidedialog",{"_index":1721,"title":{},"body":{"injectables/HelperService.html":{}}}],["hidemodal",{"_index":1722,"title":{},"body":{"injectables/HelperService.html":{}}}],["hidespinner",{"_index":1723,"title":{},"body":{"injectables/HelperService.html":{}}}],["home",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home&nbsp",{"_index":2349,"title":{},"body":{"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":161,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["home.component.css",{"_index":1827,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1828,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":160,"title":{"components/HomeComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["hours",{"_index":1946,"title":{},"body":{"components/HomeComponent.html":{}}}],["hr",{"_index":3522,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["html",{"_index":126,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["htmlinputelement",{"_index":289,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["http",{"_index":2528,"title":{},"body":{"injectables/NotificationsService.html":{},"injectables/SearchService.html":{},"injectables/TokenService.html":{}}}],["http://localhost:4200",{"_index":4032,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"injectables/TokenService.html":{}}}],["httpclientmodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1168,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httperrorresponse(error",{"_index":1181,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["httpevent",{"_index":1166,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":1163,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpinterceptor",{"_index":1167,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["httpparams",{"_index":842,"title":{},"body":{"injectables/CartService.html":{},"injectables/NotificationsService.html":{},"injectables/ProductService.html":{},"injectables/SearchService.html":{}}}],["httprequest",{"_index":1161,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["https://global",{"_index":2414,"title":{},"body":{"components/NoInternetComponent.html":{},"miscellaneous/variables.html":{}}}],["i.id",{"_index":1697,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["i.invoicelayoutmodule",{"_index":552,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["icon",{"_index":2494,"title":{},"body":{"classes/Notification.html":{}}}],["iconcolor",{"_index":3436,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["iconsmodule",{"_index":2285,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["iconstyle",{"_index":3434,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["id",{"_index":12,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityModel.html":{},"classes/AddToCart.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"injectables/GlobalDataService.html":{},"classes/InvoiceModel.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/NotificationEntity.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PaymentModel.html":{},"interfaces/PaymentStateModel.html":{},"classes/ProductModel.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProfileModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UserModel.html":{}}}],["ie",{"_index":1982,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["image",{"_index":803,"title":{},"body":{"classes/CartProductModel.html":{},"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"modules/NgxModule.html":{},"components/ProductDetailsComponent.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["image/${foldername}/${subfolder",{"_index":2941,"title":{},"body":{"injectables/ProfileService.html":{}}}],["imageerrormessage",{"_index":1709,"title":{},"body":{"injectables/HelperService.html":{}}}],["imageform",{"_index":1075,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["imageformdata",{"_index":1710,"title":{},"body":{"injectables/HelperService.html":{}}}],["imagereader",{"_index":1804,"title":{},"body":{"injectables/HelperService.html":{}}}],["imagereader.onerror",{"_index":1811,"title":{},"body":{"injectables/HelperService.html":{}}}],["imagereader.onload",{"_index":1807,"title":{},"body":{"injectables/HelperService.html":{}}}],["imagereader.readasdataurl(file",{"_index":1816,"title":{},"body":{"injectables/HelperService.html":{}}}],["images",{"_index":2804,"title":{},"body":{"classes/ProductModel.html":{},"injectables/ProfileService.html":{},"injectables/SubCategoryService.html":{}}}],["img",{"_index":2468,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["implements",{"_index":61,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"pipes/CategoryPipe.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"pipes/TagPipe.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"injectables/ContactService.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["import('./layouts/auth/auth.module').then(a",{"_index":578,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/cart",{"_index":559,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/category",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/common",{"_index":565,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/dashboard/dashboard.module').then(d",{"_index":547,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/error/error.module').then(e",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/invoice",{"_index":550,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/order",{"_index":562,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/product",{"_index":553,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/shop",{"_index":567,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/sub",{"_index":556,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./layouts/tag",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":2448,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["imports",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["inbox",{"_index":2144,"title":{},"body":{"components/LoginComponent.html":{}}}],["including",{"_index":1240,"title":{},"body":{"components/CheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"classes/CategoryModel.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"classes/TagModel.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["information",{"_index":1429,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/OrderDetailsComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["inherit",{"_index":3524,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["inherited",{"_index":1013,"title":{},"body":{"classes/CategoryModel.html":{},"classes/ProductTagModel.html":{},"classes/SubCategoryModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["initializeprofile",{"_index":3861,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["initializing",{"_index":3797,"title":{},"body":{"components/UserCartComponent.html":{}}}],["injectable",{"_index":613,"title":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"injectables/ContactService.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"injectables/TokenService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interceptors/CheckConnectionInterceptor.html":{},"injectables/ContactService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{}}}],["injectables",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"injectables/ContactService.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"injectables/TokenService.html":{},"overview.html":{}}}],["injector",{"_index":1737,"title":{},"body":{"injectables/HelperService.html":{}}}],["inner",{"_index":362,"title":{},"body":{"components/AddToCartComponent.html":{},"components/NoInternetComponent.html":{},"components/UserCartComponent.html":{}}}],["input",{"_index":104,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/LoginFirstComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["input[type=number",{"_index":367,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["inputs",{"_index":78,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/SearchBarComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["inputsmodule",{"_index":2292,"title":{},"body":{"modules/MdbModule.html":{}}}],["inputsmodule.forroot",{"_index":2305,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["inputtext",{"_index":1121,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["inpututilitiesmodule",{"_index":2287,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["inserttagdto",{"_index":1991,"title":{"classes/InsertTagDto.html":{}},"body":{"classes/InsertTagDto.html":{}}}],["instock",{"_index":2805,"title":{},"body":{"classes/ProductModel.html":{}}}],["integration.module",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"modules/CartLayoutModule.html":{}}}],["integration.module.ts",{"_index":3476,"title":{},"body":{"modules/StripeIntegrationModule.html":{}}}],["integration/components/stripe",{"_index":3396,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["integration/stripe",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/CartLayoutModule.html":{},"modules/StripeIntegrationModule.html":{}}}],["intercept",{"_index":1158,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["intercept(req",{"_index":1160,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interceptor",{"_index":1153,"title":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}},"body":{}}],["interceptors",{"_index":1155,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["interface",{"_index":244,"title":{"interfaces/AuthStateModel.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"interfaces/CheckoutReturnData.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"interfaces/RemoveCartItem.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{}},"body":{"classes/AddToCart.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"interfaces/InvoiceStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["interfaces",{"_index":729,"title":{},"body":{"interfaces/AuthStateModel.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"interfaces/CheckoutReturnData.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"interfaces/RemoveCartItem.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"overview.html":{}}}],["internet",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/NoInternetComponent.html":{}}}],["internet'},{'name",{"_index":177,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["internet.component",{"_index":1513,"title":{},"body":{"modules/ErrorModule.html":{}}}],["internet.component.css",{"_index":2409,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.html",{"_index":2410,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.ts",{"_index":2408,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.ts:12",{"_index":2412,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.ts:21",{"_index":2416,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.ts:23",{"_index":2413,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet.component.ts:30",{"_index":2418,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["internet/no",{"_index":1512,"title":{},"body":{"modules/ErrorModule.html":{},"components/NoInternetComponent.html":{}}}],["invalid",{"_index":163,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["invalidcredentialscomponent",{"_index":162,"title":{"components/InvalidCredentialsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["invoice",{"_index":166,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearInvoicesFromStorage.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"classes/PushInvoice.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["invoice.actions",{"_index":2044,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["invoice.date",{"_index":2088,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoice.duedate",{"_index":2091,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoice.id",{"_index":2085,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoice.number",{"_index":1698,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["invoice.paymentdate",{"_index":2092,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoice.total",{"_index":2086,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoice/invoice.actions",{"_index":925,"title":{},"body":{"injectables/CartState.html":{}}}],["invoice/invoice.model",{"_index":3851,"title":{},"body":{"classes/UserModel.html":{}}}],["invoiceactions",{"_index":924,"title":{},"body":{"injectables/CartState.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/GlobalDataService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"classes/PushInvoice.html":{}}}],["invoiceactions.clearinvoicesfromstorage",{"_index":1690,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/InvoiceState.html":{}}}],["invoiceactions.fetchuserinvoices",{"_index":2046,"title":{},"body":{"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{}}}],["invoiceactions.pushinvoice",{"_index":927,"title":{},"body":{"injectables/CartState.html":{},"injectables/InvoiceState.html":{}}}],["invoiceendpoints",{"_index":4126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invoiceid",{"_index":2594,"title":{},"body":{"classes/OrderModel.html":{},"classes/PaymentModel.html":{}}}],["invoicelayoutcomponent",{"_index":165,"title":{"components/InvoiceLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["invoicelayoutmodule",{"_index":2007,"title":{"modules/InvoiceLayoutModule.html":{}},"body":{"modules/InvoiceLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["invoicelayoutroutes",{"_index":2012,"title":{},"body":{"modules/InvoiceLayoutModule.html":{}}}],["invoicemodel",{"_index":1263,"title":{"classes/InvoiceModel.html":{}},"body":{"interfaces/CheckoutReturnData.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/HelperService.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{},"classes/UserModel.html":{}}}],["invoices",{"_index":1273,"title":{},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"components/NavbarComponent.html":{},"classes/PushInvoice.html":{},"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["invoices'},{'name",{"_index":168,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["invoices(state",{"_index":2039,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["invoices.component.css",{"_index":2053,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoices.component.html",{"_index":2054,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["invoicescomponent",{"_index":167,"title":{"components/InvoicesComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["invoicesdatasource",{"_index":1711,"title":{},"body":{"injectables/HelperService.html":{}}}],["invoiceservice",{"_index":2024,"title":{"injectables/InvoiceService.html":{}},"body":{"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{}}}],["invoicestate",{"_index":1682,"title":{"injectables/InvoiceState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/InvoiceState.html":{},"miscellaneous/variables.html":{}}}],["invoicestatemodel",{"_index":1274,"title":{"interfaces/InvoiceStateModel.html":{}},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["ipsum",{"_index":1571,"title":{},"body":{"components/FooterComponent.html":{}}}],["iraq",{"_index":4162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isallselected",{"_index":3233,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["isauthenticated",{"_index":672,"title":{},"body":{"injectables/AuthState.html":{},"injectables/GlobalDataService.html":{}}}],["isauthenticated(state",{"_index":678,"title":{},"body":{"injectables/AuthState.html":{}}}],["isemailverified",{"_index":3830,"title":{},"body":{"classes/UserModel.html":{}}}],["ishandset",{"_index":2316,"title":{},"body":{"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SidebarComponent.html":{}}}],["isinvalidimagetype",{"_index":1712,"title":{},"body":{"injectables/HelperService.html":{}}}],["isonline",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/NoInternetComponent.html":{}}}],["issent",{"_index":2111,"title":{},"body":{"components/LoginComponent.html":{}}}],["issue",{"_index":3379,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["item",{"_index":2374,"title":{},"body":{"components/NavbarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/UserCartComponent.html":{}}}],["item.interface",{"_index":846,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["item.interface.ts",{"_index":3034,"title":{},"body":{"interfaces/RemoveCartItem.html":{}}}],["item.model",{"_index":2608,"title":{},"body":{"classes/OrderModel.html":{}}}],["item.model.ts",{"_index":2576,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.model.ts:10",{"_index":2581,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.model.ts:2",{"_index":2579,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.model.ts:4",{"_index":2583,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.model.ts:6",{"_index":2582,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.model.ts:8",{"_index":2580,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["item.name",{"_index":3517,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["item.tolowercase().indexof(searchterm.tolowercase",{"_index":1599,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["items",{"_index":352,"title":{},"body":{"components/AddToCartComponent.html":{},"components/OrderDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{}}}],["items'},{'name",{"_index":215,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["items.component",{"_index":3665,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["items.component.css",{"_index":3638,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.html",{"_index":3639,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts",{"_index":3637,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:16",{"_index":3647,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:17",{"_index":3641,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:19",{"_index":3646,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:21",{"_index":3644,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:23",{"_index":3645,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:38",{"_index":3642,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items.component.ts:47",{"_index":3643,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["items/tag",{"_index":3636,"title":{},"body":{"components/TagItemsComponent.html":{},"modules/TagLayoutModule.html":{}}}],["itemtag",{"_index":2094,"title":{"classes/ItemTag.html":{}},"body":{"classes/ItemTag.html":{},"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["itemtag:3",{"_index":2900,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["itemtag:5",{"_index":2901,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["itemtag:7",{"_index":2902,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["jordan",{"_index":2784,"title":{},"body":{"components/ProductDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["jquery",{"_index":3951,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3425,"title":{},"body":{"components/StripeCheckoutComponent.html":{},"dependencies.html":{}}}],["jsonwebtoken",{"_index":3953,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":3741,"title":{},"body":{"injectables/TokenService.html":{}}}],["karma",{"_index":4050,"title":{},"body":{"index.html":{}}}],["key",{"_index":511,"title":{"classes/Key.html":{}},"body":{"modules/AppModule.html":{},"classes/Key.html":{},"classes/Subscriber.html":{}}}],["keys",{"_index":3612,"title":{},"body":{"classes/Subscriber.html":{}}}],["keyup",{"_index":3113,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["later",{"_index":3376,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["latest",{"_index":261,"title":{},"body":{"classes/AddToCart.html":{},"components/ChatbotComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/HomeComponent.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{},"components/UserProfileComponent.html":{}}}],["latestproducts",{"_index":247,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/GlobalDataService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["latestproducts(state",{"_index":2868,"title":{},"body":{"injectables/ProductState.html":{}}}],["layout",{"_index":776,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout'},{'name",{"_index":140,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["layout.component",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layout.component.css",{"_index":777,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout.component.html",{"_index":778,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout.component.ts",{"_index":775,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout.component.ts:12",{"_index":780,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout.component.ts:8",{"_index":779,"title":{},"body":{"components/CartLayoutComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/OrderLayoutComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductLayoutComponent.html":{},"components/ShopLayoutComponent.html":{},"components/TagLayoutComponent.html":{}}}],["layout.component.ts:9",{"_index":3529,"title":{},"body":{"components/SubCategoryLayoutComponent.html":{}}}],["layout.module",{"_index":1338,"title":{},"body":{"modules/ComponentModule.html":{}}}],["layout.module').then(c",{"_index":560,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(i",{"_index":551,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(o",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(p",{"_index":554,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(s",{"_index":568,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(subc",{"_index":557,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module').then(t",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["layout.module.ts",{"_index":785,"title":{},"body":{"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/ShopLayoutModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["layout.routing",{"_index":606,"title":{},"body":{"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/ShopLayoutModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["layout/cart",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{}}}],["layout/category",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{}}}],["layout/common",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{}}}],["layout/invoice",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{}}}],["layout/order",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{}}}],["layout/payment",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{}}}],["layout/product",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{}}}],["layout/shop",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{}}}],["layout/sub",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{}}}],["layout/tag",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{}}}],["layouts/auth/auth.component",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["layouts/cart",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/category",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/common",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ComponentModule.html":{}}}],["layouts/dashboard/dashboard.component",{"_index":462,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/error/error.component",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/invoice",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/order",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/payment",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["layouts/product",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/shop",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/sub",{"_index":473,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["layouts/tag",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["left",{"_index":2353,"title":{},"body":{"components/NavbarComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["legend",{"_index":125,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["length",{"_index":1490,"title":{},"body":{"classes/ErrorMessages.html":{},"components/ShopComponent.html":{}}}],["less",{"_index":1501,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["letter",{"_index":1937,"title":{},"body":{"components/HomeComponent.html":{},"components/NoInternetComponent.html":{}}}],["lex",{"_index":1100,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["lexruntime",{"_index":1108,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["lexstate",{"_index":1101,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["li",{"_index":2481,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["light",{"_index":3815,"title":{},"body":{"components/UserCartComponent.html":{}}}],["linear",{"_index":1974,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["link",{"_index":1579,"title":{},"body":{"components/FooterComponent.html":{}}}],["links",{"_index":1578,"title":{},"body":{"components/FooterComponent.html":{}}}],["list",{"_index":2206,"title":{},"body":{"modules/MaterialModule.html":{},"components/NoInternetComponent.html":{}}}],["literal",{"_index":234,"title":{},"body":{"classes/AddToCart.html":{},"injectables/CartService.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/CreatePaymentDto.html":{},"injectables/HelperService.html":{},"injectables/ProductService.html":{},"classes/RemoveProductsFromCart.html":{},"injectables/SubCategoryService.html":{},"classes/SubscribersNotifications.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":3183,"title":{},"body":{"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["loadchildren",{"_index":546,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcustomproducts",{"_index":3242,"title":{},"body":{"components/ShopComponent.html":{}}}],["loading",{"_index":991,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["loadmore",{"_index":3137,"title":{},"body":{"components/SearchComponent.html":{},"components/ShopComponent.html":{}}}],["loadmoresearch",{"_index":3138,"title":{},"body":{"components/SearchComponent.html":{}}}],["loadproducts",{"_index":3482,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["loadproducts(subcategory",{"_index":3487,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["loadtype",{"_index":3292,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/enumerations.html":{}}}],["loadtype.custom",{"_index":3315,"title":{},"body":{"components/ShopComponent.html":{}}}],["loadtype.shop_products",{"_index":3305,"title":{},"body":{"components/ShopComponent.html":{}}}],["loadtype.sub_category",{"_index":3297,"title":{},"body":{"components/ShopComponent.html":{}}}],["loadtype.tag",{"_index":3307,"title":{},"body":{"components/ShopComponent.html":{}}}],["locale",{"_index":3414,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["localstorage.getitem('loadtype",{"_index":3319,"title":{},"body":{"components/ShopComponent.html":{}}}],["localstorage.setitem('loadtype",{"_index":3296,"title":{},"body":{"components/ShopComponent.html":{}}}],["login",{"_index":172,"title":{"classes/Login.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["login'},{'name",{"_index":170,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["login(authcredentialsdto",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(ctx",{"_index":682,"title":{},"body":{"injectables/AuthState.html":{}}}],["login(this.emaillogindto.value)).subscribe",{"_index":2138,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":2108,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":2109,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.dto.ts",{"_index":1464,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["login.dto.ts:3",{"_index":1465,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["login.dto.ts:5",{"_index":1466,"title":{},"body":{"classes/EmailLoginDto.html":{}}}],["logincomponent",{"_index":169,"title":{"components/LoginComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["loginfirstcomponent",{"_index":171,"title":{"components/LoginFirstComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["loginformmodalemail",{"_index":2157,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["loginformmodalpassword",{"_index":2158,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["loginresponse",{"_index":646,"title":{"classes/LoginResponse.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/LoginResponse.html":{}}}],["loginuser",{"_index":4082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":394,"title":{"classes/Logout.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"injectables/GlobalDataService.html":{},"classes/Login.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/enumerations.html":{}}}],["logout(ctx",{"_index":687,"title":{},"body":{"injectables/AuthState.html":{}}}],["lorem",{"_index":1570,"title":{},"body":{"components/FooterComponent.html":{}}}],["main",{"_index":1428,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["make",{"_index":1243,"title":{},"body":{"components/CheckoutComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["male",{"_index":3999,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management/auth/auth",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AuthStateModel.html":{},"injectables/GlobalDataService.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"injectables/TokenService.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["management/auth/auth.state",{"_index":1672,"title":{},"body":{"injectables/GlobalDataService.html":{},"guards/UserAuthGuard.html":{}}}],["management/auth/auth.state.ts",{"_index":671,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:102",{"_index":689,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:21",{"_index":700,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:26",{"_index":680,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:31",{"_index":701,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:36",{"_index":708,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:41",{"_index":706,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:43",{"_index":677,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:49",{"_index":685,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:63",{"_index":692,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:77",{"_index":698,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:86",{"_index":695,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/auth/auth.state.ts:95",{"_index":704,"title":{},"body":{"injectables/AuthState.html":{}}}],["management/cart/cart.actions",{"_index":311,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["management/cart/cart.actions.ts",{"_index":964,"title":{},"body":{"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["management/cart/cart.actions.ts:13",{"_index":1547,"title":{},"body":{"classes/FetchUserCart.html":{}}}],["management/cart/cart.actions.ts:20",{"_index":1267,"title":{},"body":{"classes/ClearCartContent.html":{}}}],["management/cart/cart.actions.ts:27",{"_index":1379,"title":{},"body":{"classes/CreateUserCart.html":{}}}],["management/cart/cart.actions.ts:34",{"_index":3743,"title":{},"body":{"classes/UpdateCartProductQuantity.html":{}}}],["management/cart/cart.actions.ts:36",{"_index":3744,"title":{},"body":{"classes/UpdateCartProductQuantity.html":{}}}],["management/cart/cart.actions.ts:41",{"_index":3036,"title":{},"body":{"classes/RemoveCartProduct.html":{}}}],["management/cart/cart.actions.ts:43",{"_index":3037,"title":{},"body":{"classes/RemoveCartProduct.html":{}}}],["management/cart/cart.actions.ts:48",{"_index":3746,"title":{},"body":{"classes/UpdateCartState.html":{}}}],["management/cart/cart.actions.ts:50",{"_index":3747,"title":{},"body":{"classes/UpdateCartState.html":{}}}],["management/cart/cart.actions.ts:55",{"_index":1255,"title":{},"body":{"classes/CheckoutOnCart.html":{}}}],["management/cart/cart.actions.ts:57",{"_index":1256,"title":{},"body":{"classes/CheckoutOnCart.html":{}}}],["management/cart/cart.actions.ts:65",{"_index":3038,"title":{},"body":{"classes/RemoveProductsFromCart.html":{}}}],["management/cart/cart.actions.ts:67",{"_index":3039,"title":{},"body":{"classes/RemoveProductsFromCart.html":{}}}],["management/cart/cart.actions.ts:72",{"_index":1258,"title":{},"body":{"classes/CheckoutOnSingleProduct.html":{}}}],["management/cart/cart.actions.ts:74",{"_index":1259,"title":{},"body":{"classes/CheckoutOnSingleProduct.html":{}}}],["management/cart/cart.actions.ts:75",{"_index":1260,"title":{},"body":{"classes/CheckoutOnSingleProduct.html":{}}}],["management/cart/cart.actions.ts:83",{"_index":1268,"title":{},"body":{"classes/ClearCartFromStorage.html":{}}}],["management/cart/cart.state",{"_index":1693,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/cart/cart.state.ts",{"_index":870,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:110",{"_index":889,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:127",{"_index":883,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:136",{"_index":892,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:151",{"_index":910,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:162",{"_index":898,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:37",{"_index":877,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:42",{"_index":886,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:47",{"_index":904,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:58",{"_index":901,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:70",{"_index":895,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:81",{"_index":881,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:88",{"_index":913,"title":{},"body":{"injectables/CartState.html":{}}}],["management/cart/cart.state.ts:99",{"_index":907,"title":{},"body":{"injectables/CartState.html":{}}}],["management/category/category.actions",{"_index":3391,"title":{},"body":{"components/SidebarComponent.html":{}}}],["management/category/category.actions.ts",{"_index":1071,"title":{},"body":{"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{}}}],["management/category/category.actions.ts:10",{"_index":1515,"title":{},"body":{"classes/FetchAllCategories.html":{}}}],["management/category/category.actions.ts:17",{"_index":1517,"title":{},"body":{"classes/FetchCategoryById.html":{}}}],["management/category/category.actions.ts:19",{"_index":1518,"title":{},"body":{"classes/FetchCategoryById.html":{}}}],["management/category/category.actions.ts:25",{"_index":1269,"title":{},"body":{"classes/ClearCategory.html":{}}}],["management/category/category.state",{"_index":1675,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/category/category.state.ts",{"_index":1048,"title":{},"body":{"injectables/CategoryState.html":{}}}],["management/category/category.state.ts:17",{"_index":1052,"title":{},"body":{"injectables/CategoryState.html":{}}}],["management/category/category.state.ts:22",{"_index":1055,"title":{},"body":{"injectables/CategoryState.html":{}}}],["management/category/category.state.ts:27",{"_index":1062,"title":{},"body":{"injectables/CategoryState.html":{}}}],["management/category/category.state.ts:39",{"_index":1059,"title":{},"body":{"injectables/CategoryState.html":{}}}],["management/invoice/invoice.actions",{"_index":1686,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{}}}],["management/invoice/invoice.actions.ts",{"_index":1271,"title":{},"body":{"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["management/invoice/invoice.actions.ts:10",{"_index":1548,"title":{},"body":{"classes/FetchUserInvoices.html":{}}}],["management/invoice/invoice.actions.ts:17",{"_index":2991,"title":{},"body":{"classes/PushInvoice.html":{}}}],["management/invoice/invoice.actions.ts:19",{"_index":2992,"title":{},"body":{"classes/PushInvoice.html":{}}}],["management/invoice/invoice.actions.ts:24",{"_index":1522,"title":{},"body":{"classes/FetchInvoiceById.html":{}}}],["management/invoice/invoice.actions.ts:26",{"_index":1523,"title":{},"body":{"classes/FetchInvoiceById.html":{}}}],["management/invoice/invoice.actions.ts:31",{"_index":1272,"title":{},"body":{"classes/ClearInvoicesFromStorage.html":{}}}],["management/invoice/invoice.state",{"_index":1683,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/invoice/invoice.state.ts",{"_index":2030,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/invoice/invoice.state.ts:21",{"_index":2032,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/invoice/invoice.state.ts:26",{"_index":2040,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/invoice/invoice.state.ts:32",{"_index":2038,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/invoice/invoice.state.ts:43",{"_index":2043,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/invoice/invoice.state.ts:50",{"_index":2035,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["management/order/order.actions",{"_index":1687,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{}}}],["management/order/order.actions.ts",{"_index":755,"title":{},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["management/order/order.actions.ts:11",{"_index":1549,"title":{},"body":{"classes/FetchUserOrders.html":{}}}],["management/order/order.actions.ts:18",{"_index":1527,"title":{},"body":{"classes/FetchOrderById.html":{}}}],["management/order/order.actions.ts:20",{"_index":1528,"title":{},"body":{"classes/FetchOrderById.html":{}}}],["management/order/order.actions.ts:26",{"_index":3748,"title":{},"body":{"classes/UpdateOrder.html":{}}}],["management/order/order.actions.ts:28",{"_index":3749,"title":{},"body":{"classes/UpdateOrder.html":{}}}],["management/order/order.actions.ts:33",{"_index":2994,"title":{},"body":{"classes/PushOrder.html":{}}}],["management/order/order.actions.ts:35",{"_index":2995,"title":{},"body":{"classes/PushOrder.html":{}}}],["management/order/order.actions.ts:40",{"_index":757,"title":{},"body":{"classes/CancelOrder.html":{}}}],["management/order/order.actions.ts:42",{"_index":758,"title":{},"body":{"classes/CancelOrder.html":{}}}],["management/order/order.actions.ts:47",{"_index":1277,"title":{},"body":{"classes/ClearOrdersFromStorage.html":{}}}],["management/order/order.state",{"_index":1685,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/order/order.state.ts",{"_index":2626,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:23",{"_index":2628,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:28",{"_index":2638,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:33",{"_index":2636,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:44",{"_index":2644,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:55",{"_index":2641,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:62",{"_index":2634,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/order/order.state.ts:69",{"_index":2631,"title":{},"body":{"injectables/OrderState.html":{}}}],["management/payment/payment.actions",{"_index":1688,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{}}}],["management/payment/payment.actions.ts",{"_index":1279,"title":{},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["management/payment/payment.actions.ts:10",{"_index":1550,"title":{},"body":{"classes/FetchUserPayments.html":{}}}],["management/payment/payment.actions.ts:17",{"_index":2997,"title":{},"body":{"classes/PushPayment.html":{}}}],["management/payment/payment.actions.ts:19",{"_index":2998,"title":{},"body":{"classes/PushPayment.html":{}}}],["management/payment/payment.actions.ts:24",{"_index":1529,"title":{},"body":{"classes/FetchPaymentById.html":{}}}],["management/payment/payment.actions.ts:26",{"_index":1530,"title":{},"body":{"classes/FetchPaymentById.html":{}}}],["management/payment/payment.actions.ts:31",{"_index":3191,"title":{},"body":{"classes/SetCustomerToken.html":{}}}],["management/payment/payment.actions.ts:33",{"_index":3192,"title":{},"body":{"classes/SetCustomerToken.html":{}}}],["management/payment/payment.actions.ts:38",{"_index":1280,"title":{},"body":{"classes/ClearPaymentsFromStorage.html":{}}}],["management/payment/payment.state.ts",{"_index":2711,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:24",{"_index":2713,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:29",{"_index":2721,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:34",{"_index":2716,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:41",{"_index":2724,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:48",{"_index":2727,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/payment/payment.state.ts:57",{"_index":2719,"title":{},"body":{"injectables/PaymentState.html":{}}}],["management/product/product.actions",{"_index":314,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/ShopComponent.html":{}}}],["management/product/product.actions.ts",{"_index":226,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["management/product/product.actions.ts:12",{"_index":1538,"title":{},"body":{"classes/FetchShopProducts.html":{}}}],["management/product/product.actions.ts:14",{"_index":1539,"title":{},"body":{"classes/FetchShopProducts.html":{}}}],["management/product/product.actions.ts:19",{"_index":3757,"title":{},"body":{"classes/UpdateShopProducts.html":{}}}],["management/product/product.actions.ts:21",{"_index":3758,"title":{},"body":{"classes/UpdateShopProducts.html":{}}}],["management/product/product.actions.ts:26",{"_index":1526,"title":{},"body":{"classes/FetchMostSalesProducts.html":{}}}],["management/product/product.actions.ts:33",{"_index":1524,"title":{},"body":{"classes/FetchLatestProducts.html":{}}}],["management/product/product.actions.ts:40",{"_index":1534,"title":{},"body":{"classes/FetchProductsByTagName.html":{}}}],["management/product/product.actions.ts:42",{"_index":1535,"title":{},"body":{"classes/FetchProductsByTagName.html":{}}}],["management/product/product.actions.ts:47",{"_index":1531,"title":{},"body":{"classes/FetchProductById.html":{}}}],["management/product/product.actions.ts:49",{"_index":1532,"title":{},"body":{"classes/FetchProductById.html":{}}}],["management/product/product.actions.ts:54",{"_index":1525,"title":{},"body":{"classes/FetchMixLatestProducts.html":{}}}],["management/product/product.actions.ts:61",{"_index":1520,"title":{},"body":{"classes/FetchCustomProducts.html":{}}}],["management/product/product.actions.ts:63",{"_index":1521,"title":{},"body":{"classes/FetchCustomProducts.html":{}}}],["management/product/product.actions.ts:68",{"_index":235,"title":{},"body":{"classes/AddToCart.html":{}}}],["management/product/product.actions.ts:70",{"_index":236,"title":{},"body":{"classes/AddToCart.html":{}}}],["management/product/product.actions.ts:76",{"_index":1286,"title":{},"body":{"classes/ClearProducts.html":{}}}],["management/product/product.state",{"_index":1679,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/product/product.state.ts",{"_index":2846,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:101",{"_index":2861,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:113",{"_index":2855,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:30",{"_index":2849,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:37",{"_index":2873,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:42",{"_index":2869,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:47",{"_index":2871,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:52",{"_index":2867,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:63",{"_index":2876,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:70",{"_index":2864,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:81",{"_index":2858,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/product/product.state.ts:92",{"_index":2852,"title":{},"body":{"injectables/ProductState.html":{}}}],["management/profile/profile.actions",{"_index":1410,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"injectables/GlobalDataService.html":{},"components/UserProfileComponent.html":{}}}],["management/profile/profile.actions.ts",{"_index":1074,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["management/profile/profile.actions.ts:10",{"_index":1381,"title":{},"body":{"classes/CreateUserProfile.html":{}}}],["management/profile/profile.actions.ts:12",{"_index":1382,"title":{},"body":{"classes/CreateUserProfile.html":{}}}],["management/profile/profile.actions.ts:17",{"_index":1551,"title":{},"body":{"classes/FetchUserProfile.html":{}}}],["management/profile/profile.actions.ts:24",{"_index":1460,"title":{},"body":{"classes/EditProfile.html":{}}}],["management/profile/profile.actions.ts:26",{"_index":1461,"title":{},"body":{"classes/EditProfile.html":{}}}],["management/profile/profile.actions.ts:31",{"_index":3193,"title":{},"body":{"classes/SetProfileImage.html":{}}}],["management/profile/profile.actions.ts:33",{"_index":3194,"title":{},"body":{"classes/SetProfileImage.html":{}}}],["management/profile/profile.actions.ts:38",{"_index":1078,"title":{},"body":{"classes/ChangeProfileImage.html":{}}}],["management/profile/profile.actions.ts:40",{"_index":1079,"title":{},"body":{"classes/ChangeProfileImage.html":{}}}],["management/profile/profile.actions.ts:45",{"_index":1458,"title":{},"body":{"classes/DeleteProfileImage.html":{}}}],["management/profile/profile.actions.ts:52",{"_index":1287,"title":{},"body":{"classes/ClearProfileData.html":{}}}],["management/profile/profile.state",{"_index":1674,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/profile/profile.state.ts",{"_index":2947,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:24",{"_index":2949,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:29",{"_index":2969,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:34",{"_index":2958,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:46",{"_index":2955,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:53",{"_index":2964,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:64",{"_index":2967,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:75",{"_index":2972,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:86",{"_index":2952,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/profile/profile.state.ts:97",{"_index":2961,"title":{},"body":{"injectables/ProfileState.html":{}}}],["management/states",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["management/states.ts",{"_index":4198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["management/sub",{"_index":1289,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["management/tag/tag.actions",{"_index":3288,"title":{},"body":{"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/TagsComponent.html":{}}}],["management/tag/tag.actions.ts",{"_index":1302,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"interfaces/TagStateModel.html":{}}}],["management/tag/tag.actions.ts:11",{"_index":1542,"title":{},"body":{"classes/FetchSubCategoriesTags.html":{}}}],["management/tag/tag.actions.ts:18",{"_index":1536,"title":{},"body":{"classes/FetchProductsTags.html":{}}}],["management/tag/tag.actions.ts:25",{"_index":1545,"title":{},"body":{"classes/FetchTagById.html":{}}}],["management/tag/tag.actions.ts:27",{"_index":1546,"title":{},"body":{"classes/FetchTagById.html":{}}}],["management/tag/tag.actions.ts:33",{"_index":1303,"title":{},"body":{"classes/ClearTags.html":{}}}],["management/tag/tag.state",{"_index":1681,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["management/tag/tag.state.ts",{"_index":3688,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:22",{"_index":3690,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:27",{"_index":3703,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:32",{"_index":3701,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:37",{"_index":3699,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:48",{"_index":3696,"title":{},"body":{"injectables/TagState.html":{}}}],["management/tag/tag.state.ts:59",{"_index":3693,"title":{},"body":{"injectables/TagState.html":{}}}],["map",{"_index":2337,"title":{},"body":{"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{}}}],["map((event",{"_index":3114,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["map(result",{"_index":2327,"title":{},"body":{"components/NavbarComponent.html":{}}}],["margin",{"_index":365,"title":{},"body":{"components/AddToCartComponent.html":{},"components/NoInternetComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/UserCartComponent.html":{}}}],["market",{"_index":1588,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NoInternetComponent.html":{}}}],["marketing",{"_index":1901,"title":{},"body":{"components/HomeComponent.html":{}}}],["mastercard",{"_index":1929,"title":{},"body":{"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mat",{"_index":1250,"title":{},"body":{"components/CheckoutComponent.html":{},"components/NavbarComponent.html":{},"components/ShopComponent.html":{}}}],["matautocomplete",{"_index":3081,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["matautocompletemodule",{"_index":2208,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbadge]=\"gdservice.cart.cartproducts.length.tostring",{"_index":2340,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matbadgecolor=\"accent",{"_index":2348,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matbadgemodule",{"_index":2258,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbadgeoverlap=\"false",{"_index":2345,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matbadgeposition=\"above",{"_index":2346,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matbadgesize=\"medium",{"_index":2347,"title":{},"body":{"components/NavbarComponent.html":{}}}],["matbottomsheetmodule",{"_index":2263,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":2221,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttontogglemodule",{"_index":2181,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":2213,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1504,"title":{},"body":{"classes/ErrorMessages.html":{},"components/ResetPasswordComponent.html":{}}}],["match.validator",{"_index":3053,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["match.validator.ts",{"_index":4014,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matcheckboxmodule",{"_index":2210,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":28,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":4018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchipsmodule",{"_index":2251,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":2197,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1732,"title":{},"body":{"injectables/HelperService.html":{}}}],["matdialogmodule",{"_index":2266,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matdividermodule",{"_index":2267,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["materialmodule",{"_index":2175,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["materialmodules",{"_index":2269,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":2195,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":2179,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":2204,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":2232,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":2193,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":2234,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":2202,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matnativedatemodule",{"_index":2253,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matpaginator",{"_index":2065,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{}}}],["matpaginatormodule",{"_index":2192,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":2186,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":2244,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matradiomodule",{"_index":2249,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matripplemodule",{"_index":2254,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matselectmodule",{"_index":2230,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenav",{"_index":2332,"title":{},"body":{"components/NavbarComponent.html":{},"components/SearchBarComponent.html":{},"components/SidebarComponent.html":{}}}],["matsidenavmodule",{"_index":2238,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidermodule",{"_index":2256,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matslidetogglemodule",{"_index":2188,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1739,"title":{},"body":{"injectables/HelperService.html":{}}}],["matsnackbarmodule",{"_index":2201,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsort",{"_index":2068,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["matsortmodule",{"_index":2207,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matsteppermodule",{"_index":2240,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabledatasource",{"_index":1764,"title":{},"body":{"injectables/HelperService.html":{}}}],["mattablemodule",{"_index":2212,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":2217,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["matter",{"_index":1945,"title":{},"body":{"components/HomeComponent.html":{}}}],["mattoolbarmodule",{"_index":2177,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":2219,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["mattreemodule",{"_index":2184,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1233,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/NoInternetComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["maximum",{"_index":370,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["maxlength",{"_index":1484,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["maxlength(field",{"_index":1489,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["maxpush",{"_index":804,"title":{},"body":{"classes/CartProductModel.html":{}}}],["md",{"_index":2293,"title":{},"body":{"modules/MdbModule.html":{},"dependencies.html":{}}}],["mdb",{"_index":1987,"title":{},"body":{"components/HomeComponent.html":{}}}],["mdbbootstrapmodule",{"_index":2272,"title":{},"body":{"modules/MdbModule.html":{}}}],["mdbbootstrapmodule.forroot",{"_index":2295,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["mdbbtn",{"_index":3812,"title":{},"body":{"components/UserCartComponent.html":{}}}],["mdbmodule",{"_index":2270,"title":{"modules/MdbModule.html":{}},"body":{"modules/MdbModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["mdbmodules",{"_index":2294,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["mdbrootmodule",{"_index":2275,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["mdbwaveseffect>update",{"_index":3816,"title":{},"body":{"components/UserCartComponent.html":{}}}],["mean",{"_index":3817,"title":{},"body":{"components/UserCartComponent.html":{}}}],["media",{"_index":1245,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/NoInternetComponent.html":{}}}],["menu",{"_index":2339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":377,"title":{"classes/Message.html":{}},"body":{"components/AppComponent.html":{},"components/ChatbotComponent.html":{},"classes/ContactMessageDto.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/StripeCheckoutComponent.html":{}}}],["message(this.lexstate",{"_index":1117,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["message(this.userinput",{"_index":1143,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["message.dto",{"_index":1354,"title":{},"body":{"injectables/ContactService.html":{}}}],["message.dto.ts",{"_index":1344,"title":{},"body":{"classes/ContactMessageDto.html":{}}}],["message.dto.ts:2",{"_index":1345,"title":{},"body":{"classes/ContactMessageDto.html":{}}}],["message.dto.ts:3",{"_index":1347,"title":{},"body":{"classes/ContactMessageDto.html":{}}}],["message.dto.ts:4",{"_index":1346,"title":{},"body":{"classes/ContactMessageDto.html":{}}}],["messages",{"_index":1102,"title":{},"body":{"components/ChatbotComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["messages.ts",{"_index":1483,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.ts:10",{"_index":1491,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.ts:14",{"_index":1498,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.ts:18",{"_index":1495,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.ts:2",{"_index":1500,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messages.ts:6",{"_index":1493,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["messageuri",{"_index":4145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":63,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"pipes/CategoryPipe.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"pipes/TagPipe.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["method.enum",{"_index":1368,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/PaymentModel.html":{},"components/StripeCheckoutComponent.html":{}}}],["method.enum.ts",{"_index":3980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":73,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"components/CartLayoutComponent.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"injectables/ContactService.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["middle",{"_index":2487,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["min",{"_index":1247,"title":{},"body":{"components/CheckoutComponent.html":{},"components/ShopComponent.html":{}}}],["minlength",{"_index":1485,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["minlength(field",{"_index":1492,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["miscellaneous",{"_index":3971,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":266,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["modalmodule",{"_index":2276,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{}}}],["modalmodule.forroot",{"_index":2296,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["modalref",{"_index":1713,"title":{},"body":{"injectables/HelperService.html":{},"components/InvalidCredentialsComponent.html":{}}}],["modals",{"_index":1792,"title":{},"body":{"injectables/HelperService.html":{}}}],["modalservice",{"_index":1733,"title":{},"body":{"injectables/HelperService.html":{}}}],["models/auth/user.model",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["models/cart/cart",{"_index":3795,"title":{},"body":{"components/UserCartComponent.html":{}}}],["models/cart/cart.model",{"_index":843,"title":{},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["models/categories/category.model",{"_index":983,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ClearCategory.html":{},"classes/FetchAllCategories.html":{},"classes/FetchCategoryById.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{}}}],["models/categories/sub",{"_index":1294,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{}}}],["models/chatbot/message",{"_index":1115,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["models/invoice/invoice.model",{"_index":1265,"title":{},"body":{"interfaces/CheckoutReturnData.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["models/notifications/classes/notification",{"_index":2531,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["models/orders/order.model",{"_index":761,"title":{},"body":{"classes/CancelOrder.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/HelperService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["models/payments/payment.model",{"_index":1266,"title":{},"body":{"interfaces/CheckoutReturnData.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["models/products/product",{"_index":1308,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["models/products/product.model",{"_index":238,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/HelperService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"classes/UpdateShopProducts.html":{}}}],["models/profile/profile.model",{"_index":1082,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/GlobalDataService.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["models/tag/tag.model",{"_index":3677,"title":{},"body":{"pipes/TagPipe.html":{},"injectables/TagService.html":{}}}],["module",{"_index":425,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"overview.html":{}}}],["modules",{"_index":427,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/file.module",{"_index":3221,"title":{},"body":{"modules/SharedModule.html":{}}}],["modules/material.module",{"_index":3219,"title":{},"body":{"modules/SharedModule.html":{}}}],["modules/mdb.module",{"_index":3224,"title":{},"body":{"modules/SharedModule.html":{}}}],["modules/ngx.module",{"_index":3220,"title":{},"body":{"modules/SharedModule.html":{}}}],["modules/stripe",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/CartLayoutModule.html":{}}}],["mon",{"_index":3822,"title":{},"body":{"components/UserCartComponent.html":{}}}],["more",{"_index":1503,"title":{},"body":{"classes/ErrorMessages.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"index.html":{}}}],["more_vert",{"_index":2690,"title":{},"body":{"components/OrdersComponent.html":{}}}],["morooco",{"_index":4166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostsalesproducts",{"_index":248,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/GlobalDataService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["mostsalesproducts(state",{"_index":2870,"title":{},"body":{"injectables/ProductState.html":{}}}],["move",{"_index":2435,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["moz",{"_index":368,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["multi",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["mustmatch",{"_index":1486,"title":{},"body":{"classes/ErrorMessages.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/functions.html":{}}}],["mustmatch('newpassword",{"_index":3062,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["mustmatch(controlname",{"_index":4017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mustmatch(fields",{"_index":1494,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["name",{"_index":13,"title":{},"body":{"classes/AbstractCategory.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearProducts.html":{},"classes/ClearSubCategory.html":{},"components/CommonLayoutComponent.html":{},"injectables/ContactService.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name/${searchvalue",{"_index":1046,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/SubCategoryService.html":{}}}],["name/${tagname",{"_index":3578,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["namespace",{"_index":249,"title":{},"body":{"classes/AddToCart.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{}}}],["nav",{"_index":2373,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":2312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":175,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["navbar.component.css",{"_index":2313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":2314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":1335,"title":{},"body":{"modules/ComponentModule.html":{}}}],["navbarcomponent",{"_index":174,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["navbarmodule",{"_index":2282,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":4031,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":524,"title":{},"body":{"classes/AppPage.html":{}}}],["navigatetocategorydetails",{"_index":3139,"title":{},"body":{"components/SearchComponent.html":{}}}],["navigatetocategorydetails(category",{"_index":3146,"title":{},"body":{"components/SearchComponent.html":{}}}],["navigatetoorder",{"_index":2665,"title":{},"body":{"components/OrdersComponent.html":{}}}],["navigatetoorder(order",{"_index":2668,"title":{},"body":{"components/OrdersComponent.html":{}}}],["navigatetosubcategory",{"_index":1634,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/SidebarComponent.html":{},"components/TagItemsComponent.html":{}}}],["navigatetosubcategory(category",{"_index":3387,"title":{},"body":{"components/SidebarComponent.html":{}}}],["navigatetosubcategory(subcategory",{"_index":1642,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/TagItemsComponent.html":{}}}],["nbsp",{"_index":588,"title":{},"body":{"components/AuthComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["nbsp;maximum",{"_index":350,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["needs",{"_index":1896,"title":{},"body":{"components/HomeComponent.html":{}}}],["neue",{"_index":3441,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["new",{"_index":103,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AppComponent.html":{},"injectables/CartService.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"injectables/ProductService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["newpassword",{"_index":3057,"title":{},"body":{"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{}}}],["newpasswordtoken",{"_index":3044,"title":{},"body":{"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{}}}],["newquantity",{"_index":840,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["newquantity.tostring",{"_index":860,"title":{},"body":{"injectables/CartService.html":{}}}],["news",{"_index":1936,"title":{},"body":{"components/HomeComponent.html":{}}}],["newsletter",{"_index":1878,"title":{},"body":{"components/HomeComponent.html":{}}}],["newsubscriber",{"_index":4141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":1162,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["next.handle(req",{"_index":1184,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["next.handle(req).pipe",{"_index":1477,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(tokenreq",{"_index":3734,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["ng",{"_index":3212,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":1557,"title":{},"body":{"modules/FileModule.html":{},"injectables/HelperService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["ngbdropdownmodule",{"_index":3209,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbmodule",{"_index":3210,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngbpaginationmodule",{"_index":3211,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngdocheck",{"_index":3483,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["ngmodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/FileModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PaymentLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["ngondestroy",{"_index":1393,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["ngoninit",{"_index":76,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["ngx",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CheckoutComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/LoginComponent.html":{},"modules/NgxModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"dependencies.html":{}}}],["ngxcomponents",{"_index":2402,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["ngximagezoommodule",{"_index":2401,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["ngxmodule",{"_index":2387,"title":{"modules/NgxModule.html":{}},"body":{"modules/NgxModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["ngxs/hmr",{"_index":3926,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":3928,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":471,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":306,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"components/CreateUserProfileComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["ngxs/store/operators",{"_index":923,"title":{},"body":{"injectables/CartState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/TagState.html":{}}}],["ngxsmodule",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot(states",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnermodule",{"_index":2396,"title":{},"body":{"modules/NgxModule.html":{}}}],["ngxspinnerservice",{"_index":1736,"title":{},"body":{"injectables/HelperService.html":{}}}],["ngxsstoragepluginmodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsstoragepluginmodule.forroot",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxstripemodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"modules/StripeIntegrationModule.html":{}}}],["ngxstripemodule.forroot(environment.stripepublishedkey",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["nointernetcomponent",{"_index":176,"title":{"components/NoInternetComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["none",{"_index":364,"title":{},"body":{"components/AddToCartComponent.html":{},"components/NoInternetComponent.html":{},"components/ShopComponent.html":{},"components/UserCartComponent.html":{}}}],["normal",{"_index":1182,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["note",{"_index":349,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["notification",{"_index":2492,"title":{"classes/Notification.html":{}},"body":{"classes/Notification.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["notification.ts",{"_index":3620,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:11",{"_index":3623,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:13",{"_index":3630,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:15",{"_index":3628,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:17",{"_index":3627,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:3",{"_index":3626,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:5",{"_index":3629,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:7",{"_index":3624,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notification.ts:9",{"_index":3625,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notificationdata",{"_index":2498,"title":{"classes/NotificationData.html":{}},"body":{"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/SubscribersNotifications.html":{}}}],["notificationendpoints",{"_index":4138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationentity",{"_index":2508,"title":{"classes/NotificationEntity.html":{}},"body":{"classes/NotificationEntity.html":{}}}],["notificationid",{"_index":3621,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["notificationpayload",{"_index":2517,"title":{"classes/NotificationPayload.html":{}},"body":{"classes/NotificationPayload.html":{}}}],["notificationpayloaddto",{"_index":2520,"title":{"classes/NotificationPayloadDto.html":{}},"body":{"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{}}}],["notifications",{"_index":1938,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["notificationsservice",{"_index":1835,"title":{"injectables/NotificationsService.html":{}},"body":{"components/HomeComponent.html":{},"injectables/NotificationsService.html":{}}}],["notifyservice",{"_index":1834,"title":{},"body":{"components/HomeComponent.html":{}}}],["notvalidfield",{"_index":1487,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["notvalidfield(field",{"_index":1497,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["now",{"_index":1877,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["null",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceState.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"classes/ProductModel.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["number",{"_index":22,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"interfaces/CategoryStateModel.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateUserCart.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"classes/InsertTagDto.html":{},"classes/InvoiceModel.html":{},"interfaces/InvoiceStateModel.html":{},"classes/ItemTag.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"interfaces/OrderStateModel.html":{},"classes/PaymentModel.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{}}}],["o.orderlayoutmodule",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["object",{"_index":295,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":721,"title":{},"body":{"injectables/AuthState.html":{},"components/ShopComponent.html":{},"components/UserCartComponent.html":{}}}],["observable",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"interceptors/CheckConnectionInterceptor.html":{},"injectables/ContactService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"components/NavbarComponent.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"components/SearchBarComponent.html":{},"injectables/SearchService.html":{},"components/SidebarComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{}}}],["observersmodule",{"_index":2236,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":1138,"title":{},"body":{"components/ChatbotComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["ofactiondispatched",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["offers",{"_index":1939,"title":{},"body":{"components/HomeComponent.html":{}}}],["offline",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["offlineevent",{"_index":1714,"title":{},"body":{"injectables/HelperService.html":{}}}],["okay",{"_index":1879,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["old",{"_index":1972,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["onadd",{"_index":280,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["onadd(cartproduct",{"_index":3780,"title":{},"body":{"components/UserCartComponent.html":{}}}],["ondestroy",{"_index":1386,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["onimageselect",{"_index":1724,"title":{},"body":{"injectables/HelperService.html":{},"components/UserProfileComponent.html":{}}}],["onimageselect(event",{"_index":1746,"title":{},"body":{"injectables/HelperService.html":{},"components/UserProfileComponent.html":{}}}],["oninit",{"_index":62,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["online",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["onlineevent",{"_index":1715,"title":{},"body":{"injectables/HelperService.html":{}}}],["onlinestatus",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["onsubcategoryselect",{"_index":3243,"title":{},"body":{"components/ShopComponent.html":{}}}],["onsubcategoryselect(subcategory",{"_index":3260,"title":{},"body":{"components/ShopComponent.html":{}}}],["onsubtract",{"_index":281,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["onsubtract(cartproduct",{"_index":3783,"title":{},"body":{"components/UserCartComponent.html":{}}}],["ontagselect",{"_index":3484,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["ontagselect(producttag",{"_index":3491,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["oops",{"_index":3802,"title":{},"body":{"components/UserCartComponent.html":{}}}],["openmodal",{"_index":1725,"title":{},"body":{"injectables/HelperService.html":{}}}],["openmodal(template",{"_index":1749,"title":{},"body":{"injectables/HelperService.html":{}}}],["opensnackbar",{"_index":1726,"title":{},"body":{"injectables/HelperService.html":{}}}],["opensnackbar(message",{"_index":1751,"title":{},"body":{"injectables/HelperService.html":{}}}],["opera",{"_index":357,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["option",{"_index":3130,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["optional",{"_index":85,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/CancelOrder.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"classes/ChangeProfileImage.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"injectables/ContactService.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/EditProfile.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"classes/ProductsCustomFilterDto.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":179,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearOrdersFromStorage.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"classes/PushOrder.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateOrder.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["order.actions",{"_index":2645,"title":{},"body":{"injectables/OrderState.html":{}}}],["order.billingaddress.address1",{"_index":2559,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.address2",{"_index":2560,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.city",{"_index":2562,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.comments",{"_index":2565,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.country",{"_index":2561,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.email",{"_index":2558,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.fullname",{"_index":2557,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.phone",{"_index":2564,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.billingaddress.postalcode",{"_index":2563,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["order.createdat",{"_index":2553,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{}}}],["order.id",{"_index":2656,"title":{},"body":{"injectables/OrderState.html":{},"components/OrdersComponent.html":{}}}],["order.shipmentdate",{"_index":2555,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{}}}],["order.status",{"_index":2552,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{}}}],["order.updatedat",{"_index":2688,"title":{},"body":{"components/OrdersComponent.html":{}}}],["order/order.actions",{"_index":928,"title":{},"body":{"injectables/CartState.html":{}}}],["orderactions",{"_index":766,"title":{},"body":{"classes/CancelOrder.html":{},"injectables/CartState.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["orderactions.cancelorder",{"_index":2649,"title":{},"body":{"injectables/OrderState.html":{}}}],["orderactions.clearordersfromstorage",{"_index":1691,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/OrderState.html":{}}}],["orderactions.fetchuserorders",{"_index":2128,"title":{},"body":{"components/LoginComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{}}}],["orderactions.pushorder",{"_index":929,"title":{},"body":{"injectables/CartState.html":{},"injectables/OrderState.html":{}}}],["orderactions.updateorder",{"_index":2646,"title":{},"body":{"injectables/OrderState.html":{}}}],["orderdatasource",{"_index":1716,"title":{},"body":{"injectables/HelperService.html":{}}}],["orderdetailscomponent",{"_index":178,"title":{"components/OrderDetailsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["orderdto",{"_index":762,"title":{"classes/OrderDto.html":{}},"body":{"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserOrders.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{}}}],["orderendpoints",{"_index":4129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderid",{"_index":2577,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["ordering",{"_index":1923,"title":{},"body":{"components/HomeComponent.html":{}}}],["orderitem.quantity",{"_index":2570,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["orderitemmodel",{"_index":2574,"title":{"classes/OrderItemModel.html":{}},"body":{"classes/OrderItemModel.html":{},"classes/OrderModel.html":{}}}],["orderitems",{"_index":2595,"title":{},"body":{"classes/OrderModel.html":{}}}],["orderitemsproducts",{"_index":2537,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["orderitemsproducts[i].currentprice",{"_index":2569,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["orderitemsproducts[i].name",{"_index":2566,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["orderlayoutcomponent",{"_index":180,"title":{"components/OrderLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["orderlayoutmodule",{"_index":2585,"title":{"modules/OrderLayoutModule.html":{}},"body":{"modules/OrderLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["orderlayoutroutes",{"_index":2591,"title":{},"body":{"modules/OrderLayoutModule.html":{}}}],["ordermodel",{"_index":760,"title":{"classes/OrderModel.html":{}},"body":{"classes/CancelOrder.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/HelperService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{},"classes/UserModel.html":{}}}],["orders",{"_index":765,"title":{},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["orders'},{'name",{"_index":182,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["orders(state",{"_index":2637,"title":{},"body":{"injectables/OrderState.html":{}}}],["orders.component.css",{"_index":2663,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orders.component.html",{"_index":2664,"title":{},"body":{"components/OrdersComponent.html":{}}}],["orders/order.model",{"_index":3849,"title":{},"body":{"classes/UserModel.html":{}}}],["orderscomponent",{"_index":181,"title":{"components/OrdersComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["orderservice",{"_index":2538,"title":{"injectables/OrderService.html":{}},"body":{"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{}}}],["orderstate",{"_index":1684,"title":{"injectables/OrderState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/OrderState.html":{},"miscellaneous/variables.html":{}}}],["orderstatemodel",{"_index":764,"title":{"interfaces/OrderStateModel.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["orderstatus",{"_index":2603,"title":{},"body":{"classes/OrderModel.html":{},"components/OrdersComponent.html":{},"miscellaneous/enumerations.html":{}}}],["organize",{"_index":1569,"title":{},"body":{"components/FooterComponent.html":{}}}],["ourselves",{"_index":1915,"title":{},"body":{"components/HomeComponent.html":{}}}],["out",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":359,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["outline",{"_index":2458,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["output",{"_index":1409,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["outputs",{"_index":1394,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["over",{"_index":347,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["overlaymodule",{"_index":2199,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":4057,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.id",{"_index":2777,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["p.productlayoutmodule",{"_index":555,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["p256dh",{"_index":2102,"title":{},"body":{"classes/Key.html":{}}}],["package",{"_index":3912,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":2476,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["pages/auth/login/login.component",{"_index":607,"title":{},"body":{"modules/AuthModule.html":{}}}],["pages/auth/register/register.component",{"_index":608,"title":{},"body":{"modules/AuthModule.html":{}}}],["pages/auth/reset",{"_index":609,"title":{},"body":{"modules/AuthModule.html":{}}}],["pages/cart/checkout/checkout.component",{"_index":790,"title":{},"body":{"modules/CartLayoutModule.html":{}}}],["pages/cart/user",{"_index":786,"title":{},"body":{"modules/CartLayoutModule.html":{}}}],["pages/category/category",{"_index":1005,"title":{},"body":{"modules/CategoryLayoutModule.html":{}}}],["pages/common/search",{"_index":1324,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["pages/common/search/search.component",{"_index":1323,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["pages/dashboard/create",{"_index":1456,"title":{},"body":{"modules/DashboardModule.html":{}}}],["pages/dashboard/home/home.component",{"_index":1452,"title":{},"body":{"modules/DashboardModule.html":{}}}],["pages/dashboard/user",{"_index":1453,"title":{},"body":{"modules/DashboardModule.html":{}}}],["pages/error/no",{"_index":1511,"title":{},"body":{"modules/ErrorModule.html":{}}}],["pages/invoices/invoices/invoices.component",{"_index":2011,"title":{},"body":{"modules/InvoiceLayoutModule.html":{}}}],["pages/orders/order",{"_index":2590,"title":{},"body":{"modules/OrderLayoutModule.html":{}}}],["pages/orders/orders/orders.component",{"_index":2589,"title":{},"body":{"modules/OrderLayoutModule.html":{}}}],["pages/product/product",{"_index":2799,"title":{},"body":{"modules/ProductLayoutModule.html":{}}}],["pages/shop/shop/shop.component",{"_index":3346,"title":{},"body":{"modules/ShopLayoutModule.html":{}}}],["pages/sub",{"_index":3534,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{}}}],["pages/tag/tag",{"_index":3664,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["pages/tag/tags/tags.component",{"_index":3663,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["paginationmodule",{"_index":2394,"title":{},"body":{"modules/NgxModule.html":{}}}],["paginationmodule.forroot",{"_index":2404,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["paginator",{"_index":2056,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"classes/CancelOrder.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"classes/ChangeProfileImage.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"injectables/ContactService.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/EditProfile.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"pipes/GeneralPipe.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/functions.html":{}}}],["parammap",{"_index":982,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{}}}],["params",{"_index":858,"title":{},"body":{"injectables/CartService.html":{},"components/ChatbotComponent.html":{},"components/NoInternetComponent.html":{},"injectables/ProductService.html":{},"injectables/SearchService.html":{}}}],["params.append('newquantity",{"_index":859,"title":{},"body":{"injectables/CartService.html":{}}}],["params.append('take",{"_index":2836,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SearchService.html":{}}}],["params.get('categoryid",{"_index":3507,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["params.get('id",{"_index":985,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/OrderDetailsComponent.html":{}}}],["params.get('name",{"_index":3164,"title":{},"body":{"components/SearchComponent.html":{},"components/TagItemsComponent.html":{}}}],["params.get('newpasswordtoken",{"_index":3054,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params.get('productid",{"_index":2766,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["params.get('subcategoryid",{"_index":2767,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["params.get('type",{"_index":3165,"title":{},"body":{"components/SearchComponent.html":{}}}],["params.inputtext",{"_index":1132,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["parsefloat(quantityvalue.value",{"_index":326,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["password",{"_index":594,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"classes/EmailLoginDto.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":192,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["password.component",{"_index":611,"title":{},"body":{"modules/AuthModule.html":{}}}],["password.component.css",{"_index":3042,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":3043,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":3041,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":3050,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":3049,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":3045,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":3048,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":3046,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":3051,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":3047,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.dto.ts",{"_index":3070,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:11",{"_index":3072,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:3",{"_index":3074,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:5",{"_index":3075,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:7",{"_index":3076,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password.dto.ts:9",{"_index":3073,"title":{},"body":{"classes/ResetPasswordDto.html":{}}}],["password/reset",{"_index":610,"title":{},"body":{"modules/AuthModule.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":3067,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["patch",{"_index":922,"title":{},"body":{"injectables/CartState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/TagState.html":{}}}],["path",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["pathmatch",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":731,"title":{},"body":{"interfaces/AuthStateModel.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"injectables/SubCategoryService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["payload.dto",{"_index":2532,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["payload.dto.ts",{"_index":2521,"title":{},"body":{"classes/NotificationPayloadDto.html":{}}}],["payload.dto.ts:2",{"_index":2523,"title":{},"body":{"classes/NotificationPayloadDto.html":{}}}],["payload.dto.ts:3",{"_index":2522,"title":{},"body":{"classes/NotificationPayloadDto.html":{}}}],["payload.ts",{"_index":2518,"title":{},"body":{"classes/NotificationPayload.html":{}}}],["payload.ts:4",{"_index":2519,"title":{},"body":{"classes/NotificationPayload.html":{}}}],["payment",{"_index":184,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearPaymentsFromStorage.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"classes/PushPayment.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["payment.actions",{"_index":2728,"title":{},"body":{"injectables/PaymentState.html":{}}}],["payment.dto",{"_index":966,"title":{},"body":{"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["payment.dto.ts",{"_index":1362,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:3",{"_index":1365,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:4",{"_index":1366,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment/payment.actions",{"_index":931,"title":{},"body":{"injectables/CartState.html":{}}}],["paymentactions",{"_index":930,"title":{},"body":{"injectables/CartState.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/GlobalDataService.html":{},"components/LoginComponent.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["paymentactions.clearpaymentsfromstorage",{"_index":1692,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/PaymentState.html":{}}}],["paymentactions.fetchuserpayments",{"_index":2129,"title":{},"body":{"components/LoginComponent.html":{},"injectables/PaymentState.html":{}}}],["paymentactions.pushpayment",{"_index":933,"title":{},"body":{"injectables/CartState.html":{},"injectables/PaymentState.html":{}}}],["paymentactions.setcustomertoken",{"_index":936,"title":{},"body":{"injectables/CartState.html":{},"injectables/PaymentState.html":{}}}],["paymentdate",{"_index":2016,"title":{},"body":{"classes/InvoiceModel.html":{},"components/InvoicesComponent.html":{}}}],["paymentdto",{"_index":3462,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["paymentendpoints",{"_index":4123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paymentlayoutcomponent",{"_index":183,"title":{"components/PaymentLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["paymentlayoutmodule",{"_index":2693,"title":{"modules/PaymentLayoutModule.html":{}},"body":{"modules/PaymentLayoutModule.html":{},"modules.html":{}}}],["paymentmethod",{"_index":1363,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/PaymentModel.html":{},"components/StripeCheckoutComponent.html":{},"miscellaneous/enumerations.html":{}}}],["paymentmethod.mastercard",{"_index":3456,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["paymentmethod.visa",{"_index":3455,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["paymentmodel",{"_index":1264,"title":{"classes/PaymentModel.html":{}},"body":{"interfaces/CheckoutReturnData.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{},"classes/UserModel.html":{}}}],["payments",{"_index":1281,"title":{},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"classes/GlobalDataDto.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{},"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["payments(state",{"_index":2720,"title":{},"body":{"injectables/PaymentState.html":{}}}],["payments/payment.model",{"_index":3850,"title":{},"body":{"classes/UserModel.html":{}}}],["paymentservice",{"_index":2702,"title":{"injectables/PaymentService.html":{}},"body":{"injectables/PaymentService.html":{},"injectables/PaymentState.html":{}}}],["paymentstate",{"_index":2710,"title":{"injectables/PaymentState.html":{}},"body":{"injectables/PaymentState.html":{},"miscellaneous/variables.html":{}}}],["paymentstatemodel",{"_index":1282,"title":{"interfaces/PaymentStateModel.html":{}},"body":{"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["paypal",{"_index":1927,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["pelistine",{"_index":4164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["people",{"_index":1910,"title":{},"body":{"components/HomeComponent.html":{}}}],["permissions",{"_index":3364,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["phone",{"_index":115,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{},"classes/Contact.html":{},"components/UserProfileComponent.html":{}}}],["phonevalue",{"_index":1222,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["phonevalue.startswith",{"_index":1225,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["pipe",{"_index":1021,"title":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"pipes/ProductFilterPipe.html":{},"pipes/TagPipe.html":{}},"body":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"components/NavbarComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/SearchBarComponent.html":{},"pipes/TagPipe.html":{}}}],["pipes",{"_index":1023,"title":{},"body":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"pipes/ProductFilterPipe.html":{},"pipes/TagPipe.html":{},"overview.html":{}}}],["pipesmodule",{"_index":1327,"title":{"modules/PipesModule.html":{}},"body":{"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/PipesModule.html":{},"modules/ShopLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1031,"title":{},"body":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"pipes/ProductFilterPipe.html":{},"pipes/TagPipe.html":{}}}],["pk_test_ngzldnb6ialz1pxcygyayyzv000hyah7lb",{"_index":4196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["place",{"_index":1888,"title":{},"body":{"components/HomeComponent.html":{}}}],["placeholder",{"_index":3444,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["platformmodule",{"_index":2242,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":121,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"classes/ErrorMessages.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NoInternetComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["plugin",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["point",{"_index":2438,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["pointer",{"_index":2489,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["popovermodule",{"_index":2281,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{}}}],["popovermodule.forroot",{"_index":2300,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["popper.js",{"_index":3964,"title":{},"body":{"dependencies.html":{}}}],["popperjs/core",{"_index":3929,"title":{},"body":{"dependencies.html":{}}}],["portalmodule",{"_index":2224,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":1589,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["postal",{"_index":1231,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["postalcode",{"_index":744,"title":{},"body":{"classes/BillingAddress.html":{},"components/CheckoutComponent.html":{}}}],["postlextext",{"_index":1104,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["prefixroute",{"_index":4074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/activities",{"_index":4107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/check",{"_index":4091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/delete",{"_index":4090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/edit",{"_index":4097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/email/forgot",{"_index":4087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/email/reset",{"_index":4088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/email/send",{"_index":4084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/email/verify",{"_index":4086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/global",{"_index":4100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/login/user",{"_index":4083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/register/admin",{"_index":4081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/register/user",{"_index":4080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/system",{"_index":4095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/update",{"_index":4101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/auth/users",{"_index":4093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/cart",{"_index":4134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/categories",{"_index":4119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/email/contact",{"_index":4146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/invoices",{"_index":4128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/notifications",{"_index":4139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/notifications/send",{"_index":4144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/notifications/subscribers",{"_index":4140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/notifications/subscribers/new",{"_index":4142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/orders",{"_index":4131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/payments",{"_index":4125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/products",{"_index":4110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/products/filtered",{"_index":4112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/profiles",{"_index":4104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/search",{"_index":4116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/sub",{"_index":4122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixroute}/tags",{"_index":4137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefixuri",{"_index":3547,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["previousprice",{"_index":2806,"title":{},"body":{"classes/ProductModel.html":{}}}],["price",{"_index":2568,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/ShopComponent.html":{},"components/UserCartComponent.html":{}}}],["primary",{"_index":2370,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{}}}],["primary:focus",{"_index":2474,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["primary:hover",{"_index":2473,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["primarykey",{"_index":2505,"title":{},"body":{"classes/NotificationData.html":{}}}],["private",{"_index":318,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"injectables/CategoryState.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserProfileComponent.html":{}}}],["privatekey",{"_index":4152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problems",{"_index":2430,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["processed",{"_index":4002,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prod",{"_index":4043,"title":{},"body":{"index.html":{}}}],["product",{"_index":186,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProducts.html":{},"components/CommonLayoutComponent.html":{},"classes/CreateUserCart.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"components/FooterComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"interfaces/ProductStateModel.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["product.actions",{"_index":2877,"title":{},"body":{"injectables/ProductState.html":{}}}],["product.currentprice",{"_index":346,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["product.description",{"_index":2783,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["product.dto.ts",{"_index":1360,"title":{},"body":{"classes/CreateCartProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:11",{"_index":3755,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:3",{"_index":1361,"title":{},"body":{"classes/CreateCartProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:5",{"_index":3753,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:7",{"_index":3754,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:9",{"_index":3752,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.images[0",{"_index":2780,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["product.instock",{"_index":1802,"title":{},"body":{"injectables/HelperService.html":{}}}],["product.model",{"_index":800,"title":{},"body":{"classes/CartModel.html":{},"components/UserCartComponent.html":{}}}],["product.model.ts",{"_index":802,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:10",{"_index":806,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:12",{"_index":814,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:14",{"_index":807,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:16",{"_index":813,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:18",{"_index":810,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:20",{"_index":812,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:4",{"_index":808,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:5",{"_index":811,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.model.ts:8",{"_index":809,"title":{},"body":{"classes/CartProductModel.html":{}}}],["product.name",{"_index":345,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["product.name.tolowercase().indexof(searchterm.tolowercase",{"_index":2793,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["product.previousprice",{"_index":1894,"title":{},"body":{"components/HomeComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["product.quantity",{"_index":351,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["product.references[i",{"_index":2781,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["product.subcategoryid",{"_index":1800,"title":{},"body":{"injectables/HelperService.html":{}}}],["product/${cartproductid",{"_index":856,"title":{},"body":{"injectables/CartService.html":{}}}],["product/${foldername}/${subfolder}/${type",{"_index":3582,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["product/product.actions",{"_index":3604,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["productactions",{"_index":250,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/HomeComponent.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{},"classes/UpdateShopProducts.html":{}}}],["productactions.addtocart",{"_index":315,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/ProductState.html":{}}}],["productactions.clearproducts",{"_index":2879,"title":{},"body":{"injectables/ProductState.html":{}}}],["productactions.fetchcustomproducts",{"_index":2881,"title":{},"body":{"injectables/ProductState.html":{},"components/ShopComponent.html":{}}}],["productactions.fetchmixlatestproducts",{"_index":1852,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ProductState.html":{}}}],["productactions.fetchmostsalesproducts",{"_index":1851,"title":{},"body":{"components/HomeComponent.html":{},"injectables/ProductState.html":{}}}],["productactions.fetchshopproducts",{"_index":2880,"title":{},"body":{"injectables/ProductState.html":{},"components/ShopComponent.html":{}}}],["productactions.updateshopproducts",{"_index":2885,"title":{},"body":{"injectables/ProductState.html":{},"injectables/SubCategoryState.html":{}}}],["productcart.maxpush",{"_index":3811,"title":{},"body":{"components/UserCartComponent.html":{}}}],["productcart.name",{"_index":3808,"title":{},"body":{"components/UserCartComponent.html":{}}}],["productcart.quantity",{"_index":3809,"title":{},"body":{"components/UserCartComponent.html":{}}}],["productcart.totalprice",{"_index":3810,"title":{},"body":{"components/UserCartComponent.html":{}}}],["productdetails",{"_index":1727,"title":{},"body":{"injectables/HelperService.html":{}}}],["productdetails(product",{"_index":1753,"title":{},"body":{"injectables/HelperService.html":{}}}],["productdetailscomponent",{"_index":185,"title":{"components/ProductDetailsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["productendpoints",{"_index":4108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productfilter",{"_index":2789,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["productfilterpipe",{"_index":2739,"title":{"pipes/ProductFilterPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ProductFilterPipe.html":{},"overview.html":{}}}],["productid",{"_index":230,"title":{},"body":{"classes/AddToCart.html":{},"classes/CartProductModel.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/OrderItemModel.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"interfaces/RemoveCartItem.html":{},"classes/UpdateShopProducts.html":{}}}],["production",{"_index":4045,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["productlayoutcomponent",{"_index":187,"title":{"components/ProductLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["productlayoutmodule",{"_index":2795,"title":{"modules/ProductLayoutModule.html":{}},"body":{"modules/ProductLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["productlayoutroutes",{"_index":2800,"title":{},"body":{"modules/ProductLayoutModule.html":{}}}],["productmodel",{"_index":237,"title":{"classes/ProductModel.html":{}},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/HelperService.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderService.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"classes/UpdateShopProducts.html":{}}}],["products",{"_index":253,"title":{},"body":{"classes/AddToCart.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"components/HomeComponent.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{},"miscellaneous/variables.html":{}}}],["products.filter(product",{"_index":2792,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["products/product.model",{"_index":3544,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["productsarray",{"_index":3135,"title":{},"body":{"components/SearchComponent.html":{}}}],["productscustomfilterdto",{"_index":239,"title":{"classes/ProductsCustomFilterDto.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["productscustomfilterdto.range1",{"_index":3337,"title":{},"body":{"components/ShopComponent.html":{}}}],["productscustomfilterdto.range2",{"_index":3338,"title":{},"body":{"components/ShopComponent.html":{}}}],["productservice",{"_index":2822,"title":{"injectables/ProductService.html":{}},"body":{"injectables/ProductService.html":{},"injectables/ProductState.html":{},"components/SearchBarComponent.html":{}}}],["productsservice",{"_index":3091,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["productstags",{"_index":1311,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["productstags(state",{"_index":3700,"title":{},"body":{"injectables/TagState.html":{}}}],["productstagsinit",{"_index":3485,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["productstate",{"_index":1678,"title":{"injectables/ProductState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/ProductState.html":{},"miscellaneous/variables.html":{}}}],["productstatemodel",{"_index":245,"title":{"interfaces/ProductStateModel.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["producttag",{"_index":3493,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["producttag.id",{"_index":3501,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["producttag.name",{"_index":3504,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["producttagmodel",{"_index":1307,"title":{"classes/ProductTagModel.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"classes/ProductModel.html":{},"classes/ProductTagModel.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["producttags",{"_index":2807,"title":{},"body":{"classes/ProductModel.html":{}}}],["profile",{"_index":221,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/AuthStateModel.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearProfileData.html":{},"components/CommonLayoutComponent.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["profile'},{'name",{"_index":153,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile(state",{"_index":2968,"title":{},"body":{"injectables/ProfileState.html":{}}}],["profile.actions",{"_index":2973,"title":{},"body":{"injectables/ProfileState.html":{}}}],["profile.component",{"_index":1455,"title":{},"body":{"modules/DashboardModule.html":{}}}],["profile.component.css",{"_index":1387,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1388,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1385,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.ts:103",{"_index":3866,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:110",{"_index":3885,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":3872,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:127",{"_index":3871,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:140",{"_index":3873,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1396,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:19",{"_index":1398,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":1403,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:21",{"_index":1402,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:22",{"_index":1404,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1395,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":3879,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":3876,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":3880,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":3875,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:28",{"_index":1405,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":3878,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:30",{"_index":3865,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:32",{"_index":1407,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":3877,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1408,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":3881,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":1401,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":3883,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":3870,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:53",{"_index":3867,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:54",{"_index":1399,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:60",{"_index":3884,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:65",{"_index":3869,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:69",{"_index":1400,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":3868,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.dto",{"_index":1084,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["profile.dto.ts",{"_index":1369,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:10",{"_index":1373,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:12",{"_index":1374,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:14",{"_index":1372,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:6",{"_index":1375,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile.dto.ts:8",{"_index":1376,"title":{},"body":{"classes/CreateProfileDto.html":{}}}],["profile/change",{"_index":2943,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/create",{"_index":1384,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"modules/DashboardModule.html":{}}}],["profile/delete",{"_index":2946,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/edit",{"_index":2939,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/set",{"_index":2940,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/user",{"_index":1454,"title":{},"body":{"modules/DashboardModule.html":{},"components/UserProfileComponent.html":{}}}],["profileactions",{"_index":1086,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/GlobalDataService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["profileactions.changeprofileimage",{"_index":2978,"title":{},"body":{"injectables/ProfileState.html":{},"components/UserProfileComponent.html":{}}}],["profileactions.clearprofiledata",{"_index":1689,"title":{},"body":{"injectables/GlobalDataService.html":{},"injectables/ProfileState.html":{}}}],["profileactions.createuserprofile",{"_index":1411,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"injectables/ProfileState.html":{}}}],["profileactions.deleteprofileimage",{"_index":2979,"title":{},"body":{"injectables/ProfileState.html":{}}}],["profileactions.editprofile",{"_index":2976,"title":{},"body":{"injectables/ProfileState.html":{},"components/UserProfileComponent.html":{}}}],["profileactions.fetchuserprofile",{"_index":2975,"title":{},"body":{"injectables/ProfileState.html":{},"components/UserProfileComponent.html":{}}}],["profileactions.setprofileimage",{"_index":2977,"title":{},"body":{"injectables/ProfileState.html":{},"components/UserProfileComponent.html":{}}}],["profileendpoints",{"_index":4102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profileid",{"_index":734,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{}}}],["profilemodel",{"_index":1081,"title":{"classes/ProfileModel.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/GlobalDataService.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["profiles",{"_index":1615,"title":{},"body":{"classes/GlobalDataDto.html":{}}}],["profileservice",{"_index":2919,"title":{"injectables/ProfileService.html":{}},"body":{"injectables/ProfileService.html":{},"injectables/ProfileState.html":{}}}],["profilestate",{"_index":1673,"title":{"injectables/ProfileState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/ProfileState.html":{},"miscellaneous/variables.html":{}}}],["profilestatemodel",{"_index":1085,"title":{"interfaces/ProfileStateModel.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["project",{"_index":4023,"title":{},"body":{"index.html":{}}}],["promise",{"_index":526,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"classes/InvoiceModel.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PaymentModel.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"classes/ProductModel.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"classes/TagModel.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["protected",{"_index":3854,"title":{},"body":{"classes/UserModel.html":{}}}],["protractor",{"_index":528,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"components/CheckoutComponent.html":{},"classes/ErrorMessages.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["providedin",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{}}}],["providers",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"overview.html":{}}}],["provides",{"_index":1917,"title":{},"body":{"components/HomeComponent.html":{}}}],["provinces",{"_index":2785,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["psk8q_qyekl2hrpwnyf8k",{"_index":4153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ptag.name",{"_index":3503,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["public",{"_index":227,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/ChangeProfileImage.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserProfile.html":{},"classes/GlobalDataDto.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{}}}],["publickey",{"_index":4148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purchase",{"_index":1244,"title":{},"body":{"components/CheckoutComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["push",{"_index":772,"title":{},"body":{"classes/CancelOrder.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{},"classes/UpdateOrder.html":{}}}],["pushing",{"_index":3987,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pushinvoice",{"_index":926,"title":{"classes/PushInvoice.html":{}},"body":{"injectables/CartState.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchUserInvoices.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/PushInvoice.html":{}}}],["pushinvoice(ctx",{"_index":2041,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["pushinvoice(invoice",{"_index":958,"title":{},"body":{"injectables/CartState.html":{}}}],["pushorder",{"_index":771,"title":{"classes/PushOrder.html":{}},"body":{"classes/CancelOrder.html":{},"injectables/CartState.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["pushorder(ctx",{"_index":2639,"title":{},"body":{"injectables/OrderState.html":{}}}],["pushorder(order",{"_index":960,"title":{},"body":{"injectables/CartState.html":{}}}],["pushpayment",{"_index":932,"title":{"classes/PushPayment.html":{}},"body":{"injectables/CartState.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["pushpayment(ctx",{"_index":2722,"title":{},"body":{"injectables/PaymentState.html":{}}}],["pushpayment(payment",{"_index":959,"title":{},"body":{"injectables/CartState.html":{}}}],["pushsubscription",{"_index":1846,"title":{},"body":{"components/HomeComponent.html":{}}}],["q.get('returnurl",{"_index":2421,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["quantity",{"_index":268,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"classes/CartProductModel.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearProducts.html":{},"classes/CreateCartProductDto.html":{},"classes/CreateUserCart.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderItemModel.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{}}}],["quantity/${cartproductid",{"_index":862,"title":{},"body":{"injectables/CartService.html":{}}}],["quantityvalue",{"_index":291,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["quantityvalue.value",{"_index":328,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["queryparams",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/OrdersComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/TagItemsComponent.html":{}}}],["questions",{"_index":1940,"title":{},"body":{"components/HomeComponent.html":{}}}],["radio",{"_index":3339,"title":{},"body":{"components/ShopComponent.html":{}}}],["radius",{"_index":2460,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["range",{"_index":3336,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/variables.html":{}}}],["range.dto.ts",{"_index":1602,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range.dto.ts:2",{"_index":1607,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range.dto.ts:3",{"_index":1608,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range.dto.ts:4",{"_index":1611,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range.dto.ts:5",{"_index":1609,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range.dto.ts:6",{"_index":1610,"title":{},"body":{"classes/GetProductsByRangeDto.html":{}}}],["range1",{"_index":1603,"title":{},"body":{"classes/GetProductsByRangeDto.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{}}}],["range2",{"_index":1604,"title":{},"body":{"classes/GetProductsByRangeDto.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{}}}],["re",{"_index":2425,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["reactiveformsmodule",{"_index":3207,"title":{},"body":{"modules/SharedModule.html":{}}}],["read",{"_index":1814,"title":{},"body":{"injectables/HelperService.html":{}}}],["readme",{"_index":4054,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":232,"title":{},"body":{"classes/AddToCart.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"interfaces/InvoiceStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProductStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/ResetPasswordDto.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"interfaces/SubCategoryStateModel.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["redirectto",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["references",{"_index":998,"title":{},"body":{"classes/CategoryDto.html":{},"classes/ProductModel.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"classes/UpdateProductDto.html":{}}}],["refreshinvoices",{"_index":2058,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["refreshorders",{"_index":2666,"title":{},"body":{"components/OrdersComponent.html":{}}}],["refreshproducts",{"_index":3244,"title":{},"body":{"components/ShopComponent.html":{}}}],["regard",{"_index":1909,"title":{},"body":{"components/HomeComponent.html":{}}}],["region",{"_index":1129,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["register",{"_index":618,"title":{"classes/Register.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"components/FooterComponent.html":{},"classes/Login.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/enumerations.html":{}}}],["register'},{'name",{"_index":189,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["register(authcredentialsdto",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(data)).subscribe",{"_index":3024,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.css",{"_index":3002,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":3003,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registeradmin",{"_index":673,"title":{},"body":{"injectables/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registeradmin(ctx",{"_index":690,"title":{},"body":{"injectables/AuthState.html":{}}}],["registercomponent",{"_index":188,"title":{"components/RegisterComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["registeruser",{"_index":4079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationform",{"_index":3004,"title":{},"body":{"components/RegisterComponent.html":{}}}],["related",{"_index":2786,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["relatedproducts",{"_index":2748,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["relative",{"_index":1590,"title":{},"body":{"components/FooterComponent.html":{}}}],["reload",{"_index":4034,"title":{},"body":{"index.html":{}}}],["remove",{"_index":120,"title":{},"body":{"components/AddContactsComponent.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["remove_product_from_cart",{"_index":3997,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["removecartitem",{"_index":844,"title":{"interfaces/RemoveCartItem.html":{}},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["removecartproduct",{"_index":875,"title":{"classes/RemoveCartProduct.html":{}},"body":{"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["removecartproduct(cartproduct",{"_index":3785,"title":{},"body":{"components/UserCartComponent.html":{}}}],["removecartproduct(ctx",{"_index":905,"title":{},"body":{"injectables/CartState.html":{}}}],["removecartproduct(this.cart.id",{"_index":3798,"title":{},"body":{"components/UserCartComponent.html":{}}}],["removecartproductfromcart",{"_index":822,"title":{},"body":{"injectables/CartService.html":{}}}],["removecartproductfromcart(cartid",{"_index":834,"title":{},"body":{"injectables/CartService.html":{}}}],["removecontact",{"_index":77,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["removecontact(index",{"_index":99,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["removed",{"_index":3800,"title":{},"body":{"components/UserCartComponent.html":{}}}],["removeddata",{"_index":838,"title":{},"body":{"injectables/CartService.html":{}}}],["removeitem",{"_index":2647,"title":{},"body":{"injectables/OrderState.html":{}}}],["removeitem(order",{"_index":2661,"title":{},"body":{"injectables/OrderState.html":{}}}],["removeproductsfromcart",{"_index":823,"title":{"classes/RemoveProductsFromCart.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["removeproductsfromcart(ctx",{"_index":908,"title":{},"body":{"injectables/CartState.html":{}}}],["removeproductsfromcart(removeddata",{"_index":836,"title":{},"body":{"injectables/CartService.html":{}}}],["removetagsfromsubcategory",{"_index":3554,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["removetagsfromsubcategory(id",{"_index":3568,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["repeat",{"_index":2446,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["req",{"_index":1165,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/TokenInterceptor.html":{}}}],["req.clone",{"_index":3729,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["request",{"_index":1183,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"components/LoginComponent.html":{}}}],["request('delete",{"_index":866,"title":{},"body":{"injectables/CartService.html":{}}}],["require",{"_index":4075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":4157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1229,"title":{},"body":{"components/CheckoutComponent.html":{},"classes/ErrorMessages.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["requiredfield",{"_index":1488,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["requiredfield(field",{"_index":1499,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["reset",{"_index":191,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["reset_password",{"_index":3991,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resetpassword",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(resetpassworddto",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":190,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":638,"title":{"classes/ResetPasswordDto.html":{}},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{}}}],["resetslice",{"_index":3245,"title":{},"body":{"components/ShopComponent.html":{}}}],["resetslice(length",{"_index":3263,"title":{},"body":{"components/ShopComponent.html":{}}}],["resetting",{"_index":3068,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resource",{"_index":3362,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["response",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"components/ChatbotComponent.html":{}}}],["response.ts",{"_index":2171,"title":{},"body":{"classes/LoginResponse.html":{}}}],["response.ts:4",{"_index":2173,"title":{},"body":{"classes/LoginResponse.html":{}}}],["response.ts:5",{"_index":2172,"title":{},"body":{"classes/LoginResponse.html":{}}}],["restarting",{"_index":2432,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["result",{"_index":27,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":2328,"title":{},"body":{"components/NavbarComponent.html":{}}}],["result.token",{"_index":719,"title":{},"body":{"injectables/AuthState.html":{}}}],["result.user",{"_index":718,"title":{},"body":{"injectables/AuthState.html":{}}}],["results",{"_index":29,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":118,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"interfaces/CheckoutReturnData.html":{},"injectables/ContactService.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"pipes/GeneralPipe.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"pipes/ProductFilterPipe.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interceptors/TokenInterceptor.html":{},"guards/UserAuthGuard.html":{},"components/UserProfileComponent.html":{}}}],["returns",{"_index":93,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"components/CartLayoutComponent.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"injectables/ContactService.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["returnurl",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/NoInternetComponent.html":{}}}],["rgb(255",{"_index":2443,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["rgba(0",{"_index":2465,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["right",{"_index":1887,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["role.enum",{"_index":3853,"title":{},"body":{"classes/UserModel.html":{}}}],["role.enum.ts",{"_index":3982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roles",{"_index":4098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"injectables/ContactService.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{}}}],["root'},{'name",{"_index":135,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["rootactivities",{"_index":4106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootcart",{"_index":4133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootcategories",{"_index":4118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootinvoices",{"_index":4127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootorders",{"_index":4130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpayments",{"_index":4124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootproducts",{"_index":4109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootprofile",{"_index":4103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootsubcategories",{"_index":4121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roottags",{"_index":4136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":975,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"guards/UserAuthGuard.html":{}}}],["route.parammap.subscribe((params",{"_index":984,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/TagItemsComponent.html":{}}}],["route.queryparammap.subscribe((q",{"_index":2419,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["router",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDetailsComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"guards/UserAuthGuard.html":{},"components/UserProfileComponent.html":{}}}],["router.navigate(['/cart",{"_index":1207,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["router.navigate(['/dashboard",{"_index":2133,"title":{},"body":{"components/LoginComponent.html":{}}}],["router.navigate(['/home",{"_index":3016,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{}}}],["routermodule",{"_index":536,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/ShopLayoutModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["routermodule.forchild(authlayoutroutes",{"_index":612,"title":{},"body":{"modules/AuthModule.html":{}}}],["routermodule.forchild(cartlayoutroutes",{"_index":791,"title":{},"body":{"modules/CartLayoutModule.html":{}}}],["routermodule.forchild(categorylayoutroutes",{"_index":1007,"title":{},"body":{"modules/CategoryLayoutModule.html":{}}}],["routermodule.forchild(commonlayoutroutes",{"_index":1329,"title":{},"body":{"modules/CommonLayoutModule.html":{}}}],["routermodule.forchild(dashboardlayoutroutes",{"_index":1457,"title":{},"body":{"modules/DashboardModule.html":{}}}],["routermodule.forchild(errorlayoutroutes",{"_index":1514,"title":{},"body":{"modules/ErrorModule.html":{}}}],["routermodule.forchild(invoicelayoutroutes",{"_index":2013,"title":{},"body":{"modules/InvoiceLayoutModule.html":{}}}],["routermodule.forchild(orderlayoutroutes",{"_index":2592,"title":{},"body":{"modules/OrderLayoutModule.html":{}}}],["routermodule.forchild(productlayoutroutes",{"_index":2801,"title":{},"body":{"modules/ProductLayoutModule.html":{}}}],["routermodule.forchild(shoplayoutroutes",{"_index":3348,"title":{},"body":{"modules/ShopLayoutModule.html":{}}}],["routermodule.forchild(subcategorylayoutroutes",{"_index":3536,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{}}}],["routermodule.forchild(taglayoutroutes",{"_index":3666,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["routermodule.forroot(routes",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":3772,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["routes",{"_index":535,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":448,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rows",{"_index":1567,"title":{},"body":{"components/FooterComponent.html":{}}}],["rubik",{"_index":2441,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["run",{"_index":4028,"title":{},"body":{"index.html":{}}}],["running",{"_index":4046,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CartService.html":{},"injectables/CategoryService.html":{},"interceptors/CheckConnectionInterceptor.html":{},"injectables/ContactService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/HelperService.html":{},"injectables/InvoiceService.html":{},"components/NavbarComponent.html":{},"injectables/NotificationsService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"components/SearchBarComponent.html":{},"injectables/SearchService.html":{},"components/SidebarComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":710,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/InvoiceState.html":{},"components/NavbarComponent.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/SearchBarComponent.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["rxreactiveformsmodule",{"_index":3228,"title":{},"body":{"modules/SharedModule.html":{}}}],["rxreactiveformsmodule.forroot",{"_index":3229,"title":{},"body":{"modules/SharedModule.html":{}}}],["rxweb/reactive",{"_index":1202,"title":{},"body":{"components/CheckoutComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["rxwebvalidators",{"_index":1201,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["rxwebvalidators.mask({mask",{"_index":1217,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["s.id",{"_index":3509,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["s.shoplayoutmodule",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["safari",{"_index":355,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["sales",{"_index":259,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/GlobalDataDto.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["san",{"_index":1948,"title":{},"body":{"components/HomeComponent.html":{}}}],["sans",{"_index":2378,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["save",{"_index":3910,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["sc.id",{"_index":2774,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["sc.name",{"_index":3333,"title":{},"body":{"components/ShopComponent.html":{}}}],["scaffolding",{"_index":4035,"title":{},"body":{"index.html":{}}}],["scid",{"_index":3234,"title":{},"body":{"components/ShopComponent.html":{}}}],["screen",{"_index":1246,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["scrollingmodule",{"_index":2190,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["sdk",{"_index":1114,"title":{},"body":{"components/ChatbotComponent.html":{},"dependencies.html":{}}}],["search",{"_index":194,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":197,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["search.component.css",{"_index":3132,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":3133,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchbarcomponent",{"_index":193,"title":{"components/SearchBarComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["searchbymatchingname",{"_index":1037,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/SubCategoryService.html":{}}}],["searchbymatchingname(searchvalue",{"_index":1040,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/SubCategoryService.html":{}}}],["searchbyname",{"_index":3185,"title":{},"body":{"injectables/SearchService.html":{},"miscellaneous/variables.html":{}}}],["searchbyname(name",{"_index":3187,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchbytagname",{"_index":4115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["searchcomponent",{"_index":196,"title":{"components/SearchComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["searched",{"_index":3181,"title":{},"body":{"components/SearchComponent.html":{},"components/TagItemsComponent.html":{}}}],["searchedtag",{"_index":3640,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["searchfield",{"_index":3082,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["searching",{"_index":3180,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchservice",{"_index":3141,"title":{"injectables/SearchService.html":{}},"body":{"components/SearchComponent.html":{},"injectables/SearchService.html":{}}}],["searchterm",{"_index":1028,"title":{},"body":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"pipes/ProductFilterPipe.html":{},"components/ShopComponent.html":{},"pipes/TagPipe.html":{}}}],["searchvalue",{"_index":1042,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/SubCategoryService.html":{}}}],["secretaccesskey",{"_index":1127,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["see",{"_index":3911,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["select",{"_index":3334,"title":{},"body":{"components/ShopComponent.html":{}}}],["selected",{"_index":3655,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["selectedimage",{"_index":1717,"title":{},"body":{"injectables/HelperService.html":{},"components/ProductDetailsComponent.html":{}}}],["selecteditem",{"_index":3776,"title":{},"body":{"components/UserCartComponent.html":{}}}],["selectedlist",{"_index":3083,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["selectedoptionsearch",{"_index":3084,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["selectedtag",{"_index":3235,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["selector",{"_index":64,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthState.html":{},"components/CartLayoutComponent.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["selling",{"_index":1893,"title":{},"body":{"components/HomeComponent.html":{}}}],["send",{"_index":1882,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["send_email_verification_request",{"_index":3990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["send_forgot_request_password",{"_index":3988,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["send_notification",{"_index":3992,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["send_request_password",{"_index":3989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sendcontactmessage",{"_index":1350,"title":{},"body":{"injectables/ContactService.html":{},"components/HomeComponent.html":{}}}],["sendcontactmessage(data",{"_index":1352,"title":{},"body":{"injectables/ContactService.html":{}}}],["sendemailforgotpassword",{"_index":2112,"title":{},"body":{"components/LoginComponent.html":{}}}],["sendemailverification",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["sendemailverification(email",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["sender",{"_index":2307,"title":{},"body":{"classes/Message.html":{}}}],["sending",{"_index":1862,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["sendnotification",{"_index":4143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sent",{"_index":1866,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["serif",{"_index":2379,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["serve",{"_index":4029,"title":{},"body":{"index.html":{}}}],["server",{"_index":1883,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["serverpublickey",{"_index":1870,"title":{},"body":{"components/HomeComponent.html":{}}}],["service",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["services",{"_index":1918,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/auth/auth.service",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthState.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfileComponent.html":{}}}],["services/auth/error.interceptor",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["services/auth/token.interceptor",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["services/cart/cart.service",{"_index":915,"title":{},"body":{"injectables/CartState.html":{},"components/StripeCheckoutComponent.html":{}}}],["services/category/category.service",{"_index":1065,"title":{},"body":{"injectables/CategoryState.html":{},"components/SearchBarComponent.html":{},"injectables/SubCategoryState.html":{}}}],["services/category/sub",{"_index":2882,"title":{},"body":{"injectables/ProductState.html":{},"components/SearchBarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{}}}],["services/contact/contact.service",{"_index":1853,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/global",{"_index":307,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["services/helper.service",{"_index":305,"title":{},"body":{"components/AddToCartComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/LoginFirstComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["services/invoice/invoice.service",{"_index":2045,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["services/notification/notification.service",{"_index":1854,"title":{},"body":{"components/HomeComponent.html":{}}}],["services/order/order.service",{"_index":2544,"title":{},"body":{"components/OrderDetailsComponent.html":{},"injectables/OrderState.html":{}}}],["services/payment/payment.service",{"_index":2729,"title":{},"body":{"injectables/PaymentState.html":{}}}],["services/product/product.service",{"_index":2878,"title":{},"body":{"injectables/ProductState.html":{},"components/SearchBarComponent.html":{}}}],["services/profile/profile.service",{"_index":2974,"title":{},"body":{"injectables/ProfileState.html":{}}}],["services/search/search.service",{"_index":3160,"title":{},"body":{"components/SearchComponent.html":{}}}],["services/tag/tag.service",{"_index":3705,"title":{},"body":{"injectables/TagState.html":{}}}],["serviceworkermodule",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["sessionstorage.getitem('isonline",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/NoInternetComponent.html":{}}}],["sessionstorage.removeitem('isonline",{"_index":1784,"title":{},"body":{"injectables/HelperService.html":{}}}],["sessionstorage.setitem('isonline",{"_index":1785,"title":{},"body":{"injectables/HelperService.html":{}}}],["set",{"_index":733,"title":{},"body":{"interfaces/AuthStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"classes/Login.html":{},"classes/Logout.html":{},"interfaces/PaymentStateModel.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["setautocompletelist",{"_index":3085,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["setautocompletelist(value",{"_index":3096,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["setcustomertoken",{"_index":935,"title":{"classes/SetCustomerToken.html":{}},"body":{"injectables/CartState.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/SetCustomerToken.html":{}}}],["setcustomertoken(ctx",{"_index":2725,"title":{},"body":{"injectables/PaymentState.html":{}}}],["setcustomertoken(customerid",{"_index":957,"title":{},"body":{"injectables/CartState.html":{},"injectables/PaymentService.html":{}}}],["setdata",{"_index":2750,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/SearchComponent.html":{}}}],["setdata(name",{"_index":3149,"title":{},"body":{"components/SearchComponent.html":{}}}],["setdata(productid",{"_index":2753,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["setheaders",{"_index":3730,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["setisonline",{"_index":1728,"title":{},"body":{"injectables/HelperService.html":{}}}],["setisonline(value",{"_index":1755,"title":{},"body":{"injectables/HelperService.html":{}}}],["setoptionsearch",{"_index":3086,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["setoptionsearch(value",{"_index":3099,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["setprofileimage",{"_index":1092,"title":{"classes/SetProfileImage.html":{}},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"components/UserProfileComponent.html":{}}}],["setprofileimage(ctx",{"_index":2970,"title":{},"body":{"injectables/ProfileState.html":{}}}],["setprofileimage(imageform",{"_index":2933,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setprofileimage(this.helperservice.imageformdata",{"_index":3908,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["setrange1",{"_index":3246,"title":{},"body":{"components/ShopComponent.html":{}}}],["setrange1(value",{"_index":3265,"title":{},"body":{"components/ShopComponent.html":{}}}],["setrange2",{"_index":3247,"title":{},"body":{"components/ShopComponent.html":{}}}],["setrange2(value",{"_index":3267,"title":{},"body":{"components/ShopComponent.html":{}}}],["setselectedimage",{"_index":2751,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["setselectedimage(image",{"_index":2756,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["setselecteditem",{"_index":3778,"title":{},"body":{"components/UserCartComponent.html":{}}}],["setselecteditem(item",{"_index":3787,"title":{},"body":{"components/UserCartComponent.html":{}}}],["setskiplength",{"_index":3248,"title":{},"body":{"components/ShopComponent.html":{}}}],["setskiplength(length",{"_index":3269,"title":{},"body":{"components/ShopComponent.html":{}}}],["settakelength",{"_index":3249,"title":{},"body":{"components/ShopComponent.html":{}}}],["settakelength(length",{"_index":3271,"title":{},"body":{"components/ShopComponent.html":{}}}],["settimeout",{"_index":3328,"title":{},"body":{"components/ShopComponent.html":{}}}],["setusercart",{"_index":674,"title":{"classes/SetUserCart.html":{}},"body":{"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"injectables/CartState.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["setusercart(cart.id",{"_index":944,"title":{},"body":{"injectables/CartState.html":{}}}],["setusercart(ctx",{"_index":693,"title":{},"body":{"injectables/AuthState.html":{}}}],["setuserprofile",{"_index":675,"title":{"classes/SetUserProfile.html":{}},"body":{"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"injectables/ProfileState.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["setuserprofile(ctx",{"_index":696,"title":{},"body":{"injectables/AuthState.html":{}}}],["setuserprofile(profile.id",{"_index":2983,"title":{},"body":{"injectables/ProfileState.html":{}}}],["shadow",{"_index":2457,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["shared/services/global",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/services/helper.service",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["shared/shared",{"_index":453,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{}}}],["shared/validators/must",{"_index":3052,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["sharedmodule",{"_index":439,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/OrderLayoutModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["sharereplay",{"_index":2329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sheet",{"_index":2265,"title":{},"body":{"modules/MaterialModule.html":{}}}],["shipment",{"_index":2689,"title":{},"body":{"components/OrdersComponent.html":{}}}],["shipmentdate",{"_index":2596,"title":{},"body":{"classes/OrderModel.html":{},"components/OrdersComponent.html":{}}}],["shipped",{"_index":2554,"title":{},"body":{"components/OrderDetailsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["shipping",{"_index":1238,"title":{},"body":{"components/CheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["shop",{"_index":201,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearProducts.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProductStateModel.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["shop'},{'name",{"_index":199,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["shop.component.css",{"_index":3231,"title":{},"body":{"components/ShopComponent.html":{}}}],["shop.component.html",{"_index":3232,"title":{},"body":{"components/ShopComponent.html":{}}}],["shop_products",{"_index":3293,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/enumerations.html":{}}}],["shopcomponent",{"_index":198,"title":{"components/ShopComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["shoplayoutcomponent",{"_index":200,"title":{"components/ShopLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["shoplayoutmodule",{"_index":3342,"title":{"modules/ShopLayoutModule.html":{}},"body":{"modules/ShopLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["shoplayoutroutes",{"_index":3347,"title":{},"body":{"modules/ShopLayoutModule.html":{}}}],["shopproducts",{"_index":246,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/GlobalDataService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/UpdateShopProducts.html":{}}}],["shopproducts(state",{"_index":2872,"title":{},"body":{"injectables/ProductState.html":{}}}],["short",{"_index":2089,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{}}}],["show",{"_index":203,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["showerrordialog",{"_index":1729,"title":{},"body":{"injectables/HelperService.html":{}}}],["showerrordialog(error",{"_index":1757,"title":{},"body":{"injectables/HelperService.html":{}}}],["showerrordialogcomponent",{"_index":202,"title":{"components/ShowErrorDialogComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["showfilter",{"_index":3236,"title":{},"body":{"components/ShopComponent.html":{}}}],["showing",{"_index":1791,"title":{},"body":{"injectables/HelperService.html":{}}}],["showloadmore",{"_index":3140,"title":{},"body":{"components/SearchComponent.html":{}}}],["showsavechanges",{"_index":3777,"title":{},"body":{"components/UserCartComponent.html":{}}}],["showspinner",{"_index":1730,"title":{},"body":{"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/UserCartComponent.html":{}}}],["sidebar",{"_index":3381,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":207,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["sidebar.component.css",{"_index":3382,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":3383,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar/sidebar.component",{"_index":1336,"title":{},"body":{"modules/ComponentModule.html":{}}}],["sidebarcomponent",{"_index":206,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"modules/ComponentModule.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["sidenav",{"_index":2317,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["sign",{"_index":1583,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{}}}],["single",{"_index":855,"title":{},"body":{"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["sit",{"_index":1573,"title":{},"body":{"components/FooterComponent.html":{}}}],["size",{"_index":2451,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["skip",{"_index":1605,"title":{},"body":{"classes/GetProductsByRangeDto.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{}}}],["slice",{"_index":1300,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"components/ShopComponent.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["snackbar",{"_index":1738,"title":{},"body":{"injectables/HelperService.html":{}}}],["social",{"_index":1903,"title":{},"body":{"components/HomeComponent.html":{}}}],["solid",{"_index":2355,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["sort",{"_index":2057,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"modules/ChatbotModule.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"components/ErrorComponent.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"modules/ErrorModule.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"modules/FileModule.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"modules/MaterialModule.html":{},"modules/MdbModule.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"modules/NgxModule.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"modules/PipesModule.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"modules/SharedModule.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["sources",{"_index":1821,"title":{},"body":{"injectables/HelperService.html":{}}}],["spacer",{"_index":1959,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["spacing",{"_index":2472,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["span')).gettext",{"_index":532,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":4158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":2130,"title":{},"body":{"components/LoginComponent.html":{}}}],["spin",{"_index":360,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["spinner",{"_index":1735,"title":{},"body":{"injectables/HelperService.html":{},"modules/MaterialModule.html":{},"modules/NgxModule.html":{},"dependencies.html":{}}}],["spinners",{"_index":1796,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/.../activity",{"_index":3973,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../api",{"_index":4063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":4068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../countries.ts",{"_index":4067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":4070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":4069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../gender.enum.ts",{"_index":3975,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../get",{"_index":4011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../material.module.ts",{"_index":4071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mdb.module.ts",{"_index":4072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../must",{"_index":4013,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ngx.module.ts",{"_index":4073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order",{"_index":3977,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../payment",{"_index":3979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shop.component.ts",{"_index":3976,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../states.ts",{"_index":4076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":4066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":3981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/commons/api",{"_index":4077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/commons/classes/abstract",{"_index":6,"title":{},"body":{"classes/AbstractCategory.html":{}}}],["src/app/commons/classes/billing",{"_index":736,"title":{},"body":{"classes/BillingAddress.html":{}}}],["src/app/commons/classes/contact.ts",{"_index":1339,"title":{},"body":{"classes/Contact.html":{}}}],["src/app/commons/classes/contact.ts:2",{"_index":1340,"title":{},"body":{"classes/Contact.html":{}}}],["src/app/commons/classes/contact.ts:3",{"_index":1341,"title":{},"body":{"classes/Contact.html":{}}}],["src/app/commons/classes/item",{"_index":2095,"title":{},"body":{"classes/ItemTag.html":{}}}],["src/app/commons/constants.ts",{"_index":4168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/commons/constants/countries.ts",{"_index":4159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/commons/enums/activity",{"_index":3983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/commons/enums/gender.enum.ts",{"_index":3998,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/commons/enums/order",{"_index":4001,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/commons/enums/payment",{"_index":4003,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/commons/enums/user",{"_index":4005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/commons/guards/user",{"_index":3767,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["src/app/commons/helpers/functions/error",{"_index":1482,"title":{},"body":{"classes/ErrorMessages.html":{}}}],["src/app/commons/helpers/functions/get",{"_index":4015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/commons/interfaces/checkout",{"_index":1261,"title":{},"body":{"interfaces/CheckoutReturnData.html":{}}}],["src/app/commons/interfaces/login",{"_index":2170,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/app/commons/interfaces/remove",{"_index":3033,"title":{},"body":{"interfaces/RemoveCartItem.html":{}}}],["src/app/commons/pipes/category.pipe.ts",{"_index":1024,"title":{},"body":{"pipes/CategoryPipe.html":{}}}],["src/app/commons/pipes/category.pipe.ts:9",{"_index":1029,"title":{},"body":{"pipes/CategoryPipe.html":{}}}],["src/app/commons/pipes/general.pipe.ts",{"_index":1593,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["src/app/commons/pipes/general.pipe.ts:8",{"_index":1596,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["src/app/commons/pipes/pipes.module.ts",{"_index":2741,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/commons/pipes/product",{"_index":2787,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["src/app/commons/pipes/tag.pipe.ts",{"_index":3673,"title":{},"body":{"pipes/TagPipe.html":{}}}],["src/app/commons/pipes/tag.pipe.ts:9",{"_index":3676,"title":{},"body":{"pipes/TagPipe.html":{}}}],["src/app/commons/public",{"_index":31,"title":{},"body":{"classes/ActivityDto.html":{},"classes/AuthCredentialsDto.html":{},"classes/CategoryDto.html":{},"classes/ContactMessageDto.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/EmailLoginDto.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"classes/InsertTagDto.html":{},"classes/OrderDto.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ResetPasswordDto.html":{},"classes/SubCategoryDto.html":{},"classes/TagDto.html":{},"classes/UpdateProductDto.html":{}}}],["src/app/components/component.module.ts",{"_index":1334,"title":{},"body":{"modules/ComponentModule.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":1559,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:12",{"_index":1565,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:9",{"_index":1564,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":2311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":2334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":2323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:21",{"_index":2330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:25",{"_index":2320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:29",{"_index":2331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:30",{"_index":2325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:31",{"_index":2324,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:35",{"_index":2321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts",{"_index":3380,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:19",{"_index":3384,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:20",{"_index":3390,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:24",{"_index":3386,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:25",{"_index":3385,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:27",{"_index":3389,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/components/sidebar/sidebar.component.ts:39",{"_index":3388,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/layouts/auth/auth.component.ts",{"_index":581,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/layouts/auth/auth.component.ts:10",{"_index":584,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/layouts/auth/auth.component.ts:12",{"_index":586,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/layouts/auth/auth.component.ts:13",{"_index":587,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/layouts/auth/auth.component.ts:16",{"_index":585,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/layouts/auth/auth.module.ts",{"_index":603,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/layouts/cart",{"_index":774,"title":{},"body":{"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{}}}],["src/app/layouts/category",{"_index":999,"title":{},"body":{"components/CategoryLayoutComponent.html":{},"modules/CategoryLayoutModule.html":{}}}],["src/app/layouts/common",{"_index":1316,"title":{},"body":{"components/CommonLayoutComponent.html":{},"modules/CommonLayoutModule.html":{}}}],["src/app/layouts/dashboard/dashboard.component.ts",{"_index":1440,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layouts/dashboard/dashboard.component.ts:11",{"_index":1445,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layouts/dashboard/dashboard.component.ts:7",{"_index":1444,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/layouts/dashboard/dashboard.module.ts",{"_index":1450,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/layouts/error/error.component.ts",{"_index":1467,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/layouts/error/error.component.ts:12",{"_index":1471,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/layouts/error/error.component.ts:8",{"_index":1470,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/layouts/error/error.module.ts",{"_index":1509,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/layouts/invoice",{"_index":2006,"title":{},"body":{"components/InvoiceLayoutComponent.html":{},"modules/InvoiceLayoutModule.html":{}}}],["src/app/layouts/order",{"_index":2584,"title":{},"body":{"components/OrderLayoutComponent.html":{},"modules/OrderLayoutModule.html":{}}}],["src/app/layouts/payment",{"_index":2691,"title":{},"body":{"components/PaymentLayoutComponent.html":{},"modules/PaymentLayoutModule.html":{}}}],["src/app/layouts/product",{"_index":2794,"title":{},"body":{"components/ProductLayoutComponent.html":{},"modules/ProductLayoutModule.html":{}}}],["src/app/layouts/shop",{"_index":3341,"title":{},"body":{"components/ShopLayoutComponent.html":{},"modules/ShopLayoutModule.html":{}}}],["src/app/layouts/sub",{"_index":3528,"title":{},"body":{"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{}}}],["src/app/layouts/tag",{"_index":3657,"title":{},"body":{"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{}}}],["src/app/models/activity/activity.model.ts",{"_index":43,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/activity/activity.model.ts:11",{"_index":46,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/activity/activity.model.ts:13",{"_index":48,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/activity/activity.model.ts:5",{"_index":47,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/activity/activity.model.ts:7",{"_index":45,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/activity/activity.model.ts:9",{"_index":49,"title":{},"body":{"classes/ActivityModel.html":{}}}],["src/app/models/auth/user.model.ts",{"_index":3825,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:11",{"_index":3844,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:13",{"_index":3839,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:15",{"_index":3838,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:17",{"_index":3840,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:19",{"_index":3842,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:21",{"_index":3845,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:23",{"_index":3843,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:25",{"_index":3846,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:27",{"_index":3847,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:29",{"_index":3836,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:31",{"_index":3834,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:33",{"_index":3835,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:7",{"_index":3841,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/auth/user.model.ts:9",{"_index":3848,"title":{},"body":{"classes/UserModel.html":{}}}],["src/app/models/cart/cart",{"_index":801,"title":{},"body":{"classes/CartProductModel.html":{}}}],["src/app/models/cart/cart.model.ts",{"_index":793,"title":{},"body":{"classes/CartModel.html":{}}}],["src/app/models/cart/cart.model.ts:4",{"_index":798,"title":{},"body":{"classes/CartModel.html":{}}}],["src/app/models/cart/cart.model.ts:6",{"_index":799,"title":{},"body":{"classes/CartModel.html":{}}}],["src/app/models/cart/cart.model.ts:8",{"_index":797,"title":{},"body":{"classes/CartModel.html":{}}}],["src/app/models/categories/category.model.ts",{"_index":1008,"title":{},"body":{"classes/CategoryModel.html":{}}}],["src/app/models/categories/category.model.ts:5",{"_index":1012,"title":{},"body":{"classes/CategoryModel.html":{}}}],["src/app/models/categories/sub",{"_index":3537,"title":{},"body":{"classes/SubCategoryModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["src/app/models/chatbot/message.ts",{"_index":2306,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/chatbot/message.ts:1",{"_index":2309,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/chatbot/message.ts:2",{"_index":2310,"title":{},"body":{"classes/Message.html":{}}}],["src/app/models/invoice/invoice.model.ts",{"_index":2014,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:10",{"_index":2018,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:12",{"_index":2021,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:14",{"_index":2023,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:2",{"_index":2019,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:4",{"_index":2020,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:6",{"_index":2022,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/invoice/invoice.model.ts:8",{"_index":2017,"title":{},"body":{"classes/InvoiceModel.html":{}}}],["src/app/models/notifications/classes/content.ts",{"_index":1356,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/notifications/classes/content.ts:2",{"_index":1358,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/notifications/classes/content.ts:3",{"_index":1359,"title":{},"body":{"classes/Content.html":{}}}],["src/app/models/notifications/classes/key.ts",{"_index":2101,"title":{},"body":{"classes/Key.html":{}}}],["src/app/models/notifications/classes/key.ts:2",{"_index":2104,"title":{},"body":{"classes/Key.html":{}}}],["src/app/models/notifications/classes/key.ts:3",{"_index":2103,"title":{},"body":{"classes/Key.html":{}}}],["src/app/models/notifications/classes/notification",{"_index":2503,"title":{},"body":{"classes/NotificationData.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{}}}],["src/app/models/notifications/classes/notification.ts",{"_index":2493,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:10",{"_index":2496,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:5",{"_index":2501,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:6",{"_index":2497,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:7",{"_index":2500,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:8",{"_index":2502,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/classes/notification.ts:9",{"_index":2499,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notifications/models/notification",{"_index":2509,"title":{},"body":{"classes/NotificationEntity.html":{}}}],["src/app/models/notifications/models/subscriber.ts",{"_index":3609,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscriber.ts:10",{"_index":3616,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscriber.ts:12",{"_index":3617,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscriber.ts:4",{"_index":3615,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscriber.ts:6",{"_index":3613,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscriber.ts:8",{"_index":3614,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/app/models/notifications/models/subscribers",{"_index":3619,"title":{},"body":{"classes/SubscribersNotifications.html":{}}}],["src/app/models/orders/order",{"_index":2575,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["src/app/models/orders/order.model.ts",{"_index":2593,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:10",{"_index":2598,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:12",{"_index":2605,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:14",{"_index":2597,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:16",{"_index":2602,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:18",{"_index":2601,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:20",{"_index":2606,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:22",{"_index":2600,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:6",{"_index":2599,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/orders/order.model.ts:8",{"_index":2604,"title":{},"body":{"classes/OrderModel.html":{}}}],["src/app/models/payments/payment.model.ts",{"_index":2694,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:10",{"_index":2699,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:12",{"_index":2700,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:14",{"_index":2698,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:4",{"_index":2697,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:6",{"_index":2696,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/payments/payment.model.ts:8",{"_index":2695,"title":{},"body":{"classes/PaymentModel.html":{}}}],["src/app/models/products/product",{"_index":2897,"title":{},"body":{"classes/ProductTagModel.html":{}}}],["src/app/models/products/product.model.ts",{"_index":2802,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:10",{"_index":2812,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:12",{"_index":2810,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:14",{"_index":2818,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:16",{"_index":2813,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:18",{"_index":2809,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:20",{"_index":2815,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:22",{"_index":2819,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:24",{"_index":2816,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:26",{"_index":2808,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:28",{"_index":2821,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:30",{"_index":2820,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:4",{"_index":2811,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:6",{"_index":2814,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/products/product.model.ts:8",{"_index":2817,"title":{},"body":{"classes/ProductModel.html":{}}}],["src/app/models/profile/profile.model.ts",{"_index":2910,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:11",{"_index":2913,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:13",{"_index":2911,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:15",{"_index":2912,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:17",{"_index":2917,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:5",{"_index":2916,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:7",{"_index":2914,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/profile/profile.model.ts:9",{"_index":2915,"title":{},"body":{"classes/ProfileModel.html":{}}}],["src/app/models/tag/tag.model.ts",{"_index":3668,"title":{},"body":{"classes/TagModel.html":{}}}],["src/app/models/tag/tag.model.ts:2",{"_index":3670,"title":{},"body":{"classes/TagModel.html":{}}}],["src/app/models/tag/tag.model.ts:4",{"_index":3671,"title":{},"body":{"classes/TagModel.html":{}}}],["src/app/models/tag/tag.model.ts:6",{"_index":3669,"title":{},"body":{"classes/TagModel.html":{}}}],["src/app/models/tag/tag.model.ts:8",{"_index":3672,"title":{},"body":{"classes/TagModel.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts",{"_index":1096,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:11",{"_index":1109,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:12",{"_index":1112,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:13",{"_index":1111,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:14",{"_index":1105,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:19",{"_index":1106,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.component.ts:23",{"_index":1107,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["src/app/modules/chatbot/chatbot.module.ts",{"_index":1148,"title":{},"body":{"modules/ChatbotModule.html":{}}}],["src/app/modules/stripe",{"_index":3395,"title":{},"body":{"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{}}}],["src/app/pages/auth/login/login.component.ts",{"_index":2107,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:27",{"_index":2119,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:28",{"_index":2120,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:30",{"_index":2122,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:31",{"_index":2123,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:32",{"_index":2115,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:39",{"_index":2121,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:45",{"_index":2116,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:63",{"_index":2125,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:67",{"_index":2127,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:72",{"_index":2118,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/login/login.component.ts:87",{"_index":2117,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts",{"_index":3001,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:19",{"_index":3011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:20",{"_index":3009,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:21",{"_index":3006,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:27",{"_index":3010,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:33",{"_index":3012,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:37",{"_index":3013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:42",{"_index":3015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:46",{"_index":3007,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/register/register.component.ts:64",{"_index":3008,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/pages/auth/reset",{"_index":3040,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts",{"_index":1185,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:17",{"_index":1195,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:19",{"_index":1194,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:20",{"_index":1192,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:22",{"_index":1196,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:23",{"_index":1197,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:29",{"_index":1193,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/checkout/checkout.component.ts:58",{"_index":1199,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["src/app/pages/cart/user",{"_index":3775,"title":{},"body":{"components/UserCartComponent.html":{}}}],["src/app/pages/category/category",{"_index":968,"title":{},"body":{"components/CategoryDetailsComponent.html":{}}}],["src/app/pages/common/search",{"_index":3077,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["src/app/pages/common/search/search.component.ts",{"_index":3131,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:119",{"_index":3151,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:16",{"_index":3152,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:17",{"_index":3157,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:18",{"_index":3156,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:19",{"_index":3158,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:20",{"_index":3155,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:21",{"_index":3159,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:22",{"_index":3142,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:25",{"_index":3154,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:26",{"_index":3153,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:46",{"_index":3148,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:49",{"_index":3150,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:71",{"_index":3147,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:80",{"_index":3143,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:84",{"_index":3144,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/common/search/search.component.ts:97",{"_index":3145,"title":{},"body":{"components/SearchComponent.html":{}}}],["src/app/pages/dashboard/create",{"_index":1383,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts",{"_index":1826,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:22",{"_index":1842,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:23",{"_index":1845,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:24",{"_index":1843,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:25",{"_index":1848,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:26",{"_index":1847,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:27",{"_index":1837,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:29",{"_index":1844,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:37",{"_index":1839,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:67",{"_index":1850,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:71",{"_index":1840,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:83",{"_index":1838,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/home/home.component.ts:89",{"_index":1841,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/dashboard/user",{"_index":3855,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/app/pages/error/no",{"_index":2407,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts",{"_index":2052,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:16",{"_index":2062,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:24",{"_index":2067,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:25",{"_index":2070,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:26",{"_index":2059,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:28",{"_index":2064,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:29",{"_index":2063,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:30",{"_index":2071,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:44",{"_index":2061,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:48",{"_index":2060,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/invoices/invoices/invoices.component.ts:53",{"_index":2072,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["src/app/pages/orders/order",{"_index":2535,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts",{"_index":2662,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:21",{"_index":2672,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:30",{"_index":2675,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:31",{"_index":2676,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:32",{"_index":2667,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:34",{"_index":2674,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:36",{"_index":2673,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:37",{"_index":2677,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:58",{"_index":2671,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:62",{"_index":2670,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:67",{"_index":2669,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/orders/orders/orders.component.ts:75",{"_index":2678,"title":{},"body":{"components/OrdersComponent.html":{}}}],["src/app/pages/product/product",{"_index":2746,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts",{"_index":3230,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:102",{"_index":3255,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:114",{"_index":3256,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:126",{"_index":3257,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:137",{"_index":3253,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:144",{"_index":3258,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:184",{"_index":3264,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:188",{"_index":3270,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:192",{"_index":3272,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:32",{"_index":3276,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:33",{"_index":3286,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:34",{"_index":3283,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:35",{"_index":3282,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:36",{"_index":3277,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:37",{"_index":3287,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:38",{"_index":3284,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:39",{"_index":3281,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:40",{"_index":3275,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:41",{"_index":3279,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:42",{"_index":3280,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:43",{"_index":3278,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:49",{"_index":3250,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:51",{"_index":3274,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:52",{"_index":3285,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:53",{"_index":3273,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:57",{"_index":3261,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:62",{"_index":3266,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:66",{"_index":3268,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:70",{"_index":3259,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:94",{"_index":3262,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/shop/shop/shop.component.ts:98",{"_index":3251,"title":{},"body":{"components/ShopComponent.html":{}}}],["src/app/pages/sub",{"_index":3479,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["src/app/pages/tag/tag",{"_index":3635,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts",{"_index":3713,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:15",{"_index":3717,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:17",{"_index":3723,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:18",{"_index":3721,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:19",{"_index":3722,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:22",{"_index":3720,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/pages/tag/tags/tags.component.ts:31",{"_index":3719,"title":{},"body":{"components/TagsComponent.html":{}}}],["src/app/services/auth/auth.service.ts",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:13",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:18",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:22",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:27",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:31",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:36",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:40",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:46",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/auth.service.ts:51",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth/error.interceptor.ts",{"_index":1472,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/services/auth/error.interceptor.ts:14",{"_index":1473,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/services/auth/error.interceptor.ts:20",{"_index":1474,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/services/auth/token.interceptor.ts",{"_index":3725,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/services/auth/token.interceptor.ts:10",{"_index":3726,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/services/auth/token.interceptor.ts:15",{"_index":3727,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["src/app/services/auth/token.service.ts",{"_index":3736,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/auth/token.service.ts:10",{"_index":3737,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/auth/token.service.ts:15",{"_index":3738,"title":{},"body":{"injectables/TokenService.html":{}}}],["src/app/services/cart/cart.service.ts",{"_index":817,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:12",{"_index":825,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:17",{"_index":833,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:21",{"_index":832,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:25",{"_index":827,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:30",{"_index":829,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:35",{"_index":831,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:39",{"_index":841,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:46",{"_index":835,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/cart/cart.service.ts:51",{"_index":837,"title":{},"body":{"injectables/CartService.html":{}}}],["src/app/services/category/category.service.ts",{"_index":1035,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category/category.service.ts:10",{"_index":1038,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category/category.service.ts:15",{"_index":1039,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category/category.service.ts:20",{"_index":1041,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/services/category/sub",{"_index":3545,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["src/app/services/contact/contact.service.ts",{"_index":1349,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact/contact.service.ts:10",{"_index":1351,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/contact/contact.service.ts:14",{"_index":1353,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/app/services/invoice/invoice.service.ts",{"_index":2025,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/app/services/invoice/invoice.service.ts:10",{"_index":2027,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/app/services/invoice/invoice.service.ts:16",{"_index":2028,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/app/services/notification/notification.service.ts",{"_index":2524,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notification/notification.service.ts:10",{"_index":2527,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/notification/notification.service.ts:15",{"_index":2530,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/app/services/order/order.service.ts",{"_index":2611,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/order/order.service.ts:12",{"_index":2614,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/order/order.service.ts:17",{"_index":2619,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/order/order.service.ts:21",{"_index":2621,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/order/order.service.ts:25",{"_index":2616,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/order/order.service.ts:29",{"_index":2618,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/services/payment/payment.service.ts",{"_index":2703,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/payment/payment.service.ts:11",{"_index":2705,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/payment/payment.service.ts:16",{"_index":2707,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/payment/payment.service.ts:21",{"_index":2706,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/app/services/product/product.service.ts",{"_index":2823,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:12",{"_index":2826,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:17",{"_index":2834,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:25",{"_index":2832,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:29",{"_index":2831,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:33",{"_index":2835,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:38",{"_index":2830,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/product/product.service.ts:43",{"_index":2828,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/app/services/profile/profile.service.ts",{"_index":2920,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:11",{"_index":2923,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:16",{"_index":2932,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:20",{"_index":2928,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:25",{"_index":2931,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:30",{"_index":2934,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:35",{"_index":2926,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile/profile.service.ts:40",{"_index":2929,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/search/search.service.ts",{"_index":3184,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search/search.service.ts:13",{"_index":3188,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search/search.service.ts:9",{"_index":3186,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/tag/tag.service.ts",{"_index":3680,"title":{},"body":{"injectables/TagService.html":{}}}],["src/app/services/tag/tag.service.ts:13",{"_index":3682,"title":{},"body":{"injectables/TagService.html":{}}}],["src/app/services/tag/tag.service.ts:18",{"_index":3684,"title":{},"body":{"injectables/TagService.html":{}}}],["src/app/services/tag/tag.service.ts:22",{"_index":3683,"title":{},"body":{"injectables/TagService.html":{}}}],["src/app/shared/components/add",{"_index":58,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["src/app/shared/components/invalid",{"_index":1995,"title":{},"body":{"components/InvalidCredentialsComponent.html":{}}}],["src/app/shared/components/login",{"_index":2150,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["src/app/shared/components/products/add",{"_index":271,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["src/app/shared/components/show",{"_index":3349,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["src/app/shared/modules/file.module.ts",{"_index":1553,"title":{},"body":{"modules/FileModule.html":{}}}],["src/app/shared/modules/material.module.ts",{"_index":2176,"title":{},"body":{"modules/MaterialModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/modules/mdb.module.ts",{"_index":2271,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/modules/ngx.module.ts",{"_index":2388,"title":{},"body":{"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/services/global",{"_index":1631,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["src/app/shared/services/helper.service.ts",{"_index":1708,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:108",{"_index":1742,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:117",{"_index":1771,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:118",{"_index":1765,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:121",{"_index":1752,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:19",{"_index":1768,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:20",{"_index":1772,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:21",{"_index":1773,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:22",{"_index":1766,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:23",{"_index":1761,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:24",{"_index":1763,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:25",{"_index":1760,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:33",{"_index":1770,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:35",{"_index":1756,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:40",{"_index":1769,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:41",{"_index":1775,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:45",{"_index":1758,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:49",{"_index":1740,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:59",{"_index":1774,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:62",{"_index":1743,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:67",{"_index":1750,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:71",{"_index":1744,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:77",{"_index":1759,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:81",{"_index":1745,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:85",{"_index":1754,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/helper.service.ts:94",{"_index":1747,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/shared/services/interceptors/check",{"_index":1156,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["src/app/shared/shared",{"_index":3204,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/shared/validators/must",{"_index":4016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/state",{"_index":225,"title":{},"body":{"classes/AddToCart.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":4197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":4194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":4156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":4021,"title":{"index.html":{}},"body":{}}],["startloadingflag",{"_index":1718,"title":{},"body":{"injectables/HelperService.html":{}}}],["startslice",{"_index":3237,"title":{},"body":{"components/ShopComponent.html":{}}}],["startuploadingimage",{"_index":3857,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["state",{"_index":310,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"injectables/CategoryState.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"components/CreateUserProfileComponent.html":{},"classes/FetchUserCart.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["state.cart",{"_index":940,"title":{},"body":{"injectables/CartState.html":{}}}],["state.categories",{"_index":1068,"title":{},"body":{"injectables/CategoryState.html":{}}}],["state.invoices",{"_index":2048,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["state.latestproducts",{"_index":2887,"title":{},"body":{"injectables/ProductState.html":{}}}],["state.mostsalesproducts",{"_index":2888,"title":{},"body":{"injectables/ProductState.html":{}}}],["state.orders",{"_index":2650,"title":{},"body":{"injectables/OrderState.html":{}}}],["state.payments",{"_index":2730,"title":{},"body":{"injectables/PaymentState.html":{}}}],["state.productstags",{"_index":3709,"title":{},"body":{"injectables/TagState.html":{}}}],["state.profile",{"_index":2980,"title":{},"body":{"injectables/ProfileState.html":{}}}],["state.shopproducts",{"_index":2886,"title":{},"body":{"injectables/ProductState.html":{}}}],["state.subcategories",{"_index":3605,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["state.subcategoriestags",{"_index":3708,"title":{},"body":{"injectables/TagState.html":{}}}],["state.token",{"_index":712,"title":{},"body":{"injectables/AuthState.html":{}}}],["state.user",{"_index":714,"title":{},"body":{"injectables/AuthState.html":{}}}],["state.user.username",{"_index":713,"title":{},"body":{"injectables/AuthState.html":{}}}],["statecontext",{"_index":683,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["states",{"_index":464,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["statesnames",{"_index":465,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":231,"title":{},"body":{"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/HomeComponent.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["status",{"_index":1176,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderModel.html":{},"components/OrdersComponent.html":{}}}],["status.enum",{"_index":2610,"title":{},"body":{"classes/OrderModel.html":{},"components/OrdersComponent.html":{}}}],["status.enum.ts",{"_index":3978,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statuscode",{"_index":1782,"title":{},"body":{"injectables/HelperService.html":{}}}],["statustext",{"_index":1179,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["sticky",{"_index":2371,"title":{},"body":{"components/NavbarComponent.html":{}}}],["stickyheadermodule",{"_index":2291,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["stock",{"_index":1606,"title":{},"body":{"classes/GetProductsByRangeDto.html":{},"classes/ProductsCustomFilterDto.html":{},"components/ShopComponent.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"interfaces/InvoiceStateModel.html":{},"interfaces/OrderStateModel.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetCustomerToken.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{}}}],["storageoption",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["storageoption.localstorage",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["store",{"_index":283,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":4040,"title":{},"body":{"index.html":{}}}],["strange",{"_index":3375,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"classes/AddToCart.html":{},"components/AppComponent.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"classes/CartProductModel.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"classes/Content.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InvoiceModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrdersComponent.html":{},"injectables/PaymentService.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/StripeCheckoutComponent.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["string(value",{"_index":1786,"title":{},"body":{"injectables/HelperService.html":{}}}],["stripe",{"_index":209,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["stripe/stripe",{"_index":3424,"title":{},"body":{"components/StripeCheckoutComponent.html":{},"dependencies.html":{}}}],["stripecheckoutcomponent",{"_index":208,"title":{"components/StripeCheckoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"modules/StripeIntegrationModule.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["stripedata",{"_index":1364,"title":{},"body":{"classes/CreatePaymentDto.html":{},"components/StripeCheckoutComponent.html":{}}}],["stripedata.controls",{"_index":3448,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripedata.description",{"_index":3458,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripedata.source",{"_index":3460,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripeelements",{"_index":3411,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripeelementsoptions",{"_index":3413,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripeerror",{"_index":3423,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["stripeid",{"_index":3831,"title":{},"body":{"classes/UserModel.html":{}}}],["stripeintegrationmodule",{"_index":440,"title":{"modules/StripeIntegrationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules.html":{},"overview.html":{}}}],["stripepublishedkey",{"_index":4195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stripeservice",{"_index":3403,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["style",{"_index":2482,"title":{},"body":{"components/NoInternetComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["styles",{"_index":55,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["styleurls",{"_index":68,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["sub",{"_index":211,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"classes/CategoryModel.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearSubCategory.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["sub_category",{"_index":3294,"title":{},"body":{"components/ShopComponent.html":{},"miscellaneous/enumerations.html":{}}}],["subc.name",{"_index":3394,"title":{},"body":{"components/SidebarComponent.html":{}}}],["subc.subcategorylayoutmodule",{"_index":558,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["subcategories",{"_index":1010,"title":{},"body":{"classes/CategoryModel.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"interfaces/TagStateModel.html":{},"miscellaneous/variables.html":{}}}],["subcategories(state",{"_index":3601,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["subcategoriesarray",{"_index":3136,"title":{},"body":{"components/SearchComponent.html":{}}}],["subcategoriestags",{"_index":1310,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"injectables/GlobalDataService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["subcategoriestags(state",{"_index":3702,"title":{},"body":{"injectables/TagState.html":{}}}],["subcategory",{"_index":1293,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["subcategory.categoryid",{"_index":1700,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["subcategory.id",{"_index":1703,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/TagItemsComponent.html":{}}}],["subcategory.name",{"_index":992,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"injectables/GlobalDataService.html":{},"components/SearchComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagItemsComponent.html":{}}}],["subcategory.products",{"_index":3521,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["subcategory.products.find(p",{"_index":2776,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["subcategoryactions",{"_index":1296,"title":{},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["subcategoryactions.clearsubcategory",{"_index":3603,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["subcategoryactions.fetchallsubcategories",{"_index":2765,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{}}}],["subcategoryactions.fetchsubcategoriesbytagname",{"_index":3290,"title":{},"body":{"components/ShopComponent.html":{},"injectables/SubCategoryState.html":{}}}],["subcategorydetailscomponent",{"_index":210,"title":{"components/SubCategoryDetailsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"modules/SubCategoryLayoutModule.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["subcategorydto",{"_index":997,"title":{"classes/SubCategoryDto.html":{}},"body":{"classes/CategoryDto.html":{},"classes/SubCategoryDto.html":{},"injectables/SubCategoryService.html":{}}}],["subcategoryendpoints",{"_index":4120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subcategoryid",{"_index":2754,"title":{},"body":{"components/ProductDetailsComponent.html":{},"classes/ProductModel.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryTagModel.html":{}}}],["subcategorylayoutcomponent",{"_index":212,"title":{"components/SubCategoryLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["subcategorylayoutmodule",{"_index":3530,"title":{"modules/SubCategoryLayoutModule.html":{}},"body":{"modules/SubCategoryLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["subcategorylayoutroutes",{"_index":3535,"title":{},"body":{"modules/SubCategoryLayoutModule.html":{}}}],["subcategorymodel",{"_index":1011,"title":{"classes/SubCategoryModel.html":{}},"body":{"classes/CategoryModel.html":{},"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/GlobalDataService.html":{},"components/ProductDetailsComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{}}}],["subcategoryservice",{"_index":2848,"title":{"injectables/SubCategoryService.html":{}},"body":{"injectables/ProductState.html":{},"components/SearchBarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{}}}],["subcategorystate",{"_index":1676,"title":{"injectables/SubCategoryState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/SubCategoryState.html":{},"miscellaneous/variables.html":{}}}],["subcategorystatemodel",{"_index":1295,"title":{"interfaces/SubCategoryStateModel.html":{}},"body":{"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{}}}],["subcategorytag",{"_index":3238,"title":{},"body":{"components/ShopComponent.html":{}}}],["subcategorytag.id",{"_index":3309,"title":{},"body":{"components/ShopComponent.html":{}}}],["subcategorytagmodel",{"_index":1305,"title":{"classes/SubCategoryTagModel.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/ShopComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"classes/SubCategoryTagModel.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{}}}],["subcategorytags",{"_index":3539,"title":{},"body":{"classes/SubCategoryModel.html":{}}}],["subfolder",{"_index":1076,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{},"injectables/SubCategoryService.html":{}}}],["subject",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"classes/ContactMessageDto.html":{},"components/HomeComponent.html":{}}}],["submitlogin",{"_index":2113,"title":{},"body":{"components/LoginComponent.html":{}}}],["submitregister",{"_index":3005,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submitsearch",{"_index":3087,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["subscribe",{"_index":1935,"title":{},"body":{"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["subscribe((subcategories",{"_index":3650,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["subscribe((value",{"_index":3117,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["subscribe(result",{"_index":2142,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscriber",{"_index":1829,"title":{"classes/Subscriber.html":{}},"body":{"components/HomeComponent.html":{},"classes/Subscriber.html":{}}}],["subscriberid",{"_index":3622,"title":{},"body":{"classes/SubscribersNotifications.html":{},"classes/UserModel.html":{}}}],["subscribers",{"_index":2516,"title":{},"body":{"classes/NotificationEntity.html":{},"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["subscribersnotifications",{"_index":2511,"title":{"classes/SubscribersNotifications.html":{}},"body":{"classes/NotificationEntity.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{}}}],["subscribetonotifications",{"_index":1832,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscription",{"_index":1475,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{}}}],["subscriptiondto",{"_index":2534,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["subscriptionform",{"_index":1830,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscriptions",{"_index":1719,"title":{},"body":{"injectables/HelperService.html":{}}}],["success",{"_index":2475,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["success:focus",{"_index":2480,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["success:hover",{"_index":2479,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["successful",{"_index":1140,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["successfully",{"_index":340,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["suitable",{"_index":1919,"title":{},"body":{"components/HomeComponent.html":{}}}],["super",{"_index":1921,"title":{},"body":{"components/HomeComponent.html":{}}}],["super_admin",{"_index":4006,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":3377,"title":{},"body":{"components/ShowErrorDialogComponent.html":{},"modules.html":{}}}],["svg",{"_index":4055,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":3128,"title":{},"body":{"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["swpush",{"_index":1836,"title":{},"body":{"components/HomeComponent.html":{}}}],["syria",{"_index":4160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t.taglayoutmodule",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["table",{"_index":2093,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{}}}],["tablemodule",{"_index":2280,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["tag",{"_index":214,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/ClearProducts.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"classes/UpdateShopProducts.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tag.actions",{"_index":3704,"title":{},"body":{"injectables/TagState.html":{}}}],["tag.dto.ts",{"_index":1993,"title":{},"body":{"classes/InsertTagDto.html":{}}}],["tag.dto.ts:2",{"_index":1994,"title":{},"body":{"classes/InsertTagDto.html":{}}}],["tag.model",{"_index":1306,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"classes/ProductModel.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{}}}],["tag.model.ts",{"_index":2898,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["tag.model.ts:4",{"_index":2899,"title":{},"body":{"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["tag.name",{"_index":3335,"title":{},"body":{"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagsComponent.html":{}}}],["tag.pipe",{"_index":2743,"title":{},"body":{"modules/PipesModule.html":{}}}],["tag.ts",{"_index":2096,"title":{},"body":{"classes/ItemTag.html":{}}}],["tag.ts:3",{"_index":2098,"title":{},"body":{"classes/ItemTag.html":{}}}],["tag.ts:5",{"_index":2099,"title":{},"body":{"classes/ItemTag.html":{}}}],["tag.ts:7",{"_index":2100,"title":{},"body":{"classes/ItemTag.html":{}}}],["tagactions",{"_index":1312,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{}}}],["tagactions.cleartags",{"_index":3706,"title":{},"body":{"injectables/TagState.html":{}}}],["tagactions.fetchproductstags",{"_index":3707,"title":{},"body":{"injectables/TagState.html":{}}}],["tagactions.fetchsubcategoriestags",{"_index":3289,"title":{},"body":{"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{}}}],["tagdto",{"_index":3632,"title":{"classes/TagDto.html":{}},"body":{"classes/TagDto.html":{},"injectables/TagService.html":{}}}],["tagendpoints",{"_index":4135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tagid",{"_index":2097,"title":{},"body":{"classes/ItemTag.html":{},"classes/ProductTagModel.html":{},"classes/SubCategoryTagModel.html":{}}}],["tagitemscomponent",{"_index":213,"title":{"components/TagItemsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["taglayoutcomponent",{"_index":216,"title":{"components/TagLayoutComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["taglayoutmodule",{"_index":3658,"title":{"modules/TagLayoutModule.html":{}},"body":{"modules/TagLayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["taglayoutroutes",{"_index":3662,"title":{},"body":{"modules/TagLayoutModule.html":{}}}],["tagmodel",{"_index":3667,"title":{"classes/TagModel.html":{}},"body":{"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{}}}],["tagname",{"_index":263,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/ClearSubCategory.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoryById.html":{},"interfaces/ProductStateModel.html":{},"injectables/SubCategoryService.html":{},"interfaces/SubCategoryStateModel.html":{},"components/TagItemsComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["tagpipe",{"_index":2740,"title":{"pipes/TagPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TagPipe.html":{},"overview.html":{}}}],["tags",{"_index":1304,"title":{},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"classes/GlobalDataDto.html":{},"classes/InsertTagDto.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"injectables/SubCategoryService.html":{},"pipes/TagPipe.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"miscellaneous/variables.html":{}}}],["tags'},{'name",{"_index":218,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["tags.component.css",{"_index":3714,"title":{},"body":{"components/TagsComponent.html":{}}}],["tags.component.html",{"_index":3715,"title":{},"body":{"components/TagsComponent.html":{}}}],["tags.filter(category",{"_index":3678,"title":{},"body":{"pipes/TagPipe.html":{}}}],["tagscomponent",{"_index":217,"title":{"components/TagsComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"modules/TagLayoutModule.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["tagservice",{"_index":3679,"title":{"injectables/TagService.html":{}},"body":{"injectables/TagService.html":{},"injectables/TagState.html":{}}}],["tagsfilter",{"_index":3674,"title":{},"body":{"pipes/TagPipe.html":{}}}],["tagstate",{"_index":1680,"title":{"injectables/TagState.html":{}},"body":{"injectables/GlobalDataService.html":{},"injectables/TagState.html":{},"miscellaneous/variables.html":{}}}],["tagstatemodel",{"_index":1309,"title":{"interfaces/TagStateModel.html":{}},"body":{"classes/ClearTags.html":{},"classes/FetchProductsTags.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchTagById.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{}}}],["take",{"_index":255,"title":{},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/GetProductsByRangeDto.html":{},"injectables/ProductService.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductsCustomFilterDto.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"components/ShopComponent.html":{},"classes/UpdateShopProducts.html":{}}}],["take.tostring",{"_index":2837,"title":{},"body":{"injectables/ProductService.html":{},"injectables/SearchService.html":{}}}],["tap",{"_index":709,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{},"injectables/CategoryState.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"injectables/SubCategoryState.html":{},"injectables/TagState.html":{}}}],["tap((cart",{"_index":942,"title":{},"body":{"injectables/CartState.html":{},"injectables/ProductState.html":{}}}],["tap((categories",{"_index":1070,"title":{},"body":{"injectables/CategoryState.html":{}}}],["tap((data",{"_index":2050,"title":{},"body":{"injectables/InvoiceState.html":{},"injectables/OrderState.html":{},"injectables/PaymentState.html":{},"injectables/ProductState.html":{},"injectables/SubCategoryState.html":{}}}],["tap((profile",{"_index":2982,"title":{},"body":{"injectables/ProfileState.html":{}}}],["tap((result",{"_index":716,"title":{},"body":{"injectables/AuthState.html":{},"injectables/CartState.html":{}}}],["tap((subcategories",{"_index":3607,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["tap((tags",{"_index":3711,"title":{},"body":{"injectables/TagState.html":{}}}],["tap((updatedorder",{"_index":2654,"title":{},"body":{"injectables/OrderState.html":{}}}],["tap((user",{"_index":2733,"title":{},"body":{"injectables/PaymentState.html":{}}}],["team",{"_index":1899,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["template",{"_index":54,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateref",{"_index":298,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["terminate",{"_index":1175,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["test",{"_index":1563,"title":{},"body":{"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["testing",{"_index":1122,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["tests",{"_index":4047,"title":{},"body":{"index.html":{}}}],["textfield",{"_index":369,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["that's",{"_index":1905,"title":{},"body":{"components/HomeComponent.html":{}}}],["that\\'s",{"_index":1990,"title":{},"body":{"components/HomeComponent.html":{}}}],["themselves",{"_index":1911,"title":{},"body":{"components/HomeComponent.html":{}}}],["then(subscriber",{"_index":1872,"title":{},"body":{"components/HomeComponent.html":{}}}],["this._http",{"_index":865,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.delete",{"_index":2945,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this._http.delete(`${apiendpoints.cartendpoints.rootcart}/${cartid}/remove",{"_index":863,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.delete(`${apiendpoints.cartendpoints.rootcart}/clear",{"_index":857,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.delete(`${apiendpoints.orderendpoints.rootorders}/${id}/cancel",{"_index":2624,"title":{},"body":{"injectables/OrderService.html":{}}}],["this._http.delete(`${this.prefixuri}/${id}/delete",{"_index":3587,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.get",{"_index":1044,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/SubCategoryService.html":{}}}],["this._http.get(`${apiendpoints.authendpoints.checkusername}/${username",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.get(`${apiendpoints.cartendpoints.rootcart}/user",{"_index":849,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.get(`${apiendpoints.invoiceendpoints.rootinvoices}/user",{"_index":2029,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this._http.get(`${apiendpoints.orderendpoints.rootorders}/${id}/details",{"_index":2625,"title":{},"body":{"injectables/OrderService.html":{}}}],["this._http.get(`${apiendpoints.orderendpoints.rootorders}/user",{"_index":2622,"title":{},"body":{"injectables/OrderService.html":{}}}],["this._http.get(`${apiendpoints.paymentendpoints.rootpayments}/user",{"_index":2709,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this._http.get(`${apiendpoints.productendpoints.rootproducts}/mix",{"_index":2840,"title":{},"body":{"injectables/ProductService.html":{}}}],["this._http.get(`${apiendpoints.productendpoints.rootproducts}/most",{"_index":2839,"title":{},"body":{"injectables/ProductService.html":{}}}],["this._http.get(`${apiendpoints.productendpoints.rootproducts}/shop",{"_index":2838,"title":{},"body":{"injectables/ProductService.html":{}}}],["this._http.get(`${apiendpoints.profileendpoints.rootprofile}/user",{"_index":2935,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this._http.get(`${apiendpoints.tagendpoints.roottags}/products",{"_index":3687,"title":{},"body":{"injectables/TagService.html":{}}}],["this._http.get(`${apiendpoints.tagendpoints.roottags}/sub",{"_index":3686,"title":{},"body":{"injectables/TagService.html":{}}}],["this._http.get(`${this.prefixuri}/${id",{"_index":3580,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.get(`${this.prefixuri}/search",{"_index":3577,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.get(apiendpoints.categoryendpoints.rootcategories",{"_index":1043,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this._http.get(this.prefixuri",{"_index":3576,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.get(url",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.patch(url",{"_index":2944,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this._http.post",{"_index":853,"title":{},"body":{"injectables/CartService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/ProfileService.html":{},"injectables/SubCategoryService.html":{}}}],["this._http.post(`${apiendpoints.cartendpoints.rootcart}/create",{"_index":850,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.post(`${apiendpoints.productendpoints.rootproducts}/custom",{"_index":2842,"title":{},"body":{"injectables/ProductService.html":{}}}],["this._http.post(`${this.prefixuri}/${id}/add",{"_index":3583,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.post(apiendpoints.authendpoints.loginuser",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.post(apiendpoints.authendpoints.registeruser",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.post(apiendpoints.authendpoints.resetpassword",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.post(apiendpoints.contact.messageuri",{"_index":1355,"title":{},"body":{"injectables/ContactService.html":{}}}],["this._http.post(url",{"_index":2942,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this._http.put",{"_index":2937,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this._http.put(`${apiendpoints.authendpoints.updatetoken}/${email",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._http.put(`${apiendpoints.cartendpoints.rootcart}/${cartid}/update",{"_index":861,"title":{},"body":{"injectables/CartService.html":{}}}],["this._http.put(`${apiendpoints.orderendpoints.rootorders}/${id}/update",{"_index":2623,"title":{},"body":{"injectables/OrderService.html":{}}}],["this._http.put(`${this.prefixuri}/${id}/update",{"_index":3586,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this._http.request('delete",{"_index":3584,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this.actions.pipe(ofactiondispatched(logout)).subscribe",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["this.aftercheckoutcomplete(result",{"_index":955,"title":{},"body":{"injectables/CartState.html":{}}}],["this.authservice.forgotpassword(this.emailrequestform.value.email",{"_index":2141,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(action.payload).pipe",{"_index":715,"title":{},"body":{"injectables/AuthState.html":{}}}],["this.authservice.register(action.payload).pipe",{"_index":720,"title":{},"body":{"injectables/AuthState.html":{}}}],["this.authservice.resetpassword(this.resetpassworddto.value).subscribe",{"_index":3064,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.updatetoken(this.gdservice.user.email).subscribe((data",{"_index":3740,"title":{},"body":{"injectables/TokenService.html":{}}}],["this.baseurl",{"_index":2422,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["this.billingform",{"_index":1208,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.billingform.controls",{"_index":1227,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.billingform.get('phone').valid",{"_index":1224,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.billingform.get('phone').value",{"_index":1223,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.billingform.patchvalue",{"_index":1226,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.billingform.valuechanges.subscribe",{"_index":1221,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":2326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.card",{"_index":3432,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.card.mount('#card",{"_index":3446,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.cartservice.checkoutoncart(action.payload).pipe",{"_index":953,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.checkoutonsingleproduct(action.cartproductid",{"_index":961,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.clearcart().pipe",{"_index":945,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.createusercart().pipe",{"_index":943,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.getusercart().pipe",{"_index":941,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.removecartproductfromcart(action.cartid",{"_index":951,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.removeproductsfromcart(action.payload).pipe",{"_index":963,"title":{},"body":{"injectables/CartState.html":{}}}],["this.cartservice.updatecartproductquantity(action.cartid",{"_index":948,"title":{},"body":{"injectables/CartState.html":{}}}],["this.categories.find(c",{"_index":1699,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["this.categoriesarray",{"_index":3162,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.categoriesarray.length",{"_index":3175,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.category",{"_index":989,"title":{},"body":{"components/CategoryDetailsComponent.html":{}}}],["this.categoryservice.getallcategories().pipe",{"_index":1069,"title":{},"body":{"injectables/CategoryState.html":{}}}],["this.categoryservice.searchbymatchingname(value).subscribe((data",{"_index":3129,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.change.emit",{"_index":1423,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["this.checkonlinestatus",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["this.clearcontactform",{"_index":1864,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.clearerror",{"_index":3463,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.contactmessagedto",{"_index":1859,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.contactmessagedto.controls",{"_index":1861,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.contactmessagedto.reset",{"_index":1867,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.contacts.controls[controlindex",{"_index":119,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["this.contacts.push(this.fb.group",{"_index":111,"title":{},"body":{"components/AddContactsComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.contacts.removeat(index",{"_index":117,"title":{},"body":{"components/AddContactsComponent.html":{}}}],["this.contactservice.sendcontactmessage(this.contactmessagedto.value).subscribe",{"_index":1863,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createcartproductdto)).subscribe",{"_index":335,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["this.createcartproductdto.quantity",{"_index":330,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["this.createorderdto.value",{"_index":3464,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createpaymentdto",{"_index":3426,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createpaymentdto.get('paymentmethod').value",{"_index":3457,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createpaymentdto.get('stripedata",{"_index":3447,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createpaymentdto.get('stripedata').get('description').value",{"_index":3459,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createpaymentdto.patchvalue",{"_index":3454,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.createprofileform",{"_index":1415,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["this.createprofileform.controls",{"_index":1414,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["this.createprofileform.get('contacts",{"_index":1413,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["this.dialog.closeall",{"_index":1790,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.drawer",{"_index":3120,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.drawer.close",{"_index":3121,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.elements",{"_index":3431,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.elements.create('card",{"_index":3433,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.emaillogindto",{"_index":2134,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emaillogindto.get('email",{"_index":2136,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emailrequestform",{"_index":2135,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emailrequestform.get('email",{"_index":2137,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.error",{"_index":1788,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.error.error",{"_index":3372,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["this.error.message",{"_index":3373,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["this.errormessage",{"_index":3363,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["this.errorname",{"_index":3360,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["this.erroroncharge",{"_index":3469,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.erroroncharge.code",{"_index":3451,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.erroroncharge.message",{"_index":3450,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.erroroncharge.type",{"_index":3452,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.errortemplate",{"_index":343,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fb.array",{"_index":1418,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fb.group",{"_index":1209,"title":{},"body":{"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchbysubcategoryname(this.subcategory",{"_index":3329,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.formchanged",{"_index":3901,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.formsubmitted",{"_index":1421,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["this.gdservice.cart",{"_index":322,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["this.gdservice.cart.id",{"_index":334,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["this.gdservice.categories",{"_index":3392,"title":{},"body":{"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.gdservice.categories.find(c",{"_index":987,"title":{},"body":{"components/CategoryDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.gdservice.invoices",{"_index":2084,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.gdservice.latestproducts",{"_index":1857,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.gdservice.mostsalesproducts",{"_index":1855,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.gdservice.orders",{"_index":2679,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.gdservice.profile",{"_index":1426,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.gdservice.shopproducts",{"_index":3300,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.gdservice.subcategories",{"_index":2768,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.gdservice.subcategories.find(s",{"_index":3512,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.gdservice.subcategories.find(sc",{"_index":2773,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["this.gdservice.subcategoriestags",{"_index":3303,"title":{},"body":{"components/ShopComponent.html":{},"components/TagsComponent.html":{}}}],["this.gdservice.token",{"_index":3733,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["this.gdservice.totalpurchase",{"_index":3429,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.gdservice.user.cartid",{"_index":319,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["this.gdservice.user.email",{"_index":3900,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.gdservice.user.profileid",{"_index":3892,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.gdservice.userlogout",{"_index":1480,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"guards/UserAuthGuard.html":{}}}],["this.gdservice.username",{"_index":2140,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.gdservice.username)).subscribe",{"_index":3906,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.helperservice.adjustdata",{"_index":1424,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.helperservice.hidedialog",{"_index":1425,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.helperservice.hidemodal",{"_index":337,"title":{},"body":{"components/AddToCartComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["this.helperservice.hidespinner",{"_index":336,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.helperservice.invoicesdatasource.data",{"_index":2078,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.helperservice.invoicesdatasource.paginator",{"_index":2080,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.helperservice.invoicesdatasource.sort",{"_index":2082,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.helperservice.offlineevent",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["this.helperservice.onimageselect(event",{"_index":3888,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.helperservice.onlineevent",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["this.helperservice.openmodal(this.createuserprofile",{"_index":3893,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.helperservice.opensnackbar",{"_index":1876,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.helperservice.opensnackbar('image",{"_index":3907,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.helperservice.opensnackbar('message",{"_index":1865,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.helperservice.opensnackbar('password",{"_index":3065,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.helperservice.opensnackbar('process",{"_index":3465,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.helperservice.opensnackbar('product",{"_index":338,"title":{},"body":{"components/AddToCartComponent.html":{},"components/UserCartComponent.html":{}}}],["this.helperservice.opensnackbar('profile",{"_index":3903,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.helperservice.opensnackbar(`welcome",{"_index":2139,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.helperservice.orderdatasource.data",{"_index":2682,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.helperservice.orderdatasource.paginator",{"_index":2684,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.helperservice.orderdatasource.sort",{"_index":2685,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.helperservice.setisonline(false",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{}}}],["this.helperservice.setisonline(onlinestatus",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.helperservice.setisonline(true",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.helperservice.showerrordialog(err",{"_index":1885,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.helperservice.showerrordialog(error",{"_index":342,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.helperservice.showerrordialog(this.errortemplate",{"_index":3468,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.helperservice.showspinner",{"_index":332,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.helperservice.subscriptions.push(this.helperservice.offlineevent.subscribe",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.helperservice.subscriptions.push(this.helperservice.onlineevent.subscribe",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.hidespinner",{"_index":1787,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.http.get(`${apiendpoints.search.searchbyname}/${name}/${type",{"_index":3189,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.http.post(apiendpoints.notificationendpoints.newsubscriber",{"_index":2533,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.imageerrormessage",{"_index":1820,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.imageformdata.append('image",{"_index":1806,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.imageformdata.delete('image",{"_index":1817,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.initializeprofile",{"_index":3890,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.invoices",{"_index":2079,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.invoiceservice.getuserinvoices().pipe",{"_index":2049,"title":{},"body":{"injectables/InvoiceState.html":{}}}],["this.isallselected",{"_index":3311,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.isinvalidimagetype",{"_index":1818,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.isonline",{"_index":2423,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["this.issent",{"_index":2146,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.lex",{"_index":1124,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["this.lex.posttext(params",{"_index":1134,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["this.lexstate",{"_index":1141,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["this.loadmoresearch",{"_index":3176,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.loadproducts(subcategory",{"_index":3510,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.loadproducts(subcategorymodel",{"_index":3513,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.loadproducts(this.subcategory",{"_index":3515,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.message",{"_index":2143,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messages.push(new",{"_index":1116,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["this.modalref",{"_index":1793,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.modalref.hide",{"_index":1795,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.modalservice.show(template",{"_index":1794,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.name",{"_index":3166,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.newpasswordtoken",{"_index":3055,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.notifyservice.addpushsubscriber(subscriber",{"_index":1874,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.openmodal(template",{"_index":1789,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.order",{"_index":2547,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["this.orderitemsproducts",{"_index":2549,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["this.orders",{"_index":2683,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.orderservice.cancelorder(action.id).pipe",{"_index":2660,"title":{},"body":{"injectables/OrderState.html":{}}}],["this.orderservice.getorderdetails(id).subscribe((data",{"_index":2546,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["this.orderservice.getuserorders().pipe",{"_index":2651,"title":{},"body":{"injectables/OrderState.html":{}}}],["this.orderservice.updateorder(action.id",{"_index":2652,"title":{},"body":{"injectables/OrderState.html":{}}}],["this.paginator",{"_index":2081,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["this.paymentservice.getuserpayments().pipe",{"_index":2735,"title":{},"body":{"injectables/PaymentState.html":{}}}],["this.paymentservice.setcustomertoken(action.customerid).pipe",{"_index":2732,"title":{},"body":{"injectables/PaymentState.html":{}}}],["this.prefixuri}/${id}/new",{"_index":3581,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this.prefixuri}/${id}/remove",{"_index":3585,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["this.product",{"_index":2779,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["this.product.quantity",{"_index":327,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["this.product.quantity).tostring",{"_index":329,"title":{},"body":{"components/AddToCartComponent.html":{}}}],["this.products",{"_index":3306,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.products.length",{"_index":3324,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.productsarray",{"_index":3161,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.productsarray.length",{"_index":3178,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.productscustomfilterdto.range1",{"_index":3298,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.productscustomfilterdto.range2",{"_index":3299,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.productscustomfilterdto.skip",{"_index":3331,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.productscustomfilterdto.take",{"_index":3323,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.productservice.addtocart(action.productid",{"_index":2893,"title":{},"body":{"injectables/ProductState.html":{}}}],["this.productservice.getcustomproducts(action.productscustomfilterdto).pipe",{"_index":2892,"title":{},"body":{"injectables/ProductState.html":{}}}],["this.productservice.getmixlatestproducts().pipe",{"_index":2896,"title":{},"body":{"injectables/ProductState.html":{}}}],["this.productservice.getmostsalesproducts().pipe",{"_index":2891,"title":{},"body":{"injectables/ProductState.html":{}}}],["this.productservice.getshopproducts(action.take).pipe",{"_index":2889,"title":{},"body":{"injectables/ProductState.html":{}}}],["this.productstags",{"_index":3516,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.productstags[i",{"_index":3520,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.productstags[i].name",{"_index":3518,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.productstagsinit",{"_index":3511,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.profile",{"_index":3889,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profileservice.changeprofileimage(action.imageform",{"_index":2988,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.profileservice.createuserprofile(action.createprofiledto).pipe",{"_index":2981,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.profileservice.deleteprofileimage().pipe",{"_index":2989,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.profileservice.edituserprofile(action.updateprofiledto).pipe",{"_index":2984,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.profileservice.getuserprofile().pipe",{"_index":2985,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.profileservice.setprofileimage(action.imageform",{"_index":2986,"title":{},"body":{"injectables/ProfileState.html":{}}}],["this.refreshinvoices",{"_index":2077,"title":{},"body":{"components/InvoicesComponent.html":{}}}],["this.refreshorders",{"_index":2681,"title":{},"body":{"components/OrdersComponent.html":{}}}],["this.refreshproducts",{"_index":3302,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.registrationform",{"_index":3020,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.get('email",{"_index":3018,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.get('password",{"_index":3019,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.get('username",{"_index":3017,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.value.email",{"_index":3022,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.value.password",{"_index":3023,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationform.value.username",{"_index":3021,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.relatedproducts",{"_index":2778,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["this.resetpassworddto",{"_index":3056,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpassworddto.controls",{"_index":3063,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetslice(5",{"_index":3320,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.returnurl",{"_index":2420,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":2545,"title":{},"body":{"components/OrderDetailsComponent.html":{},"components/ProductDetailsComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalDataService.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/categories",{"_index":3172,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1427,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['/no",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{}}}],["this.router.navigate(['/orders",{"_index":2686,"title":{},"body":{"components/OrdersComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["this.router.navigate(['tag",{"_index":3724,"title":{},"body":{"components/TagsComponent.html":{}}}],["this.router.navigate([`/products/${product.id",{"_index":1799,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.router.navigate([`/search/${this.search",{"_index":3122,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.router.navigate([`/sub",{"_index":1701,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/SidebarComponent.html":{},"components/TagItemsComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":2424,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["this.router.url",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{}}}],["this.scid",{"_index":3295,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.search",{"_index":3124,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.search.length",{"_index":3125,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.searchedtag",{"_index":3648,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["this.searchservice.searchbyname(name",{"_index":3169,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.searchservice.searchbyname(this.name",{"_index":3179,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.selectedimage",{"_index":1809,"title":{},"body":{"injectables/HelperService.html":{},"components/ProductDetailsComponent.html":{}}}],["this.selecteditem",{"_index":3796,"title":{},"body":{"components/UserCartComponent.html":{}}}],["this.selectedlist",{"_index":3127,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.selectedoptionsearch",{"_index":3123,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.selectedtag",{"_index":3308,"title":{},"body":{"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.setautocompletelist(this.search",{"_index":3126,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.setautocompletelist(value",{"_index":3119,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["this.setdata(name",{"_index":3168,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.setdata(productid",{"_index":2770,"title":{},"body":{"components/ProductDetailsComponent.html":{}}}],["this.setskiplength(this.products.length",{"_index":3325,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.settakelength(10",{"_index":3314,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.showfilter",{"_index":3316,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.showspinner",{"_index":1868,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/UserCartComponent.html":{}}}],["this.snackbar.open(message",{"_index":1823,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.sort",{"_index":2083,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["this.spinner.hide",{"_index":1798,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.spinner.show",{"_index":1797,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.startloadingflag",{"_index":1819,"title":{},"body":{"injectables/HelperService.html":{}}}],["this.startslice",{"_index":3326,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.startslice)).subscribe",{"_index":3313,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.startuploadingimage",{"_index":3904,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.state",{"_index":1419,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.store.dispatch",{"_index":1706,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["this.store.dispatch(new",{"_index":320,"title":{},"body":{"components/AddToCartComponent.html":{},"injectables/CartState.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrdersComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ShopComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.store.selectsnapshot(authstate.isauthenticated",{"_index":3774,"title":{},"body":{"guards/UserAuthGuard.html":{}}}],["this.store.selectsnapshot(authstate.user",{"_index":1694,"title":{},"body":{"injectables/GlobalDataService.html":{},"guards/UserAuthGuard.html":{}}}],["this.store.selectsnapshot(authstate.user).stripeid",{"_index":956,"title":{},"body":{"injectables/CartState.html":{}}}],["this.store.selectsnapshot(authstate.username",{"_index":1695,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["this.store.selectsnapshot(cartstate.cart",{"_index":1696,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["this.stripeservice.createtoken(this.card).subscribe((result",{"_index":3449,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.stripeservice.elements(this.elementsoptions).subscribe((elements",{"_index":3430,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["this.subcategories",{"_index":3651,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["this.subcategoriesarray",{"_index":3163,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.subcategoriesarray.length",{"_index":3177,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.subcategory",{"_index":2775,"title":{},"body":{"components/ProductDetailsComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["this.subcategory.products[i",{"_index":3505,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.subcategoryservice.getallsubcategories().pipe",{"_index":3608,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["this.subcategoryservice.getsubcategoriesbytagname(action.tagname).pipe",{"_index":3606,"title":{},"body":{"injectables/SubCategoryState.html":{}}}],["this.subcategoryservice.getsubcategoriesbytagname(tagname",{"_index":3649,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["this.subcategoryservice.getsubcategorybyid(+subcategoryid).subscribe((subcategory",{"_index":3514,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["this.subcategorytag",{"_index":3310,"title":{},"body":{"components/ShopComponent.html":{}}}],["this.subscriber",{"_index":1873,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.subscriptionform",{"_index":1860,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.subscriptionform.value.email).subscribe",{"_index":1875,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.swpush.requestsubscription",{"_index":1869,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.tagservice.getproductstags().pipe",{"_index":3712,"title":{},"body":{"injectables/TagState.html":{}}}],["this.tagservice.getsubcategoriestags().pipe",{"_index":3710,"title":{},"body":{"injectables/TagState.html":{}}}],["this.take",{"_index":3174,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.take).subscribe((data",{"_index":3170,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.type",{"_index":3167,"title":{},"body":{"components/SearchComponent.html":{}}}],["this.updateprofileform",{"_index":3895,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.updateprofileform.controls",{"_index":3886,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.updateprofileform.get('contacts",{"_index":3891,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.updateprofileform.get('displayname",{"_index":3887,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userinput",{"_index":1133,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["this.validatingform",{"_index":2166,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["this.validatingform.get('loginformmodalemail",{"_index":2168,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["this.validatingform.get('loginformmodalpassword",{"_index":2169,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["throw",{"_index":1172,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["throwerror",{"_index":1169,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{},"interceptors/ErrorInterceptor.html":{}}}],["throwerror(error",{"_index":1481,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(new",{"_index":1180,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["thrown",{"_index":1173,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["thu",{"_index":3820,"title":{},"body":{"components/UserCartComponent.html":{}}}],["time",{"_index":44,"title":{},"body":{"classes/ActivityModel.html":{}}}],["times",{"_index":344,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NoInternetComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["title",{"_index":1357,"title":{},"body":{"classes/Content.html":{},"classes/Notification.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayloadDto.html":{},"classes/SubscribersNotifications.html":{}}}],["toast",{"_index":1822,"title":{},"body":{"injectables/HelperService.html":{}}}],["toastr",{"_index":2398,"title":{},"body":{"modules/NgxModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":2397,"title":{},"body":{"modules/NgxModule.html":{}}}],["toastrmodule.forroot",{"_index":2406,"title":{},"body":{"modules/NgxModule.html":{}}}],["toggle",{"_index":2183,"title":{},"body":{"modules/MaterialModule.html":{}}}],["token",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserPayments.html":{},"injectables/GlobalDataService.html":{},"classes/Login.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"injectables/PaymentService.html":{},"interfaces/PaymentStateModel.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"classes/SetCustomerToken.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/StripeCheckoutComponent.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/variables.html":{}}}],["token(state",{"_index":699,"title":{},"body":{"injectables/AuthState.html":{}}}],["token.card.brand",{"_index":3453,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["token.id",{"_index":3461,"title":{},"body":{"components/StripeCheckoutComponent.html":{}}}],["token.ts",{"_index":4012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tokeninterceptor",{"_index":442,"title":{"interceptors/TokenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptor.html":{},"overview.html":{}}}],["tokenreq",{"_index":3728,"title":{},"body":{"interceptors/TokenInterceptor.html":{}}}],["tokenservice",{"_index":3735,"title":{"injectables/TokenService.html":{}},"body":{"injectables/TokenService.html":{}}}],["toolbar.mat",{"_index":2369,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tooltipmodule",{"_index":2279,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{}}}],["tooltipmodule.forroot",{"_index":2299,"title":{},"body":{"modules/MdbModule.html":{},"modules/NgxModule.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":2365,"title":{},"body":{"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["total",{"_index":1236,"title":{},"body":{"components/CheckoutComponent.html":{},"injectables/GlobalDataService.html":{},"classes/InvoiceModel.html":{},"components/InvoicesComponent.html":{},"components/UserCartComponent.html":{}}}],["totalitems",{"_index":795,"title":{},"body":{"classes/CartModel.html":{}}}],["totalprice",{"_index":805,"title":{},"body":{"classes/CartProductModel.html":{}}}],["totalpurchase",{"_index":1636,"title":{},"body":{"injectables/GlobalDataService.html":{},"components/UserCartComponent.html":{}}}],["tqjjjq",{"_index":4150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1026,"title":{},"body":{"pipes/CategoryPipe.html":{},"pipes/GeneralPipe.html":{},"pipes/ProductFilterPipe.html":{},"pipes/TagPipe.html":{}}}],["transform(array",{"_index":1595,"title":{},"body":{"pipes/GeneralPipe.html":{}}}],["transform(categories",{"_index":1027,"title":{},"body":{"pipes/CategoryPipe.html":{}}}],["transform(products",{"_index":2790,"title":{},"body":{"pipes/ProductFilterPipe.html":{}}}],["transform(tags",{"_index":3675,"title":{},"body":{"pipes/TagPipe.html":{}}}],["tree",{"_index":57,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["true",{"_index":301,"title":{},"body":{"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2431,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["tslib",{"_index":3967,"title":{},"body":{"dependencies.html":{}}}],["tunis",{"_index":4165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/BillingAddress.html":{},"classes/CancelOrder.html":{},"classes/CartModel.html":{},"classes/CartProductModel.html":{},"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"classes/CategoryDto.html":{},"classes/CategoryModel.html":{},"pipes/CategoryPipe.html":{},"injectables/CategoryService.html":{},"injectables/CategoryState.html":{},"interfaces/CategoryStateModel.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"interceptors/CheckConnectionInterceptor.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"interfaces/CheckoutReturnData.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/Contact.html":{},"classes/ContactMessageDto.html":{},"injectables/ContactService.html":{},"classes/Content.html":{},"classes/CreateCartProductDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProfileDto.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/EmailLoginDto.html":{},"interceptors/ErrorInterceptor.html":{},"classes/ErrorMessages.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"pipes/GeneralPipe.html":{},"classes/GetProductsByRangeDto.html":{},"classes/GlobalDataDto.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"classes/InsertTagDto.html":{},"components/InvalidCredentialsComponent.html":{},"classes/InvoiceModel.html":{},"injectables/InvoiceService.html":{},"injectables/InvoiceState.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/ItemTag.html":{},"classes/Key.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"classes/Message.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"classes/Notification.html":{},"classes/NotificationData.html":{},"classes/NotificationEntity.html":{},"classes/NotificationPayload.html":{},"classes/NotificationPayloadDto.html":{},"injectables/NotificationsService.html":{},"components/OrderDetailsComponent.html":{},"classes/OrderDto.html":{},"classes/OrderItemModel.html":{},"classes/OrderModel.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"classes/PaymentModel.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"pipes/ProductFilterPipe.html":{},"classes/ProductModel.html":{},"injectables/ProductService.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"classes/ProductTagModel.html":{},"classes/ProductsCustomFilterDto.html":{},"classes/ProfileModel.html":{},"injectables/ProfileService.html":{},"injectables/ProfileState.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"interfaces/RemoveCartItem.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"classes/ResetPasswordDto.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"injectables/SearchService.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"classes/SubCategoryDto.html":{},"classes/SubCategoryModel.html":{},"injectables/SubCategoryService.html":{},"injectables/SubCategoryState.html":{},"interfaces/SubCategoryStateModel.html":{},"classes/SubCategoryTagModel.html":{},"classes/Subscriber.html":{},"classes/SubscribersNotifications.html":{},"classes/TagDto.html":{},"components/TagItemsComponent.html":{},"classes/TagModel.html":{},"pipes/TagPipe.html":{},"injectables/TagService.html":{},"injectables/TagState.html":{},"interfaces/TagStateModel.html":{},"components/TagsComponent.html":{},"interceptors/TokenInterceptor.html":{},"injectables/TokenService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"guards/UserAuthGuard.html":{},"components/UserCartComponent.html":{},"classes/UserModel.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":41,"title":{},"body":{"classes/ActivityDto.html":{},"classes/ActivityModel.html":{}}}],["type.enum.ts",{"_index":3974,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types/chart.js",{"_index":3933,"title":{},"body":{"dependencies.html":{}}}],["unauthorized",{"_index":3366,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["under",{"_index":2360,"title":{},"body":{"components/NavbarComponent.html":{}}}],["uniquearray",{"_index":3519,"title":{},"body":{"components/SubCategoryDetailsComponent.html":{}}}],["unit",{"_index":2567,"title":{},"body":{"components/OrderDetailsComponent.html":{},"index.html":{}}}],["unitprice",{"_index":2578,"title":{},"body":{"classes/OrderItemModel.html":{}}}],["unset",{"_index":2491,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["up",{"_index":1584,"title":{},"body":{"components/FooterComponent.html":{},"components/RegisterComponent.html":{}}}],["update",{"_index":257,"title":{},"body":{"classes/AddToCart.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearProducts.html":{},"classes/CreateUserCart.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserOrders.html":{},"classes/Login.html":{},"classes/Logout.html":{},"interfaces/OrderStateModel.html":{},"interfaces/ProductStateModel.html":{},"classes/PushOrder.html":{},"classes/Register.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["updatecartproductquantity",{"_index":824,"title":{"classes/UpdateCartProductQuantity.html":{}},"body":{"injectables/CartService.html":{},"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"components/UserCartComponent.html":{}}}],["updatecartproductquantity(cartid",{"_index":839,"title":{},"body":{"injectables/CartService.html":{}}}],["updatecartproductquantity(cartproduct",{"_index":3789,"title":{},"body":{"components/UserCartComponent.html":{}}}],["updatecartproductquantity(ctx",{"_index":911,"title":{},"body":{"injectables/CartState.html":{}}}],["updatecartstate",{"_index":879,"title":{"classes/UpdateCartState.html":{}},"body":{"injectables/CartState.html":{},"interfaces/CartStateModel.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/CreateUserCart.html":{},"classes/FetchUserCart.html":{},"injectables/ProductState.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{}}}],["updatecartstate(cart",{"_index":2895,"title":{},"body":{"injectables/ProductState.html":{}}}],["updated",{"_index":2687,"title":{},"body":{"components/OrdersComponent.html":{},"components/UserProfileComponent.html":{}}}],["updatedat",{"_index":14,"title":{},"body":{"classes/AbstractCategory.html":{},"classes/CategoryModel.html":{},"classes/OrderModel.html":{},"components/OrdersComponent.html":{},"classes/ProductModel.html":{},"classes/SubCategoryModel.html":{},"classes/TagModel.html":{}}}],["updatedorder",{"_index":2658,"title":{},"body":{"injectables/OrderState.html":{}}}],["updateimage",{"_index":3862,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateitem",{"_index":2648,"title":{},"body":{"injectables/OrderState.html":{}}}],["updateitem(order",{"_index":2655,"title":{},"body":{"injectables/OrderState.html":{}}}],["updateorder",{"_index":769,"title":{"classes/UpdateOrder.html":{}},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"injectables/OrderService.html":{},"injectables/OrderState.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["updateorder(ctx",{"_index":2642,"title":{},"body":{"injectables/OrderState.html":{}}}],["updateorder(id",{"_index":2620,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderdto",{"_index":770,"title":{},"body":{"classes/CancelOrder.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/FetchOrderById.html":{},"classes/FetchUserOrders.html":{},"interfaces/OrderStateModel.html":{},"classes/PushOrder.html":{},"classes/UpdateOrder.html":{}}}],["updateproductdto",{"_index":3750,"title":{"classes/UpdateProductDto.html":{}},"body":{"classes/UpdateProductDto.html":{}}}],["updateprofile",{"_index":3863,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateprofiledto",{"_index":1091,"title":{},"body":{"classes/ChangeProfileImage.html":{},"classes/ClearProfileData.html":{},"classes/CreateUserProfile.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchUserProfile.html":{},"injectables/ProfileService.html":{},"interfaces/ProfileStateModel.html":{},"classes/SetProfileImage.html":{}}}],["updateprofileform",{"_index":3858,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateshopproducts",{"_index":256,"title":{"classes/UpdateShopProducts.html":{}},"body":{"classes/AddToCart.html":{},"classes/ClearProducts.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchShopProducts.html":{},"injectables/ProductState.html":{},"interfaces/ProductStateModel.html":{},"injectables/SubCategoryState.html":{},"classes/UpdateShopProducts.html":{}}}],["updateshopproducts(ctx",{"_index":2874,"title":{},"body":{"injectables/ProductState.html":{}}}],["updatesubcategory",{"_index":3555,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["updatesubcategory(id",{"_index":3571,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["updatesubcategorydto",{"_index":3572,"title":{},"body":{"injectables/SubCategoryService.html":{}}}],["updatetoken",{"_index":621,"title":{"classes/UpdateToken.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"injectables/TokenService.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"miscellaneous/variables.html":{}}}],["updatetoken(ctx",{"_index":702,"title":{},"body":{"injectables/AuthState.html":{}}}],["updatetoken(email",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatetoken(jwt)).subscribe",{"_index":3742,"title":{},"body":{"injectables/TokenService.html":{}}}],["updateuser",{"_index":732,"title":{"classes/UpdateUser.html":{}},"body":{"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/Logout.html":{},"injectables/PaymentState.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{}}}],["updateuser(user",{"_index":2734,"title":{},"body":{"injectables/PaymentState.html":{}}}],["updating",{"_index":1420,"title":{},"body":{"components/CreateUserProfileComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["upload",{"_index":1558,"title":{},"body":{"modules/FileModule.html":{},"injectables/HelperService.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["uploaded",{"_index":3909,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["uploader",{"_index":3859,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["uploadimage",{"_index":3864,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["url",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["url('https://fonts.googleapis.com/css?family=rubik&display=swap",{"_index":2440,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["usa",{"_index":1952,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":1566,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NoInternetComponent.html":{},"index.html":{}}}],["useclass",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":34,"title":{},"body":{"classes/ActivityDto.html":{},"classes/ActivityModel.html":{},"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/CancelOrder.html":{},"components/CartLayoutComponent.html":{},"injectables/CartService.html":{},"interfaces/CartStateModel.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProfileData.html":{},"components/CommonLayoutComponent.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"components/ErrorComponent.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"interfaces/InvoiceStateModel.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"interfaces/OrderStateModel.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"interfaces/PaymentStateModel.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"interfaces/ProfileStateModel.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user(state",{"_index":705,"title":{},"body":{"injectables/AuthState.html":{}}}],["user.cartid",{"_index":726,"title":{},"body":{"injectables/AuthState.html":{}}}],["user.profileid",{"_index":723,"title":{},"body":{"injectables/AuthState.html":{}}}],["userauthguard",{"_index":537,"title":{"guards/UserAuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/UserAuthGuard.html":{}}}],["usercartcomponent",{"_index":219,"title":{"components/UserCartComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"modules/CartLayoutModule.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["userid",{"_index":1123,"title":{},"body":{"components/ChatbotComponent.html":{},"classes/InvoiceModel.html":{},"classes/OrderModel.html":{},"classes/PaymentModel.html":{}}}],["userinput",{"_index":1103,"title":{},"body":{"components/ChatbotComponent.html":{}}}],["userlogout",{"_index":1635,"title":{},"body":{"injectables/GlobalDataService.html":{}}}],["usermodel",{"_index":652,"title":{"classes/UserModel.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthState.html":{},"interfaces/AuthStateModel.html":{},"classes/Login.html":{},"classes/LoginResponse.html":{},"classes/Logout.html":{},"injectables/PaymentService.html":{},"injectables/PaymentState.html":{},"classes/Register.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"classes/UserModel.html":{}}}],["username",{"_index":595,"title":{},"body":{"classes/AuthCredentialsDto.html":{},"injectables/AuthService.html":{},"injectables/AuthState.html":{},"injectables/GlobalDataService.html":{},"components/RegisterComponent.html":{},"classes/UserModel.html":{},"miscellaneous/variables.html":{}}}],["username(state",{"_index":707,"title":{},"body":{"injectables/AuthState.html":{}}}],["userprofilecomponent",{"_index":220,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["userrole",{"_index":3837,"title":{},"body":{"classes/UserModel.html":{},"miscellaneous/enumerations.html":{}}}],["users",{"_index":1616,"title":{},"body":{"classes/GlobalDataDto.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":123,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"classes/ErrorMessages.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{}}}],["validatingform",{"_index":2156,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["validator",{"_index":3061,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators",{"_index":107,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["validators.email",{"_index":2167,"title":{},"body":{"components/LoginFirstComponent.html":{}}}],["validators.maxlength(20",{"_index":1417,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["validators.maxlength(5",{"_index":1213,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.minlength(6",{"_index":3058,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.minlength(8",{"_index":1416,"title":{},"body":{"components/CreateUserProfileComponent.html":{}}}],["validators.pattern('^[0",{"_index":1214,"title":{},"body":{"components/CheckoutComponent.html":{}}}],["validators.pattern(emailpattern",{"_index":1211,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":114,"title":{},"body":{"components/AddContactsComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserProfileComponent.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AddContactsComponent.html":{},"classes/AddToCart.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"classes/CancelOrder.html":{},"classes/ChangeProfileImage.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"classes/CheckoutOnCart.html":{},"classes/CheckoutOnSingleProduct.html":{},"classes/ClearCartContent.html":{},"classes/ClearCartFromStorage.html":{},"classes/ClearCategory.html":{},"classes/ClearInvoicesFromStorage.html":{},"classes/ClearOrdersFromStorage.html":{},"classes/ClearPaymentsFromStorage.html":{},"classes/ClearProducts.html":{},"classes/ClearProfileData.html":{},"classes/ClearSubCategory.html":{},"classes/ClearTags.html":{},"classes/CreateUserCart.html":{},"classes/CreateUserProfile.html":{},"components/CreateUserProfileComponent.html":{},"classes/DeleteProfileImage.html":{},"classes/EditProfile.html":{},"classes/FetchAllCategories.html":{},"classes/FetchAllSubCategories.html":{},"classes/FetchCategoryById.html":{},"classes/FetchCustomProducts.html":{},"classes/FetchInvoiceById.html":{},"classes/FetchLatestProducts.html":{},"classes/FetchMixLatestProducts.html":{},"classes/FetchMostSalesProducts.html":{},"classes/FetchOrderById.html":{},"classes/FetchPaymentById.html":{},"classes/FetchProductById.html":{},"classes/FetchProductsByTagName.html":{},"classes/FetchProductsTags.html":{},"classes/FetchShopProducts.html":{},"classes/FetchSubCategoriesByTagName.html":{},"classes/FetchSubCategoriesTags.html":{},"classes/FetchSubCategoryById.html":{},"classes/FetchTagById.html":{},"classes/FetchUserCart.html":{},"classes/FetchUserInvoices.html":{},"classes/FetchUserOrders.html":{},"classes/FetchUserPayments.html":{},"classes/FetchUserProfile.html":{},"components/FooterComponent.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"classes/Login.html":{},"components/LoginComponent.html":{},"classes/Logout.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/ProductDetailsComponent.html":{},"injectables/ProfileService.html":{},"classes/PushInvoice.html":{},"classes/PushOrder.html":{},"classes/PushPayment.html":{},"classes/Register.html":{},"components/RegisterComponent.html":{},"classes/RemoveCartProduct.html":{},"classes/RemoveProductsFromCart.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"classes/SetCustomerToken.html":{},"classes/SetProfileImage.html":{},"classes/SetUserCart.html":{},"classes/SetUserProfile.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"injectables/SubCategoryService.html":{},"classes/UpdateCartProductQuantity.html":{},"classes/UpdateCartState.html":{},"classes/UpdateOrder.html":{},"classes/UpdateShopProducts.html":{},"classes/UpdateToken.html":{},"classes/UpdateUser.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.length",{"_index":3118,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["vapidkeys",{"_index":4147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":129,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CartLayoutComponent.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"components/TagsComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["variables",{"_index":4062,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1920,"title":{},"body":{"components/HomeComponent.html":{}}}],["vat",{"_index":1241,"title":{},"body":{"components/CheckoutComponent.html":{},"components/UserCartComponent.html":{}}}],["verification",{"_index":4085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verify_email",{"_index":3994,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["verifyemail",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["verifyemail(token",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":4026,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":2485,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["via",{"_index":4049,"title":{},"body":{"index.html":{}}}],["vibrate",{"_index":2495,"title":{},"body":{"classes/Notification.html":{},"classes/SubscribersNotifications.html":{}}}],["view",{"_index":2556,"title":{},"body":{"components/OrderDetailsComponent.html":{}}}],["viewchild",{"_index":304,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/ShopComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('createuserprofile",{"_index":3874,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["viewchild('enablecookies",{"_index":2322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewchild('errortemplate",{"_index":300,"title":{},"body":{"components/AddToCartComponent.html":{},"components/CheckoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrdersComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["viewchild('matautocomplete",{"_index":3102,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["viewchild('searchfield",{"_index":3106,"title":{},"body":{"components/SearchBarComponent.html":{}}}],["viewchild('sidenav",{"_index":2333,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewchild(matpaginator",{"_index":2066,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{}}}],["viewchild(matsort",{"_index":2069,"title":{},"body":{"components/InvoicesComponent.html":{},"components/OrdersComponent.html":{}}}],["visa",{"_index":1928,"title":{},"body":{"components/HomeComponent.html":{},"components/StripeCheckoutComponent.html":{},"miscellaneous/enumerations.html":{}}}],["vl",{"_index":2351,"title":{},"body":{"components/NavbarComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["void",{"_index":94,"title":{},"body":{"components/AddContactsComponent.html":{},"components/AddToCartComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthState.html":{},"components/CartLayoutComponent.html":{},"injectables/CartState.html":{},"components/CategoryDetailsComponent.html":{},"components/CategoryLayoutComponent.html":{},"injectables/CategoryState.html":{},"components/ChatbotComponent.html":{},"components/CheckoutComponent.html":{},"components/CommonLayoutComponent.html":{},"components/CreateUserProfileComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"injectables/GlobalDataService.html":{},"injectables/HelperService.html":{},"components/HomeComponent.html":{},"components/InvalidCredentialsComponent.html":{},"components/InvoiceLayoutComponent.html":{},"injectables/InvoiceState.html":{},"components/InvoicesComponent.html":{},"components/LoginComponent.html":{},"components/LoginFirstComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrderDetailsComponent.html":{},"components/OrderLayoutComponent.html":{},"injectables/OrderState.html":{},"components/OrdersComponent.html":{},"components/PaymentLayoutComponent.html":{},"injectables/PaymentState.html":{},"components/ProductDetailsComponent.html":{},"components/ProductLayoutComponent.html":{},"injectables/ProductState.html":{},"injectables/ProfileState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchBarComponent.html":{},"components/SearchComponent.html":{},"components/ShopComponent.html":{},"components/ShopLayoutComponent.html":{},"components/ShowErrorDialogComponent.html":{},"components/SidebarComponent.html":{},"components/StripeCheckoutComponent.html":{},"components/SubCategoryDetailsComponent.html":{},"components/SubCategoryLayoutComponent.html":{},"injectables/SubCategoryState.html":{},"components/TagItemsComponent.html":{},"components/TagLayoutComponent.html":{},"injectables/TagState.html":{},"components/TagsComponent.html":{},"injectables/TokenService.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["w3c",{"_index":1981,"title":{},"body":{"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["wait",{"_index":2149,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/StripeCheckoutComponent.html":{}}}],["want",{"_index":1890,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["wavesmodule",{"_index":2278,"title":{},"body":{"modules/MdbModule.html":{}}}],["wavesmodule.forroot",{"_index":2298,"title":{},"body":{"modules/MdbModule.html":{},"miscellaneous/variables.html":{}}}],["weak_admin",{"_index":4007,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["webkit",{"_index":358,"title":{},"body":{"components/AddToCartComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/UserCartComponent.html":{}}}],["welcome",{"_index":1886,"title":{},"body":{"components/HomeComponent.html":{}}}],["white",{"_index":2381,"title":{},"body":{"components/NavbarComponent.html":{}}}],["width",{"_index":1248,"title":{},"body":{"components/CheckoutComponent.html":{},"components/HomeComponent.html":{},"components/InvoicesComponent.html":{},"components/NavbarComponent.html":{},"components/NoInternetComponent.html":{},"components/OrdersComponent.html":{},"components/ShopComponent.html":{},"components/SubCategoryDetailsComponent.html":{}}}],["window.navigator.online",{"_index":1171,"title":{},"body":{"interceptors/CheckConnectionInterceptor.html":{}}}],["wireless",{"_index":2433,"title":{},"body":{"components/NoInternetComponent.html":{}}}],["within",{"_index":1944,"title":{},"body":{"components/HomeComponent.html":{}}}],["without",{"_index":1933,"title":{},"body":{"components/HomeComponent.html":{},"components/ShowErrorDialogComponent.html":{}}}],["work",{"_index":1912,"title":{},"body":{"components/HomeComponent.html":{}}}],["worker",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["works",{"_index":2692,"title":{},"body":{"components/PaymentLayoutComponent.html":{}}}],["x01",{"_index":4171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":4172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":4176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":4191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":4173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":4192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":4174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":4193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f])*\")@(?:(?:[a",{"_index":4177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\\\\\[\\x01",{"_index":4175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["y",{"_index":1585,"title":{},"body":{"components/FooterComponent.html":{}}}],["yaman",{"_index":4163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":3098,"title":{},"body":{"components/SearchBarComponent.html":{},"components/UserCartComponent.html":{},"components/UserProfileComponent.html":{}}}],["you've",{"_index":3653,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["you\\'re",{"_index":3367,"title":{},"body":{"components/ShowErrorDialogComponent.html":{}}}],["you\\'ve",{"_index":3656,"title":{},"body":{"components/TagItemsComponent.html":{}}}],["your_access_token",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["z",{"_index":2372,"title":{},"body":{"components/NavbarComponent.html":{}}}],["z0",{"_index":4169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":3969,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CartLayoutModule.html":{},"modules/CategoryLayoutModule.html":{},"modules/ChatbotModule.html":{},"modules/CommonLayoutModule.html":{},"modules/ComponentModule.html":{},"modules/DashboardModule.html":{},"modules/ErrorModule.html":{},"modules/InvoiceLayoutModule.html":{},"modules/NgxModule.html":{},"modules/OrderLayoutModule.html":{},"modules/PipesModule.html":{},"modules/ProductLayoutModule.html":{},"modules/SharedModule.html":{},"modules/ShopLayoutModule.html":{},"modules/StripeIntegrationModule.html":{},"modules/SubCategoryLayoutModule.html":{},"modules/TagLayoutModule.html":{},"dependencies.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractCategory.html":{"url":"classes/AbstractCategory.html","title":"class - AbstractCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/classes/abstract-category.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/abstract-category.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/abstract-category.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/abstract-category.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/abstract-category.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/abstract-category.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AbstractCategory  {\n  id: number;\n\n  name: string;\n\n  description: string;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityDto.html":{"url":"classes/ActivityDto.html","title":"class - ActivityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/activity.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                description\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivityType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/activity.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/activity.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/activity.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ActivityType} from '../enums/activity-type.enum';\n\nexport class ActivityDto {\n  action: ActivityType;\n  user: string;\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActivityModel.html":{"url":"classes/ActivityModel.html","title":"class - ActivityModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActivityModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/activity/activity.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                time\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivityType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity/activity.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity/activity.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity/activity.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity/activity.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/activity/activity.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ActivityType} from '../../commons/enums/activity-type.enum';\n\nexport class ActivityModel {\n\n  id: number;\n\n  action: ActivityType;\n\n  user: string;\n\n  description: string;\n\n  time: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddContactsComponent.html":{"url":"components/AddContactsComponent.html","title":"component - AddContactsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddContactsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/add-contacts/add-contacts.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-contacts\n            \n\n            \n                styleUrls\n                ./add-contacts.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-contacts.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                ContactControl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeContact\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                Contacts\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        Contacts\n                    \n                \n                \n                    \n                        Type :         FormArray\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addContact\n                        \n                        \n                    \n                \n            \n            \n                \naddContact(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ContactControl\n                        \n                        \n                    \n                \n            \n            \n                \nContactControl(controlIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeContact\n                        \n                        \n                    \n                \n            \n            \n                \nremoveContact(index: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contact\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact\n\n                        \n                    \n                    \n                        \n                            Default value : new Contact()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/add-contacts/add-contacts.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Contact} from \"../../../commons/classes/contact\";\n\n@Component({\n  selector: 'app-add-contacts',\n  templateUrl: './add-contacts.component.html',\n  styleUrls: ['./add-contacts.component.css']\n})\nexport class AddContactsComponent implements OnInit {\n\n  @Input() form: FormGroup;\n  @Input() Contacts: FormArray;\n  contact: Contact = new Contact();\n\n  constructor(private fb: FormBuilder) {\n  }\n\n\n  addContact(contact: Contact) {\n    this.Contacts.push(this.fb.group({\n      address: new FormControl(contact.address, [Validators.required]),\n      phone: new FormControl(contact.phone, [Validators.required])\n    }));\n  }\n\n  ngOnInit(): void {\n  }\n\n  removeContact(index: any) {\n    this.Contacts.removeAt(index);\n  }\n\n\n  ContactControl(controlIndex: number) {\n    return this.Contacts.controls[controlIndex];\n  }\n\n}\n\n    \n\n    \n        \n  \n    Add New Contact \n  \n\n\n  \n    \n      \n        \n          Address\n          \n        \n\n        \n          Phone\n          \n        \n        \n          Remove\n        \n      \n      \n        Please Enter valid contact data\n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./add-contacts.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Add New Contact                                 Address                                    Phone                                    Remove                            Please Enter valid contact data            '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddContactsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddToCart.html":{"url":"classes/AddToCart.html","title":"class - AddToCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddToCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                createCartProductDto\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productId: number, cartId: number, createCartProductDto: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:68\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        createCartProductDto\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createCartProductDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Add To Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddToCartComponent.html":{"url":"components/AddToCartComponent.html","title":"component - AddToCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddToCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/products/add-to-cart/add-to-cart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-to-cart\n            \n\n            \n                styleUrls\n                ./add-to-cart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-to-cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createCartProductDto\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                checkValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                            \n                                onSubtract\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                product\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, store: Store, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        product\n                    \n                \n                \n                    \n                        Type :         ProductModel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkValue\n                        \n                        \n                    \n                \n            \n            \n                \ncheckValue(quantityValue: HTMLInputElement)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quantityValue\n                                    \n                                            HTMLInputElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAdd\n                        \n                        \n                    \n                \n            \n            \n                \nonAdd()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubtract\n                        \n                        \n                    \n                \n            \n            \n                \nonSubtract()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createCartProductDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    quantity: 1\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/products/add-to-cart/add-to-cart.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {HelperService} from '../../../services/helper.service';\nimport {Store} from '@ngxs/store';\nimport {GlobalDataService} from '../../../services/global-data.service';\nimport {ProductModel} from '../../../../models/Products/product.model';\nimport {CartActions} from '../../../../state-management/cart/cart.actions';\nimport FetchUserCart = CartActions.FetchUserCart;\nimport {ProductActions} from '../../../../state-management/product/product.actions';\nimport AddToCart = ProductActions.AddToCart;\nimport CreateUserCart = CartActions.CreateUserCart;\n\n@Component({\n  selector: 'app-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  styleUrls: ['./add-to-cart.component.css']\n})\nexport class AddToCartComponent implements OnInit {\n\n  @Input() product: ProductModel;\n  createCartProductDto = {\n    quantity: 1\n  };\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(public helperService: HelperService,\n              private store: Store,\n              public gdService: GlobalDataService) {\n  }\n\n  ngOnInit(): void {\n    if (!this.gdService.User.cartId) {\n      this.store.dispatch(new CreateUserCart()).subscribe(() => {\n\n      });\n    }\n    if (!this.gdService.Cart) {\n      this.store.dispatch(new FetchUserCart()).subscribe(() => {\n      });\n    }\n  }\n\n\n  checkValue(quantityValue: HTMLInputElement) {\n    const currentValue = parseFloat(quantityValue.value);\n    if (currentValue >= this.product.quantity) {\n      quantityValue.value = (this.product.quantity).toString();\n      return;\n    }\n    if (currentValue = this.product.quantity) {\n      return;\n    }\n    this.createCartProductDto.quantity += 1;\n\n  }\n\n\n  onSubtract() {\n    if (this.createCartProductDto.quantity === 0) {\n      return;\n    }\n    this.createCartProductDto.quantity -= 1;\n  }\n\n\n  addToCart() {\n    this.helperService.showSpinner();\n    this.store.dispatch(new AddToCart(this.product.id, this.gdService.Cart.id, this.createCartProductDto)).subscribe(() => {\n      this.helperService.hideSpinner();\n      this.helperService.hideModal();\n      this.helperService.openSnackbar('Product added successfully into your cart', 'Close');\n    }, error => {\n      this.helperService.hideModal();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n  \n    \n      Add to cart\n      \n        &times;\n      \n    \n    \n      \n        \n          {{product.name}}\n        \n        \n          ${{product.currentPrice}}\n        \n      \n      \n      \n        \n          \n            \n          \n        \n        \n          \n        \n        \n          \n            Enter Quantity over here\n          \n          \n            \n              \n                \n              \n            \n            \n            \n              \n                \n              \n            \n          \n          \n            Note: &nbsp;Maximum value for quantity is {{product.quantity}}\n            items only\n          \n        \n      \n    \n    \n      Add to cart\n      \n      Close\n    \n  \n\n\n  \n    Adding Product to cart..\n  \n\n\n    \n\n    \n                \n                    ./add-to-cart.component.css\n                \n                /* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Add to cart              ×                                      {{product.name}}                          ${{product.currentPrice}}                                                                                                                                  Enter Quantity over here                                                                                                                                                                                                        Note:  Maximum value for quantity is {{product.quantity}}            items only                                      Add to cart            Close            Adding Product to cart..  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddToCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessToken\n                            \n                            \n                                checkOnlineStatus\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService, cookieService: CookieService, store: Store, authService: AuthService, router: Router, actions: Actions, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'YOUR_ACCESS_TOKEN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkOnlineStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GlobalDataService} from './shared/services/global-data.service';\nimport {Actions, ofActionDispatched, Store} from '@ngxs/store';\nimport {HelperService} from './shared/services/helper.service';\nimport {Logout} from './state-management/auth/auth-actions';\nimport {fromEvent, Subject} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {CookieService} from 'ngx-cookie-service';\nimport {AuthService} from './services/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public accessToken = 'YOUR_ACCESS_TOKEN';\n  public message: Subject = new Subject();\n  constructor(public gdService: GlobalDataService,\n              private cookieService: CookieService,\n              private store: Store,\n              private authService: AuthService,\n              private router: Router, private actions: Actions, public helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n    this.checkOnlineStatus();\n    this.actions.pipe(ofActionDispatched(Logout)).subscribe(() => {\n      this.router.navigate(['/auth/login']);\n    });\n  }\n\n  checkOnlineStatus = () => {\n    this.helperService.onlineEvent = fromEvent(window, 'online');\n    this.helperService.offlineEvent = fromEvent(window, 'offline');\n    this.helperService.subscriptions.push(this.helperService.onlineEvent.subscribe(() => {\n      this.helperService.setIsOnline(true);\n    }));\n    this.helperService.subscriptions.push(this.helperService.offlineEvent.subscribe(() => {\n      this.helperService.setIsOnline(false);\n      this.router.navigate(['/no-internet'], {\n        queryParams: {\n          returnUrl: this.router.url\n        }\n      });\n    }));\n    let onlineStatus = false;\n    let isOnline = sessionStorage.getItem('isOnline');\n    if (isOnline) {\n      if (isOnline === 'true') {\n        onlineStatus = true;\n        this.helperService.setIsOnline(onlineStatus);\n      } else {\n        onlineStatus = false;\n        this.helperService.setIsOnline(onlineStatus);\n        this.router.navigate(['/no-internet'], {\n          queryParams: {\n            returnUrl: this.router.url\n          }\n        });\n      }\n    }\n\n  };\n\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nCartLayoutComponent\n\nCartLayoutComponent\n\nAppModule -->\n\nCartLayoutComponent->AppModule\n\n\n\n\n\nCategoryLayoutComponent\n\nCategoryLayoutComponent\n\nAppModule -->\n\nCategoryLayoutComponent->AppModule\n\n\n\n\n\nCommonLayoutComponent\n\nCommonLayoutComponent\n\nAppModule -->\n\nCommonLayoutComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nInvoiceLayoutComponent\n\nInvoiceLayoutComponent\n\nAppModule -->\n\nInvoiceLayoutComponent->AppModule\n\n\n\n\n\nOrderLayoutComponent\n\nOrderLayoutComponent\n\nAppModule -->\n\nOrderLayoutComponent->AppModule\n\n\n\n\n\nPaymentLayoutComponent\n\nPaymentLayoutComponent\n\nAppModule -->\n\nPaymentLayoutComponent->AppModule\n\n\n\n\n\nProductLayoutComponent\n\nProductLayoutComponent\n\nAppModule -->\n\nProductLayoutComponent->AppModule\n\n\n\n\n\nShopLayoutComponent\n\nShopLayoutComponent\n\nAppModule -->\n\nShopLayoutComponent->AppModule\n\n\n\n\n\nSubCategoryLayoutComponent\n\nSubCategoryLayoutComponent\n\nAppModule -->\n\nSubCategoryLayoutComponent->AppModule\n\n\n\n\n\nTagLayoutComponent\n\nTagLayoutComponent\n\nAppModule -->\n\nTagLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStripeIntegrationModule\n\nStripeIntegrationModule\n\nAppModule -->\n\nStripeIntegrationModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            CartLayoutComponent\n                        \n                        \n                            CategoryLayoutComponent\n                        \n                        \n                            CommonLayoutComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            ErrorComponent\n                        \n                        \n                            InvoiceLayoutComponent\n                        \n                        \n                            OrderLayoutComponent\n                        \n                        \n                            PaymentLayoutComponent\n                        \n                        \n                            ProductLayoutComponent\n                        \n                        \n                            ShopLayoutComponent\n                        \n                        \n                            SubCategoryLayoutComponent\n                        \n                        \n                            TagLayoutComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            TokenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StripeIntegrationModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SharedModule} from './shared/shared-global.module';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {ErrorComponent} from './layouts/error/error.component';\nimport {AuthComponent} from './layouts/auth/auth.component';\nimport {ComponentModule} from './components/component.module';\nimport {DashboardComponent} from './layouts/dashboard/dashboard.component';\nimport {NgxsModule} from '@ngxs/store';\nimport {States, StatesNames} from './state-management/states';\nimport {environment} from '../environments/environment';\nimport {NgxsStoragePluginModule, StorageOption} from '@ngxs/storage-plugin';\nimport {SubCategoryLayoutComponent} from './layouts/sub-category-layout/sub-category-layout.component';\nimport {ShopLayoutComponent} from './layouts/shop-layout/shop-layout.component';\nimport {CartLayoutComponent} from './layouts/cart-layout/cart-layout.component';\nimport {CommonLayoutComponent} from './layouts/common-layout/common-layout.component';\nimport {InvoiceLayoutComponent} from './layouts/invoice-layout/invoice-layout.component';\nimport {OrderLayoutComponent} from './layouts/order-layout/order-layout.component';\nimport {PaymentLayoutComponent} from './layouts/payment-layout/payment-layout.component';\nimport {ProductLayoutComponent} from './layouts/product-layout/product-layout.component';\nimport {TokenInterceptor} from './services/auth/token.interceptor';\nimport {ErrorInterceptor} from './services/auth/error.interceptor';\nimport {TagLayoutComponent} from './layouts/tag-layout/tag-layout.component';\nimport {CookieService} from 'ngx-cookie-service';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {StripeIntegrationModule} from './modules/stripe-integration/stripe-integration.module';\nimport {NgxStripeModule} from 'ngx-stripe';\nimport {AsyncPipe} from '@angular/common';\nimport {CategoryLayoutComponent} from './layouts/category-layout/category-layout.component';\nimport {ServiceWorkerModule} from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ErrorComponent,\n    DashboardComponent,\n    SubCategoryLayoutComponent,\n    CartLayoutComponent,\n    CommonLayoutComponent,\n    InvoiceLayoutComponent,\n    OrderLayoutComponent,\n    PaymentLayoutComponent,\n    ProductLayoutComponent,\n    ShopLayoutComponent,\n    CategoryLayoutComponent,\n    TagLayoutComponent,\n    AuthComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ComponentModule,\n    NgxsModule.forRoot(States, {\n      developmentMode: !environment.production\n    }),\n    NgxsStoragePluginModule.forRoot({\n      key: StatesNames,\n      storage: StorageOption.LocalStorage\n    }),\n    BrowserAnimationsModule,\n    StripeIntegrationModule,\n    SharedModule,\n    NgxStripeModule.forRoot(environment.stripePublishedKey),\n    ServiceWorkerModule.register('ngsw-worker.js', {enabled: environment.production}),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    AsyncPipe,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    },\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {DashboardComponent} from './layouts/dashboard/dashboard.component';\nimport {ErrorComponent} from './layouts/error/error.component';\nimport {SubCategoryLayoutComponent} from './layouts/sub-category-layout/sub-category-layout.component';\nimport {OrderLayoutComponent} from './layouts/order-layout/order-layout.component';\nimport {UserAuthGuard} from './commons/guards/user-auth.guard';\nimport {ProductLayoutComponent} from './layouts/product-layout/product-layout.component';\nimport {InvoiceLayoutComponent} from './layouts/invoice-layout/invoice-layout.component';\nimport {TagLayoutComponent} from './layouts/tag-layout/tag-layout.component';\nimport {ShopLayoutComponent} from './layouts/shop-layout/shop-layout.component';\nimport {CartLayoutComponent} from './layouts/cart-layout/cart-layout.component';\nimport {CommonLayoutComponent} from './layouts/common-layout/common-layout.component';\nimport {CategoryLayoutComponent} from './layouts/category-layout/category-layout.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full',\n  }, {\n    path: '',\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/dashboard/dashboard.module').then(d => d.DashboardModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: InvoiceLayoutComponent,\n    canActivate: [UserAuthGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/invoice-layout/invoice-layout.module').then(i => i.InvoiceLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: ProductLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/product-layout/product-layout.module').then(p => p.ProductLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: SubCategoryLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/sub-category-layout/sub-category-layout.module').then(subC => subC.SubCategoryLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: CartLayoutComponent,\n    canActivate: [UserAuthGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/cart-layout/cart-layout.module').then(c => c.CartLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: OrderLayoutComponent,\n    canActivate: [UserAuthGuard],\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/order-layout/order-layout.module').then(o => o.OrderLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: CommonLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/common-layout/common-layout.module').then(c => c.CommonLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: ShopLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/shop-layout/shop-layout.module').then(s => s.ShopLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: CategoryLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/category-layout/category-layout.module').then(c => c.CategoryLayoutModule)\"\n      }\n    ]\n  },\n\n  {\n    path: '',\n    component: TagLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/tag-layout/tag-layout.module').then(t => t.TagLayoutModule)\"\n      }\n    ]\n  },\n  {\n    path: '',\n    component: ErrorComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./layouts/error/error.module').then(e => e.ErrorModule)\"\n      }\n    ]\n  },\n  {\n    path: 'auth',\n    loadChildren: () =>\n      \"import('./layouts/auth/auth.module').then(a => a.AuthModule)\"\n  },\n  {\n    path: '**',\n    redirectTo: 'home'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/auth/auth.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/auth/auth.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layouts/auth/auth.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layouts/auth/auth.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\nimport {HelperService} from '../../shared/services/helper.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(public gdService: GlobalDataService,\n              public helperService: HelperService) {\n  }\n\n  ngOnInit() {\n\n\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      &nbsp; Back\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Back      '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDto.html":{"url":"classes/AuthCredentialsDto.html","title":"class - AuthCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/auth-credentials.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/auth-credentials.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/auth-credentials.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/auth-credentials.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthCredentialsDto {\n\n  username: string;\n\n  email: string;\n\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {RouterModule} from '@angular/router';\nimport {AuthLayoutRoutes} from './auth-layout.routing';\nimport {LoginComponent} from '../../pages/auth/login/login.component';\nimport {RegisterComponent} from '../../pages/auth/register/register.component';\nimport {ResetPasswordComponent} from '../../pages/auth/reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AuthLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserName\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                resetPassword\n                            \n                            \n                                sendEmailVerification\n                            \n                            \n                                updateToken\n                            \n                            \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkUserName\n                        \n                        \n                    \n                \n            \n            \n                \ncheckUserName(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(authCredentialsDto: AuthCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDto\n                                    \n                                                AuthCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword(resetPasswordDto: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPasswordDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendEmailVerification\n                        \n                        \n                    \n                \n            \n            \n                \nsendEmailVerification(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateToken\n                        \n                        \n                    \n                \n            \n            \n                \nupdateToken(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            verifyEmail\n                        \n                        \n                    \n                \n            \n            \n                \nverifyEmail(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/auth.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {LoginResponse} from '../../commons/interfaces/login-response';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\nimport {GlobalDataDto} from '../../commons/public-dto/global-data.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  public login(authCredentialsDto: AuthCredentialsDto): Observable {\n    return this._http.post(ApiEndpoints.AuthEndpoints.loginUser, authCredentialsDto);\n  }\n\n  public register(authCredentialsDto: AuthCredentialsDto): Observable {\n    return this._http.post(ApiEndpoints.AuthEndpoints.registerUser, authCredentialsDto);\n  }\n\n\n  checkUserName(username: string): Observable {\n    return this._http.get(`${ApiEndpoints.AuthEndpoints.checkUsername}/${username}`);\n  }\n\n  sendEmailVerification(email: string) {\n    const url = `${ApiEndpoints.AuthEndpoints.sendEmailVerification}/${email}`;\n    return this._http.get(url);\n  }\n\n  updateToken(email: string): Observable {\n    return this._http.put(`${ApiEndpoints.AuthEndpoints.updateToken}/${email}`, null);\n  }\n\n  verifyEmail(token: string): Observable {\n    const url = `${ApiEndpoints.AuthEndpoints.verifyEmail}/${token}`;\n    return this._http.get(url);\n  }\n\n\n  forgotPassword(email: string) {\n    const url = `${ApiEndpoints.AuthEndpoints.forgotPassword}/${email}`;\n    return this._http.get(url);\n  }\n\n  resetPassword(resetPasswordDto: any) {\n    return this._http.post(ApiEndpoints.AuthEndpoints.resetPassword,\n      resetPasswordDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthState.html":{"url":"injectables/AuthState.html","title":"injectable - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                registerAdmin\n                            \n                            \n                                setUserCart\n                            \n                            \n                                setUserProfile\n                            \n                            \n                                    Static\n                                token\n                            \n                            \n                                    Static\n                                Token\n                            \n                            \n                                updateToken\n                            \n                            \n                                    Static\n                                User\n                            \n                            \n                                    Static\n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth.state.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated(state: AuthStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AuthStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(ctx: StateContext, action: Login)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Login)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout(ctx: StateContext, action: Logout)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Logout)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Logout\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerAdmin\n                        \n                        \n                    \n                \n            \n            \n                \nregisterAdmin(ctx: StateContext, action: Register)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(Register)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                Register\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUserCart\n                        \n                        \n                    \n                \n            \n            \n                \nsetUserCart(ctx: StateContext, action: SetUserCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetUserCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetUserCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nsetUserProfile(ctx: StateContext, action: SetUserProfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetUserProfile)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetUserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            token\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    token(state: AuthStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AuthStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Token\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Token(state: AuthStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AuthStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateToken\n                        \n                        \n                    \n                \n            \n            \n                \nupdateToken(ctx: StateContext, action: UpdateToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UpdateToken)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UpdateToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            User\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    User(state: AuthStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AuthStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserModel | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Username\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Username(state: AuthStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/auth/auth.state.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AuthStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {AuthStateModel, Login, Logout, Register, SetUserCart, SetUserProfile, UpdateToken} from './auth-actions';\nimport {tap} from 'rxjs/operators';\nimport {AuthService} from '../../services/auth/auth.service';\nimport {LoginResponse} from '../../commons/interfaces/login-response';\nimport {UserModel} from '../../models/Auth/user.model';\n\n@State({\n  name: 'auth',\n  defaults: {\n    token: null,\n    user: null,\n  }\n})\n\n@Injectable()\nexport class AuthState {\n\n  @Selector()\n  static token(state: AuthStateModel): string | null {\n    return state.token;\n  }\n\n  @Selector()\n  static isAuthenticated(state: AuthStateModel): boolean {\n    return !!state.token;\n  }\n\n  @Selector()\n  static Token(state: AuthStateModel): string {\n    return state.token;\n  }\n\n  @Selector()\n  static Username(state: AuthStateModel): string | null {\n    return state.user.username;\n  }\n\n  @Selector()\n  static User(state: AuthStateModel): UserModel | null {\n    return state.user;\n  }\n\n  constructor(private authService: AuthService, private store: Store) {\n  }\n\n  @Action(Login)\n  login(ctx: StateContext, action: Login) {\n    return this.authService.login(action.payload).pipe(\n      tap((result: LoginResponse) => {\n        if (result) {\n          ctx.setState({\n            user: result.user,\n            token: result.token\n          });\n        }\n      })\n    );\n  }\n\n  @Action(Register)\n  registerAdmin(ctx: StateContext, action: Register) {\n    return this.authService.register(action.payload).pipe(\n      tap((result: LoginResponse) => {\n        if (result) {\n          ctx.setState({\n            user: result.user,\n            token: result.token\n          });\n        }\n      })\n    );\n  }\n\n  @Action(SetUserProfile)\n  setUserProfile(ctx: StateContext, action: SetUserProfile) {\n    const user = Object.assign({}, ctx.getState().user);\n    user.profileId = action.profileId;\n    ctx.patchState({\n      user\n    });\n  }\n\n  @Action(SetUserCart)\n  setUserCart(ctx: StateContext, action: SetUserCart) {\n    const user = Object.assign({}, ctx.getState().user);\n    user.cartId = action.cartId;\n    ctx.patchState({\n      user\n    });\n  }\n\n  @Action(UpdateToken)\n  updateToken(ctx: StateContext, action: UpdateToken) {\n    ctx.patchState({\n      token: action.token\n    });\n  }\n\n  @Action(Logout)\n  logout(ctx: StateContext, action: Logout) {\n    ctx.setState({\n      token: null,\n      user: null,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthStateModel.html":{"url":"interfaces/AuthStateModel.html","title":"interface - AuthStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         UserModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BillingAddress.html":{"url":"classes/BillingAddress.html","title":"class - BillingAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BillingAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/classes/billing-address.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address1\n                            \n                            \n                                address2\n                            \n                            \n                                city\n                            \n                            \n                                comments\n                            \n                            \n                                country\n                            \n                            \n                                email\n                            \n                            \n                                fullName\n                            \n                            \n                                phone\n                            \n                            \n                                postalCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/billing-address.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BillingAddress {\n  fullName: string;\n  country: string;\n  city: string;\n  address1: string;\n  address2: string;\n  postalCode: any;\n  phone: string;\n  email: string;\n  comments: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelOrder.html":{"url":"classes/CancelOrder.html","title":"class - CancelOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Cancel Order'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartLayoutComponent.html":{"url":"components/CartLayoutComponent.html","title":"component - CartLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CartLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/cart-layout/cart-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart-layout\n            \n\n            \n                styleUrls\n                ./cart-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./cart-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/cart-layout/cart-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/cart-layout/cart-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cart-layout',\n  templateUrl: './cart-layout.component.html',\n  styleUrls: ['./cart-layout.component.css']\n})\nexport class CartLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./cart-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartLayoutModule.html":{"url":"modules/CartLayoutModule.html","title":"module - CartLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CartLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartLayoutModule\n\n\n\ncluster_CartLayoutModule_imports\n\n\n\ncluster_CartLayoutModule_declarations\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\n\n\nCartLayoutModule\n\nCartLayoutModule\n\nCartLayoutModule -->\n\nCheckoutComponent->CartLayoutModule\n\n\n\n\n\nUserCartComponent\n\nUserCartComponent\n\nCartLayoutModule -->\n\nUserCartComponent->CartLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCartLayoutModule -->\n\nSharedModule->CartLayoutModule\n\n\n\n\n\nStripeIntegrationModule\n\nStripeIntegrationModule\n\nCartLayoutModule -->\n\nStripeIntegrationModule->CartLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/cart-layout/cart-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckoutComponent\n                        \n                        \n                            UserCartComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            StripeIntegrationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UserCartComponent} from '../../pages/cart/user-cart/user-cart.component';\nimport {RouterModule} from '@angular/router';\nimport {CartLayoutRoutes} from './cart-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {CheckoutComponent} from '../../pages/cart/checkout/checkout.component';\nimport {StripeIntegrationModule} from '../../modules/stripe-integration/stripe-integration.module';\n\n\n@NgModule({\n  declarations: [UserCartComponent, CheckoutComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(CartLayoutRoutes),\n    SharedModule,\n    StripeIntegrationModule\n  ]\n})\nexport class CartLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartModel.html":{"url":"classes/CartModel.html","title":"class - CartModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Cart/cart.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartProducts\n                            \n                            \n                                id\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cartProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CartProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartProductModel} from './cart-product.model';\n\nexport class CartModel {\n  id: number;\n\n  totalItems: number;\n\n  cartProducts: CartProductModel[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartProductModel.html":{"url":"classes/CartProductModel.html","title":"class - CartProductModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartProductModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Cart/cart-product.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cart\n                            \n                            \n                                cartId\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                maxPush\n                            \n                            \n                                name\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                totalPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CartModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxPush\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Cart/cart-product.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from './cart.model';\n\nexport class CartProductModel  {\n  id: number;\n  name: string;\n\n\n  image: string;\n\n  cart: CartModel;\n\n  totalPrice: number;\n\n  cartId: number;\n\n  quantity: number;\n\n  maxPush: number;\n\n  productId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cart/cart.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkoutOnCart\n                            \n                            \n                                checkoutOnSingleProduct\n                            \n                            \n                                clearCart\n                            \n                            \n                                createUserCart\n                            \n                            \n                                getUserCart\n                            \n                            \n                                removeCartProductFromCart\n                            \n                            \n                                removeProductsFromCart\n                            \n                            \n                                updateCartProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cart/cart.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkoutOnCart\n                        \n                        \n                    \n                \n            \n            \n                \ncheckoutOnCart(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkoutOnSingleProduct\n                        \n                        \n                    \n                \n            \n            \n                \ncheckoutOnSingleProduct(cartProductId: number, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartProductId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCart\n                        \n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUserCart\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUserCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserCart\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserCart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeCartProductFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveCartProductFromCart(cartId: number, cartProductId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartProductId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeProductsFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveProductsFromCart(removedData: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedData\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCartProductQuantity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCartProductQuantity(cartId: number, cartProductId: number, newQuantity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/cart/cart.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartProductId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newQuantity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {CartModel} from '../../models/Cart/cart.model';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\nimport {CheckoutReturnData} from '../../commons/interfaces/checkout-return-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getUserCart(): Observable {\n    return this._http.get(`${ApiEndpoints.CartEndpoints.rootCart}/user-cart`);\n  }\n\n  createUserCart(): Observable {\n    return this._http.post(`${ApiEndpoints.CartEndpoints.rootCart}/create-user-cart`, null);\n  }\n\n  checkoutOnCart(payload: { createPaymentDto: any, createOrderDto: any }): Observable {\n    return this._http.post\n    (`${ApiEndpoints.CartEndpoints.rootCart}/checkout-on-cart`, payload);\n  }\n\n  checkoutOnSingleProduct(cartProductId: number, payload: any): Observable {\n    return this._http.post\n    (`${ApiEndpoints.CartEndpoints.rootCart}/checkout-on-single-product/${cartProductId}`, payload);\n  }\n\n  clearCart(): Observable {\n    return this._http.delete(`${ApiEndpoints.CartEndpoints.rootCart}/clear-cart`);\n  }\n\n  updateCartProductQuantity(cartId: number, cartProductId: number, newQuantity: number) {\n    let params = new HttpParams();\n    params = params.append('newQuantity', newQuantity.toString());\n    return this._http.put(`${ApiEndpoints.CartEndpoints.rootCart}/${cartId}/update-product-cart-quantity/${cartProductId}`, null, {\n      params\n    });\n  }\n  removeCartProductFromCart(cartId: number,\n                            cartProductId: number) {\n    return this._http.delete(`${ApiEndpoints.CartEndpoints.rootCart}/${cartId}/remove-product-from-cart/${cartProductId}`);\n  }\n\n  removeProductsFromCart(removedData: { cartProducts: RemoveCartItem[] }): Observable {\n    return this._http\n      .request('delete', `${ApiEndpoints.CartEndpoints.rootCart}/remove-products-from-cart`, {\n        body: {\n          removedData\n        }\n      });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartState.html":{"url":"injectables/CartState.html","title":"injectable - CartState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CartState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProductToCart\n                            \n                            \n                                afterCheckoutComplete\n                            \n                            \n                                    Static\n                                Cart\n                            \n                            \n                                checkoutOnCart\n                            \n                            \n                                checkoutOnSingleProduct\n                            \n                            \n                                clearCartContent\n                            \n                            \n                                clearCartFromStorage\n                            \n                            \n                                createUserCart\n                            \n                            \n                                fetchUserCart\n                            \n                            \n                                removeCartProduct\n                            \n                            \n                                removeProductsFromCart\n                            \n                            \n                                updateCartProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.state.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addProductToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddProductToCart(ctx: StateContext, action: UpdateCartState)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UpdateCartState)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UpdateCartState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            afterCheckoutComplete\n                        \n                        \n                    \n                \n            \n            \n                \nafterCheckoutComplete(result: CheckoutReturnData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                CheckoutReturnData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Cart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Cart(state: CartStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CartStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkoutOnCart\n                        \n                        \n                    \n                \n            \n            \n                \ncheckoutOnCart(ctx: StateContext, action: CheckoutOnCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CheckoutOnCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                CheckoutOnCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkoutOnSingleProduct\n                        \n                        \n                    \n                \n            \n            \n                \ncheckoutOnSingleProduct(ctx: StateContext, action: CheckoutOnSingleProduct)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CheckoutOnSingleProduct)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                CheckoutOnSingleProduct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCartContent\n                        \n                        \n                    \n                \n            \n            \n                \nclearCartContent(ctx: StateContext, action: ClearCartContent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearCartContent)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearCartContent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCartFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \nclearCartFromStorage(ctx: StateContext, action: ClearCartFromStorage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearCartFromStorage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearCartFromStorage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUserCart\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUserCart(ctx: StateContext, action: CreateUserCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CreateUserCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                CreateUserCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserCart\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserCart(ctx: StateContext, action: FetchUserCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchUserCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchUserCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeCartProduct\n                        \n                        \n                    \n                \n            \n            \n                \nremoveCartProduct(ctx: StateContext, action: RemoveCartProduct)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RemoveCartProduct)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                RemoveCartProduct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeProductsFromCart\n                        \n                        \n                    \n                \n            \n            \n                \nremoveProductsFromCart(ctx: StateContext, action: RemoveProductsFromCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(RemoveProductsFromCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                RemoveProductsFromCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCartProductQuantity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCartProductQuantity(ctx: StateContext, action: UpdateCartProductQuantity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UpdateCartProductQuantity)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/cart/cart.state.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UpdateCartProductQuantity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {Injectable} from '@angular/core';\nimport {CartActions, CartStateModel} from './cart.actions';\nimport {CartService} from '../../services/cart/cart.service';\nimport FetchUserCart = CartActions.FetchUserCart;\nimport {tap} from 'rxjs/operators';\nimport {CartModel} from '../../models/Cart/cart.model';\nimport CreateUserCart = CartActions.CreateUserCart;\nimport ClearCartFromStorage = CartActions.ClearCartFromStorage;\nimport ClearCartContent = CartActions.ClearCartContent;\nimport CheckoutOnCart = CartActions.CheckoutOnCart;\nimport {CheckoutReturnData} from '../../commons/interfaces/checkout-return-data';\nimport CheckoutOnSingleProduct = CartActions.CheckoutOnSingleProduct;\nimport RemoveProductsFromCart = CartActions.RemoveProductsFromCart;\nimport {SetUserCart} from '../auth/auth-actions';\nimport {patch} from '@ngxs/store/operators';\nimport {InvoiceActions} from '../invoice/invoice.actions';\nimport PushInvoice = InvoiceActions.PushInvoice;\nimport {OrderActions} from '../order/order.actions';\nimport PushOrder = OrderActions.PushOrder;\nimport {PaymentActions} from '../payment/payment.actions';\nimport PushPayment = PaymentActions.PushPayment;\nimport {AuthState} from '../auth/auth.state';\nimport SetCustomerToken = PaymentActions.SetCustomerToken;\nimport UpdateCartProductQuantity = CartActions.UpdateCartProductQuantity;\nimport RemoveCartProduct = CartActions.RemoveCartProduct;\nimport UpdateCartState = CartActions.UpdateCartState;\n\n\n@State({\n  name: 'cart',\n  defaults: {\n    cart: null\n  }\n})\n@Injectable()\nexport class CartState {\n  constructor(private cartService: CartService, private store: Store) {\n  }\n\n  @Selector()\n  static Cart(state: CartStateModel) {\n    return state.cart;\n  }\n\n  @Action(FetchUserCart)\n  fetchUserCart(ctx: StateContext, action: FetchUserCart) {\n    return this.cartService.getUserCart().pipe(\n      tap((cart: CartModel) => {\n        ctx.setState({\n          cart\n        });\n      })\n    );\n  }\n\n  @Action(CreateUserCart)\n  createUserCart(ctx: StateContext, action: CreateUserCart) {\n    return this.cartService.createUserCart().pipe(\n      tap((cart: CartModel) => {\n        ctx.setState({\n          cart\n        });\n        this.store.dispatch(new SetUserCart(cart.id));\n      })\n    );\n  }\n\n  @Action(ClearCartContent)\n  clearCartContent(ctx: StateContext, action: ClearCartContent) {\n    return this.cartService.clearCart().pipe(\n      tap((cart: CartModel) => {\n        ctx.setState({\n          cart\n        });\n      })\n    );\n  }\n\n  @Action(UpdateCartState)\n  addProductToCart(ctx: StateContext, action: UpdateCartState) {\n    ctx.setState(patch({\n      cart: action.cart\n    }));\n  }\n\n  @Action(UpdateCartProductQuantity)\n  updateCartProductQuantity(ctx: StateContext, action: UpdateCartProductQuantity) {\n    return this.cartService.updateCartProductQuantity(action.cartId, action.cartProductId, action.newQuantity).pipe(\n      tap((cart: CartModel) => {\n        ctx.patchState({\n          cart\n        });\n      })\n    );\n  }\n\n  @Action(RemoveCartProduct)\n  removeCartProduct(ctx: StateContext, action: RemoveCartProduct) {\n    return this.cartService.removeCartProductFromCart(action.cartId, action.cartProductId).pipe(\n      tap((cart: CartModel) => {\n        ctx.patchState({\n          cart\n        });\n      })\n    );\n  }\n\n  @Action(CheckoutOnCart)\n  checkoutOnCart(ctx: StateContext, action: CheckoutOnCart) {\n    return this.cartService.checkoutOnCart(action.payload).pipe(\n      tap((result: CheckoutReturnData) => {\n        if (result) {\n          const {cart, customerId} = result;\n          ctx.patchState({\n            cart\n          });\n          this.afterCheckoutComplete(result);\n          if (!this.store.selectSnapshot(AuthState.User).stripeId) {\n            this.store.dispatch(new SetCustomerToken(customerId));\n          }\n        }\n      })\n    );\n  }\n\n  afterCheckoutComplete(result: CheckoutReturnData) {\n    const {order, invoice, payment} = result;\n    this.store.dispatch(new PushInvoice(invoice));\n    this.store.dispatch(new PushPayment(payment));\n    this.store.dispatch(new PushOrder(order));\n  }\n\n\n  @Action(CheckoutOnSingleProduct)\n  checkoutOnSingleProduct(ctx: StateContext, action: CheckoutOnSingleProduct) {\n    return this.cartService.checkoutOnSingleProduct(action.cartProductId, action.payload).pipe(\n      tap((result: CheckoutReturnData) => {\n        if (result) {\n          const {cart} = result;\n          ctx.patchState({\n            cart\n          });\n          this.afterCheckoutComplete(result);\n        }\n      })\n    );\n  }\n\n  @Action(RemoveProductsFromCart)\n  removeProductsFromCart(ctx: StateContext, action: RemoveProductsFromCart) {\n    return this.cartService.removeProductsFromCart(action.payload).pipe(\n      tap((cart: CartModel) => {\n        ctx.patchState({\n          cart\n        });\n      })\n    );\n  }\n\n  @Action(ClearCartFromStorage)\n  clearCartFromStorage(ctx: StateContext, action: ClearCartFromStorage) {\n    ctx.setState({\n      cart: null\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CartStateModel.html":{"url":"interfaces/CartStateModel.html","title":"interface - CartStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CartStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cart\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cart\n                                    \n                                \n                                \n                                    \n                                        cart:         CartModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDetailsComponent.html":{"url":"components/CategoryDetailsComponent.html","title":"component - CategoryDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoryDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/category/category-details/category-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-details\n            \n\n            \n                styleUrls\n                ./category-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, helperService: HelperService, gdService: GlobalDataService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/category/category-details/category-details.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/category/category-details/category-details.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CategoryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/category/category-details/category-details.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/category/category-details/category-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/category/category-details/category-details.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {CategoryModel} from '../../../models/Categories/category.model';\n\n@Component({\n  selector: 'app-category-details',\n  templateUrl: './category-details.component.html',\n  styleUrls: ['./category-details.component.css']\n})\nexport class CategoryDetailsComponent implements OnInit {\n  category: CategoryModel;\n\n  constructor(private router: Router,\n              public helperService: HelperService,\n              public gdService: GlobalDataService,\n              private route: ActivatedRoute) {\n    route.paramMap.subscribe((params: ParamMap) => {\n      const id = +params.get('id');\n      if (id) {\n        helperService.showSpinner();\n        const category = this.gdService.Categories.find(c => c.id === id);\n        if (category) {\n          this.category = category;\n          helperService.hideSpinner();\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Loading Category...\n  \n\n\n  \n    \n      \n        \n          \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{subCategory.name}}\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./category-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Loading Category...                                                                                                                                                                                                                                  {{subCategory.name}}                                                        '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/category.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/category.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CategoryDto {\n  name: string;\n  description: string;\n}\n\nexport class SubCategoryDto {\n  name: string;\n  description: string;\n  references: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryLayoutComponent.html":{"url":"components/CategoryLayoutComponent.html","title":"component - CategoryLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoryLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/category-layout/category-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-layout\n            \n\n            \n                styleUrls\n                ./category-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/category-layout/category-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/category-layout/category-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-category-layout',\n  templateUrl: './category-layout.component.html',\n  styleUrls: ['./category-layout.component.css']\n})\nexport class CategoryLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./category-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryLayoutModule.html":{"url":"modules/CategoryLayoutModule.html","title":"module - CategoryLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoryLayoutModule\n\n\n\ncluster_CategoryLayoutModule_declarations\n\n\n\ncluster_CategoryLayoutModule_imports\n\n\n\n\nCategoryDetailsComponent\n\nCategoryDetailsComponent\n\n\n\nCategoryLayoutModule\n\nCategoryLayoutModule\n\nCategoryLayoutModule -->\n\nCategoryDetailsComponent->CategoryLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCategoryLayoutModule -->\n\nSharedModule->CategoryLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/category-layout/category-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoryDetailsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {CategoryLayoutRoutes} from './category-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {CategoryDetailsComponent} from '../../pages/category/category-details/category-details.component';\n\n\n@NgModule({\n  declarations: [CategoryDetailsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(CategoryLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class CategoryLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryModel.html":{"url":"classes/CategoryModel.html","title":"class - CategoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Categories/category.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCategory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subCategories\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubCategoryModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/category.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:2\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractCategory} from '../../commons/classes/abstract-category';\nimport {SubCategoryModel} from './sub-category.model';\n\nexport class CategoryModel extends AbstractCategory {\n  subCategories: SubCategoryModel[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CategoryPipe.html":{"url":"pipes/CategoryPipe.html","title":"pipe - CategoryPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CategoryPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/category.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        categoriesFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(categories: CategoryModel[], searchTerm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/pipes/category.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n                                    \n                                                CategoryModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchTerm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CategoryModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {CategoryModel} from '../../models/Categories/category.model';\n\n@Pipe({\n  name: 'categoriesFilter'\n})\nexport class CategoryPipe implements PipeTransform {\n\n  transform(categories: CategoryModel[], searchTerm: string): CategoryModel[] {\n    if (!categories || !searchTerm) {\n      return categories;\n    }\n    return categories.filter(category =>\n      category.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1)\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category/category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllCategories\n                            \n                            \n                                searchByMatchingName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category/category.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/category.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchByMatchingName\n                        \n                        \n                    \n                \n            \n            \n                \nsearchByMatchingName(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/category.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {Observable} from 'rxjs';\nimport {CategoryModel} from '../../models/Categories/category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getAllCategories(): Observable {\n    return this._http.get(ApiEndpoints.CategoryEndpoints.rootCategories);\n  }\n\n\n  searchByMatchingName(searchValue: string): Observable {\n    return this._http.get\n    (`${ApiEndpoints.CategoryEndpoints.rootCategories}/match-by-name/${searchValue}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryState.html":{"url":"injectables/CategoryState.html","title":"injectable - CategoryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/category/category.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                Categories\n                            \n                            \n                                clearCategories\n                            \n                            \n                                fetchAllCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/category/category.state.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Categories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Categories(state: CategoryStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/category/category.state.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CategoryStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCategories\n                        \n                        \n                    \n                \n            \n            \n                \nclearCategories(ctx: StateContext, action: ClearCategory)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearCategory)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/category/category.state.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAllCategories\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAllCategories(ctx: StateContext, action: FetchAllCategories)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchAllCategories)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/category/category.state.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchAllCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {Injectable} from '@angular/core';\nimport {tap} from 'rxjs/operators';\nimport {CategoryActions, CategoryStateModel} from './category.actions';\nimport {CategoryService} from '../../services/category/category.service';\nimport FetchAllCategories = CategoryActions.FetchAllCategories;\nimport {CategoryModel} from '../../models/Categories/category.model';\nimport ClearCategory = CategoryActions.ClearCategory;\n\n@State({\n  name: 'categories',\n  defaults: {\n    categories: null\n  }\n})\n@Injectable()\nexport class CategoryState {\n  constructor(private categoryService: CategoryService, private store: Store) {\n  }\n\n  @Selector()\n  static Categories(state: CategoryStateModel) {\n    return state.categories;\n  }\n\n  @Action(FetchAllCategories)\n  fetchAllCategories(ctx: StateContext, action: FetchAllCategories) {\n    return this.categoryService.getAllCategories().pipe(\n      tap((categories: CategoryModel[]) => {\n        ctx.setState({\n          categories\n        });\n      })\n    );\n  }\n\n\n  @Action(ClearCategory)\n  clearCategories(ctx: StateContext, action: ClearCategory) {\n    ctx.setState({\n      categories: null\n    });\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryStateModel.html":{"url":"interfaces/CategoryStateModel.html","title":"interface - CategoryStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CategoryStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/category/category.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categories\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categories\n                                    \n                                \n                                \n                                    \n                                        categories:         CategoryModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CategoryModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {CategoryModel} from '../../models/Categories/category.model';\n\nexport interface CategoryStateModel {\n  categories: CategoryModel[];\n}\n\nexport namespace CategoryActions {\n\n  export class FetchAllCategories {\n    static readonly type = '[Category] Fetch All Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCategoryById {\n    static readonly type = '[Category] Fetch Category By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearCategory {\n    static readonly type = '[Category] Clear Category';\n\n    constructor() {\n    }\n  }\n\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeProfileImage.html":{"url":"classes/ChangeProfileImage.html","title":"class - ChangeProfileImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeProfileImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imageForm\n                            \n                            \n                                    Public\n                                subFolder\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageForm: any, subFolder: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageForm\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subFolder\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Change Profile Image'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatbotComponent.html":{"url":"components/ChatbotComponent.html","title":"component - ChatbotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ChatbotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chatbot/chatbot.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chatbot\n            \n\n            \n                styleUrls\n                ./chatbot.component.css\n            \n\n\n\n            \n                templateUrl\n                ./chatbot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lex\n                            \n                            \n                                lexState\n                            \n                            \n                                messages\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                postLexText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chatbot/chatbot.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chatbot/chatbot.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postLexText\n                        \n                        \n                    \n                \n            \n            \n                \npostLexText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chatbot/chatbot.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LexRuntime\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/chatbot/chatbot.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lexState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Hi what would you like to do'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/chatbot/chatbot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/chatbot/chatbot.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/chatbot/chatbot.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {LexRuntime} from 'aws-sdk';\nimport {Message} from '../../models/chatbot/message';\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.css']\n})\nexport class ChatbotComponent implements OnInit {\n  lex: LexRuntime;\n  userInput: string = '';\n  messages: Message[] = [];\n  lexState: string = 'Hi what would you like to do';\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.messages.push(new Message(this.lexState, 'Box'));\n  }\n\n  postLexText() {\n    var params = {\n      botAlias: '\\$LATEST',\n      botName: 'Store',\n      inputText: 'Testing',\n      userId: 'User',\n    };\n    this.lex = new LexRuntime({\n      accessKeyId: 'AKIAJM6T2LPVYFHHY3VQ',\n      secretAccessKey: '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',\n      region: 'us-east-2'\n    });\n    params.inputText = this.userInput;\n    this.lex.postText(params, (err, data) => {\n      if (err) {\n        console.log(err, err.stack); // an error occurred\n      } else {\n        console.log(data); // successful response\n        this.lexState = data.message;\n      }\n      this.messages.push(new Message(this.userInput, 'User'));\n      this.userInput = '';\n      this.messages.push(new Message(this.lexState, 'Bot'));\n    });\n\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./chatbot.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatbotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatbotModule.html":{"url":"modules/ChatbotModule.html","title":"module - ChatbotModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatbotModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatbotModule\n\n\n\ncluster_ChatbotModule_declarations\n\n\n\n\nChatBot\n\nChatBot\n\n\n\nChatbotModule\n\nChatbotModule\n\nChatbotModule -->\n\nChatBot->ChatbotModule\n\n\n\n\n\nChatbotComponent\n\nChatbotComponent\n\nChatbotModule -->\n\nChatbotComponent->ChatbotModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chatbot/chatbot.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChatBot\n                        \n                        \n                            ChatbotComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ChatBot} from 'angular-ai-chat-bot';\nimport { ChatbotComponent } from './chatbot.component';\n\n\n\n@NgModule({\n  declarations: [ChatBot, ChatbotComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ChatbotModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CheckConnectionInterceptor.html":{"url":"interceptors/CheckConnectionInterceptor.html","title":"interceptor - CheckConnectionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  CheckConnectionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/interceptors/check-connection.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/interceptors/check-connection.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/interceptors/check-connection.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse\n} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {HelperService} from '../helper.service';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class CheckConnectionInterceptor implements HttpInterceptor {\n\n  constructor(private helperService: HelperService, private router: Router) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (!window.navigator.onLine) {\n      // if there is no internet, throw a HttpErrorResponse error\n      // since an error is thrown, the function will terminate here\n      const error = {\n        status: 0,\n        error: {\n          description: 'Check Connectivity!'\n        },\n        statusText: 'Check Connectivity!'\n      };\n      this.helperService.setIsOnline(false);\n      this.router.navigate(['/no-internet'], {\n        queryParams: {\n          returnUrl: this.router.url\n        }\n      });\n      return throwError(new HttpErrorResponse(error));\n    } else {\n      // else return the normal request\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutComponent.html":{"url":"components/CheckoutComponent.html","title":"component - CheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cart/checkout/checkout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout\n            \n\n            \n                styleUrls\n                ./checkout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./checkout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billingForm\n                            \n                            \n                                countries\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Controls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, gdService: GlobalDataService, helperService: HelperService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/cart/checkout/checkout.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/checkout/checkout.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billingForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Countries\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Controls\n                    \n                \n\n                \n                    \n                        getControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/cart/checkout/checkout.component.ts:58\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Countries} from '../../../commons/constants/countries';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {RxwebValidators} from '@rxweb/reactive-form-validators';\nimport {EmailPattern} from '../../../commons/constants';\nimport {CustomValidators} from 'ngx-custom-validators';\nimport {Router} from '@angular/router';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  billingForm: FormGroup;\n  countries = Countries;\n\n  constructor(private fb: FormBuilder, public gdService: GlobalDataService,\n              public helperService: HelperService, private router: Router) {\n    if (gdService.Cart.totalItems === 0) {\n      router.navigate(['/cart']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.billingForm = this.fb.group({\n      fullName: new FormControl(null, Validators.required),\n      email: new FormControl(null, [Validators.required, Validators.pattern(EmailPattern),\n        CustomValidators.email,]),\n      city: new FormControl(null, Validators.required),\n      country: new FormControl(null, Validators.required),\n      address1: new FormControl(null, Validators.required),\n      address2: new FormControl(null),\n      postalCode: new FormControl(null, [Validators.required,\n        Validators.maxLength(5), Validators.pattern('^[0-9]{5}(?:-[0-9]{4})?$')]),\n      phone: new FormControl(null, [Validators.required, RxwebValidators.mask({mask: '(+999)-99 999 9999'})]),\n      comments: new FormControl(null, Validators.required),\n    });\n\n    this.billingForm.valueChanges.subscribe(() => {\n      const phoneValue = this.billingForm.get('phone').value as string;\n      if (this.billingForm.get('phone').valid) {\n        if (phoneValue.startsWith('+')) {\n          return;\n        } else {\n          this.billingForm.patchValue({\n            phone: `+${this.billingForm.get('phone').value}`\n          });\n        }\n      }\n    });\n  }\n\n  get Controls() {\n    return this.billingForm.controls;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        \n          \n          \n            \n              Billing details\n              \n                \n                  Full Name\n                  \n                  \n                    Full Name is\n                      required\n                    \n                  \n                \n              \n              \n                \n                  Email\n                  \n                  \n                    Email is required\n                    Please provide a valid email\n                      address\n                  \n                \n              \n              \n                \n                  Country\n                  \n                    \n                       \n                         {{country}}\n                       \n                    \n                  \n                  \n                    Country is required\n                  \n                \n              \n              \n                \n                  City\n                  \n                  \n                    City is required\n                  \n                \n              \n              \n                \n                  Address1\n                  \n                  \n                    Address1 is required\n                  \n                \n              \n              \n                \n                  Address2\n                  \n                  This Field is optional\n                \n              \n              \n                \n                  Postal Code\n                  \n                  \n                    Postal Code is required\n                    Max value is 5 digits\n                    Please enter a valid postal code\n                  \n                \n              \n              \n                \n                  Phone Number\n                  \n                  \n                    Phone is required\n                    Please enter a valid phone number\n                  \n                \n              \n              \n                \n                  Comments\n                  \n                    \n                  \n                    Comments is required\n                  \n                \n              \n            \n          \n          \n\n        \n        \n\n        \n        \n\n          \n          \n            \n\n              The total amount of\n\n              \n                \n                  Shipping\n                  Gratis\n                \n                \n                  \n                    The total amount of\n                    \n                      (including VAT)\n                    \n                  \n                  ${{gdService.TotalPurchase}}\n                \n              \n\n              Make purchase\n              \n              \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./checkout.component.css\n                \n                @media only screen and (min-width: 768px) {\n  mat-form-field {\n    width: 100%;\n  }\n}\n@media only screen and (max-width: 600px) {\n  mat-form-field {\n    width: 90%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                  Billing details                                                Full Name                                                        Full Name is                      required                                                                                                                    Email                                                        Email is required                    Please provide a valid email                      address                                                                                                Country                                                                                      {{country}}                                                                                                   Country is required                                                                                                City                                                        City is required                                                                                                Address1                                                        Address1 is required                                                                                                Address2                                    This Field is optional                                                                              Postal Code                                                        Postal Code is required                    Max value is 5 digits                    Please enter a valid postal code                                                                                                Phone Number                                                        Phone is required                    Please enter a valid phone number                                                                                                Comments                                                                            Comments is required                                                                                                                                                              The total amount of                                                Shipping                  Gratis                                                                      The total amount of                                          (including VAT)                                                        ${{gdService.TotalPurchase}}                                            Make purchase                                                                                                      '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutOnCart.html":{"url":"classes/CheckoutOnCart.html","title":"class - CheckoutOnCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutOnCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Checkout On Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutOnSingleProduct.html":{"url":"classes/CheckoutOnSingleProduct.html","title":"class - CheckoutOnSingleProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutOnSingleProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartProductId\n                            \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartProductId: number, payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartProductId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Checkout On Single Product'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckoutReturnData.html":{"url":"interfaces/CheckoutReturnData.html","title":"interface - CheckoutReturnData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CheckoutReturnData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/interfaces/checkout-return-data.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cart\n                                \n                                \n                                        customerId\n                                \n                                \n                                        invoice\n                                \n                                \n                                        order\n                                \n                                \n                                        payment\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cart\n                                    \n                                \n                                \n                                    \n                                        cart:         CartModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CartModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customerId\n                                    \n                                \n                                \n                                    \n                                        customerId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invoice\n                                    \n                                \n                                \n                                    \n                                        invoice:         InvoiceModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvoiceModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         OrderModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment\n                                    \n                                \n                                \n                                    \n                                        payment:         PaymentModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {InvoiceModel} from '../../models/Invoice/invoice.model';\nimport {PaymentModel} from '../../models/Payments/payment.model';\nimport {CartModel} from '../../models/Cart/cart.model';\n\nexport interface CheckoutReturnData {\n  order: OrderModel;\n  invoice: InvoiceModel;\n  payment: PaymentModel;\n  cart: CartModel;\n  customerId: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCartContent.html":{"url":"classes/ClearCartContent.html","title":"class - ClearCartContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCartContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Clear Cart Content'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCartFromStorage.html":{"url":"classes/ClearCartFromStorage.html","title":"class - ClearCartFromStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCartFromStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:83\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Clear Cart From Storage'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearCategory.html":{"url":"classes/ClearCategory.html","title":"class - ClearCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/category/category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/category/category.actions.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Category] Clear Category'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/category/category.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CategoryModel} from '../../models/Categories/category.model';\n\nexport interface CategoryStateModel {\n  categories: CategoryModel[];\n}\n\nexport namespace CategoryActions {\n\n  export class FetchAllCategories {\n    static readonly type = '[Category] Fetch All Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCategoryById {\n    static readonly type = '[Category] Fetch Category By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearCategory {\n    static readonly type = '[Category] Clear Category';\n\n    constructor() {\n    }\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearInvoicesFromStorage.html":{"url":"classes/ClearInvoicesFromStorage.html","title":"class - ClearInvoicesFromStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearInvoicesFromStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/invoice/invoice.actions.ts:31\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Invoice] Clear Invoices From Storage'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {InvoiceModel} from '../../models/Invoice/invoice.model';\n\nexport interface InvoiceStateModel {\n  invoices: InvoiceModel[];\n}\n\nexport namespace InvoiceActions {\n\n  export class FetchUserInvoices {\n    static readonly type = '[Invoice] Fetch User Invoices';\n\n    constructor() {\n    }\n  }\n\n  export class PushInvoice {\n    static readonly type = '[Invoice] Push Invoice';\n\n    constructor(public invoice: InvoiceModel) {\n    }\n  }\n\n  export class FetchInvoiceById {\n    static readonly type = '[Invoice] Fetch Invoice By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearInvoicesFromStorage {\n    static readonly type = '[Invoice] Clear Invoices From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearOrdersFromStorage.html":{"url":"classes/ClearOrdersFromStorage.html","title":"class - ClearOrdersFromStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearOrdersFromStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:47\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Clear Orders From Storage'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearPaymentsFromStorage.html":{"url":"classes/ClearPaymentsFromStorage.html","title":"class - ClearPaymentsFromStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearPaymentsFromStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.actions.ts:38\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Payment] Clear Payments From Storage'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearProducts.html":{"url":"classes/ClearProducts.html","title":"class - ClearProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:76\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Clear Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearProfileData.html":{"url":"classes/ClearProfileData.html","title":"class - ClearProfileData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearProfileData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:52\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Clear Profile Data'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearSubCategory.html":{"url":"classes/ClearSubCategory.html","title":"class - ClearSubCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearSubCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/sub-category/sub-category.actions.ts:32\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SubCategory] Clear SubCategory'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\nexport interface SubCategoryStateModel {\n  subCategories: SubCategoryModel[];\n}\n\nexport namespace SubCategoryActions {\n  export class FetchAllSubCategories {\n    static readonly type = '[SubCategory] Fetch All Sub Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchSubCategoryById {\n    static readonly type = '[SubCategory] Fetch SubCategory By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class FetchSubCategoriesByTagName {\n    static readonly type = '[SubCategory] Fetch SubCategories By Tag Name';\n\n    constructor(public tagName: string, public slice: number) {\n    }\n  }\n\n\n  export class ClearSubCategory {\n    static readonly type = '[SubCategory] Clear SubCategory';\n\n    constructor() {\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClearTags.html":{"url":"classes/ClearTags.html","title":"class - ClearTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClearTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/tag/tag.actions.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Tag] Clear Tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/tag/tag.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\nexport interface TagStateModel {\n  subCategoriesTags: SubCategoryTagModel[];\n  productsTags: ProductTagModel[]\n}\n\nexport namespace TagActions {\n  export class FetchSubCategoriesTags {\n    static readonly type = '[Tag] Fetch SubCategories Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsTags {\n    static readonly type = '[Tag] Fetch Products Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchTagById {\n    static readonly type = '[Tag] Fetch Tag By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearTags {\n    static readonly type = '[Tag] Clear Tags';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CommonLayoutComponent.html":{"url":"components/CommonLayoutComponent.html","title":"component - CommonLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CommonLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/common-layout/common-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-common-layout\n            \n\n            \n                styleUrls\n                ./common-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./common-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/common-layout/common-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/common-layout/common-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-common-layout',\n  templateUrl: './common-layout.component.html',\n  styleUrls: ['./common-layout.component.css']\n})\nexport class CommonLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./common-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CommonLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonLayoutModule.html":{"url":"modules/CommonLayoutModule.html","title":"module - CommonLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonLayoutModule\n\n\n\ncluster_CommonLayoutModule_exports\n\n\n\ncluster_CommonLayoutModule_imports\n\n\n\ncluster_CommonLayoutModule_declarations\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\n\n\nCommonLayoutModule\n\nCommonLayoutModule\n\nCommonLayoutModule -->\n\nSearchBarComponent->CommonLayoutModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nCommonLayoutModule -->\n\nSearchComponent->CommonLayoutModule\n\n\n\n\n\nSearchBarComponent \n\nSearchBarComponent \n\nSearchBarComponent  -->\n\nCommonLayoutModule->SearchBarComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCommonLayoutModule -->\n\nSharedModule->CommonLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/common-layout/common-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SearchBarComponent\n                        \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SearchBarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {CommonLayoutRoutes} from './common-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {SearchComponent} from '../../pages/common/search/search.component';\nimport {SearchBarComponent} from '../../pages/common/search-bar/search-bar.component';\nimport {PipesModule} from '../../commons/pipes/pipes.module';\n\n\n@NgModule({\n  declarations: [SearchComponent, SearchBarComponent],\n  exports: [\n    SearchBarComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(CommonLayoutRoutes),\n    SharedModule,\n    PipesModule\n  ]\n})\nexport class CommonLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentModule.html":{"url":"modules/ComponentModule.html","title":"module - ComponentModule","body":"\n                   \n\n\n\n\n    Modules\n    ComponentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentModule\n\n\n\ncluster_ComponentModule_exports\n\n\n\ncluster_ComponentModule_imports\n\n\n\ncluster_ComponentModule_declarations\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nComponentModule\n\nComponentModule\n\nComponentModule -->\n\nFooterComponent->ComponentModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nComponentModule -->\n\nNavbarComponent->ComponentModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentModule -->\n\nSidebarComponent->ComponentModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentModule->FooterComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nComponentModule->NavbarComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentModule->SidebarComponent \n\n\n\n\n\nCommonLayoutModule\n\nCommonLayoutModule\n\nComponentModule -->\n\nCommonLayoutModule->ComponentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nComponentModule -->\n\nSharedModule->ComponentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/component.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonLayoutModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FooterComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            SidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared-global.module';\nimport {PipesModule} from '../commons/pipes/pipes.module';\nimport {CommonLayoutModule} from '../layouts/common-layout/common-layout.module';\n\n\n@NgModule({\n  declarations: [NavbarComponent, SidebarComponent, FooterComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    PipesModule,\n    CommonLayoutModule\n  ],\n  exports: [\n    NavbarComponent,\n    SidebarComponent,\n    FooterComponent\n  ]\n})\nexport class ComponentModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Contact.html":{"url":"classes/Contact.html","title":"class - Contact","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Contact\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/classes/contact.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/contact.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/contact.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Contact {\n  address: string;\n  phone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContactMessageDto.html":{"url":"classes/ContactMessageDto.html","title":"class - ContactMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContactMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/contact-message.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                message\n                            \n                            \n                                subject\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/contact-message.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/contact-message.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/contact-message.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ContactMessageDto {\n  email: string;\n  subject: string;\n  message: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/contact/contact.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendContactMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/contact/contact.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendContactMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendContactMessage(data: ContactMessageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/contact/contact.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ContactMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ContactMessageDto} from '../../commons/public-dto/contact-message.dto';\nimport {Observable} from 'rxjs';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  constructor(private _http: HttpClient) {\n  }\n\n  sendContactMessage(data: ContactMessageDto): Observable {\n    return this._http.post(ApiEndpoints.Contact.messageUri, data);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Content.html":{"url":"classes/Content.html","title":"class - Content","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Content\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/content.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/content.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/content.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Content {\n  action: string;\n  title: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartProductDto.html":{"url":"classes/CreateCartProductDto.html","title":"class - CreateCartProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/create-cart-product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-cart-product.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCartProductDto {\n  quantity: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/create-payment.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                paymentMethod\n                            \n                            \n                                stripeData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaymentMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-payment.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stripeData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-payment.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentMethod} from '../enums/payment-method.enum';\nexport class CreatePaymentDto {\n  paymentMethod: PaymentMethod;\n  stripeData: {\n    amount: number,\n    source: any,\n    description: string\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfileDto.html":{"url":"classes/CreateProfileDto.html","title":"class - CreateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/create-profile.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                contacts\n                            \n                            \n                                country\n                            \n                            \n                                displayName\n                            \n                            \n                                gender\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-profile.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contacts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-profile.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-profile.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-profile.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/create-profile.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Gender} from '../enums/gender.enum';\nimport {Contact} from '../classes/contact';\n\nexport class CreateProfileDto {\n\n  displayName: string;\n\n  gender: Gender;\n\n  contacts: Contact[];\n\n  country: string;\n\n  city: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCart.html":{"url":"classes/CreateUserCart.html","title":"class - CreateUserCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Create User Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserProfile.html":{"url":"classes/CreateUserProfile.html","title":"class - CreateUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createProfileDto\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(createProfileDto: CreateProfileDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        createProfileDto\n                                                  \n                                                        \n                                                                        CreateProfileDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createProfileDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateProfileDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Create User Profile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateUserProfileComponent.html":{"url":"components/CreateUserProfileComponent.html","title":"component - CreateUserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateUserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-user-profile\n            \n\n            \n                styleUrls\n                ./create-user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProfileForm\n                            \n                            \n                                errorMessages\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                formSubmitted\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProfile\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Contacts\n                                \n                                \n                                    Controls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, router: Router, helperService: HelperService, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        change\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createProfile\n                        \n                        \n                    \n                \n            \n            \n                \ncreateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createProfileForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ErrorMessages()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Contacts\n                    \n                \n\n                \n                    \n                        getContacts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:32\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Controls\n                    \n                \n\n                \n                    \n                        getControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/create-user-profile/create-user-profile.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnDestroy, OnInit, Output, TemplateRef, ViewChild} from '@angular/core';\nimport {ProfileActions} from '../../../state-management/profile/profile.actions';\nimport CreateUserProfile = ProfileActions.CreateUserProfile;\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngxs/store';\nimport {Router} from '@angular/router';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {ErrorMessages} from '../../../commons/helpers/functions/error-messages';\n\n@Component({\n  selector: 'app-create-user-profile',\n  templateUrl: './create-user-profile.component.html',\n  styleUrls: ['./create-user-profile.component.css']\n})\nexport class CreateUserProfileComponent implements OnInit, OnDestroy {\n\n  @Input() state: string;\n  @Output() change: EventEmitter = new EventEmitter();\n  errorMessages = new ErrorMessages();\n  createProfileForm: FormGroup;\n  formSubmitted = false;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(private fb: FormBuilder,\n              private store: Store,\n              private router: Router,\n              public helperService: HelperService,\n              private gdService: GlobalDataService) {\n  }\n\n  get Contacts() {\n    return this.createProfileForm.get('contacts') as FormArray;\n  }\n\n  get Controls() {\n    return this.createProfileForm.controls;\n  }\n\n\n  ngOnInit() {\n    this.createProfileForm = this.fb.group({\n      displayName: new FormControl(null, [Validators.required,\n        Validators.minLength(8),\n        Validators.maxLength(20)]),\n      country: new FormControl(null, [Validators.required]),\n      city: new FormControl(null, [Validators.required]),\n      gender: new FormControl(null, [Validators.required]),\n      contacts: this.fb.array([], [Validators.required])\n    });\n\n  }\n\n  createProfile() {\n    this.state = 'Updating Profile...';\n    this.helperService.showSpinner();\n    this.formSubmitted = true;\n    this.store.dispatch(new CreateUserProfile(this.createProfileForm.value)).toPromise().then(() => {\n      this.change.emit();\n      this.helperService.hideSpinner();\n      this.state = null;\n      this.helperService.adjustData();\n    }, error => {\n      this.helperService.hideDialog();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.helperService.adjustData();\n    if (!this.gdService.Profile) {\n      this.router.navigate(['/home']);\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Create Profile\n      \n        &times;\n      \n    \n    \n      \n        \n          \n            Main Information\n            \n              \n                \n                  \n                    Display Name\n                    \n                    \n                      {{errorMessages.requiredField('Display Name')}}\n                    \n                  \n                \n                \n                  \n                    Gender\n                    \n                      {{g}}\n                    \n                    \n                      {{errorMessages.requiredField('Gender')}}\n                    \n                  \n                \n              \n              \n                \n                  \n                    Country\n                    \n                    \n                      {{errorMessages.requiredField('Country')}}\n                    \n                  \n                \n                \n                  \n                    City\n                    \n                    \n                      {{errorMessages.requiredField('City')}}\n                    \n                  \n                \n              \n            \n          \n        \n        \n          \n            Contacts Information\n            \n              \n            \n          \n        \n      \n    \n    \n      Create Profile\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./create-user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Create Profile              ×                                                  Main Information                                                                                Display Name                                                              {{errorMessages.requiredField(\\'Display Name\\')}}                                                                                                            Gender                                          {{g}}                                                              {{errorMessages.requiredField(\\'Gender\\')}}                                                                                                                                        Country                                                              {{errorMessages.requiredField(\\'Country\\')}}                                                                                                            City                                                              {{errorMessages.requiredField(\\'City\\')}}                                                                                                                                Contacts Information                                                                            Create Profile            '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateUserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/dashboard/dashboard.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/dashboard/dashboard.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nCreateUserProfileComponent\n\nCreateUserProfileComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nCreateUserProfileComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nDashboardModule -->\n\nUserProfileComponent->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/dashboard/dashboard.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateUserProfileComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {RouterModule} from '@angular/router';\nimport {DashboardLayoutRoutes} from './dashboard-layout.routing';\nimport {HomeComponent} from '../../pages/dashboard/home/home.component';\nimport {UserProfileComponent} from '../../pages/dashboard/user-profile/user-profile.component';\nimport {CreateUserProfileComponent} from '../../pages/dashboard/create-user-profile/create-user-profile.component';\n\n\n@NgModule({\n  declarations: [HomeComponent, UserProfileComponent, CreateUserProfileComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DashboardLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class DashboardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteProfileImage.html":{"url":"classes/DeleteProfileImage.html","title":"class - DeleteProfileImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteProfileImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:45\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Delete Profile Image'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditProfile.html":{"url":"classes/EditProfile.html","title":"class - EditProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                updateProfileDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(updateProfileDto: CreateProfileDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        updateProfileDto\n                                                  \n                                                        \n                                                                        CreateProfileDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Edit Profile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateProfileDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CreateProfileDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailLoginDto.html":{"url":"classes/EmailLoginDto.html","title":"class - EmailLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/email-login.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/email-login.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/email-login.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmailLoginDto {\n\n  email: string;\n\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/error/error.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/error/error.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./error.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/error.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/error.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse\n} from '@angular/common/http';\nimport {Observable, of, Subscription, throwError} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {catchError, tap} from 'rxjs/operators';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router,\n              private gdService: GlobalDataService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(req).pipe(\n      catchError((err: HttpErrorResponse) => {\n        const {error} = err;\n        if ([401].indexOf(err.status) !== -1) {\n          this.gdService.userLogout()\n          return throwError(error);\n        }\n        return throwError(error);\n      })\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorMessages.html":{"url":"classes/ErrorMessages.html","title":"class - ErrorMessages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorMessages\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/helpers/functions/error-messages.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                maxLength\n                            \n                            \n                                minLength\n                            \n                            \n                                mustMatch\n                            \n                            \n                                notValidField\n                            \n                            \n                                requiredField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            maxLength\n                        \n                        \n                    \n                \n            \n            \n                \nmaxLength(field: string, length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/helpers/functions/error-messages.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            minLength\n                        \n                        \n                    \n                \n            \n            \n                \nminLength(field: string, length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/helpers/functions/error-messages.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nmustMatch(fields: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/helpers/functions/error-messages.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            notValidField\n                        \n                        \n                    \n                \n            \n            \n                \nnotValidField(field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/helpers/functions/error-messages.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requiredField\n                        \n                        \n                    \n                \n            \n            \n                \nrequiredField(field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/helpers/functions/error-messages.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorMessages {\n  requiredField(field: string) {\n    return `${field} is required`;\n  }\n\n  minLength(field: string, length: number) {\n    return `${field} length must not be less than ${length} characters`;\n  }\n\n  maxLength(field: string, length: number) {\n    return `${field} length must not be more than ${length} characters`;\n  }\n\n  notValidField(field: string) {\n    return `Please provide a valid ${field}`;\n  }\n\n  mustMatch(fields: string) {\n    return `${fields} must match!`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_ErrorModule_declarations\n\n\n\n\nNoInternetComponent\n\nNoInternetComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nNoInternetComponent->ErrorModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/error/error.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoInternetComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {ErrorLayoutRoutes} from './error-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {NoInternetComponent} from '../../pages/error/no-internet/no-internet.component';\n\n\n@NgModule({\n  declarations: [NoInternetComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ErrorLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class ErrorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAllCategories.html":{"url":"classes/FetchAllCategories.html","title":"class - FetchAllCategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAllCategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/category/category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/category/category.actions.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Category] Fetch All Categories'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/category/category.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CategoryModel} from '../../models/Categories/category.model';\n\nexport interface CategoryStateModel {\n  categories: CategoryModel[];\n}\n\nexport namespace CategoryActions {\n\n  export class FetchAllCategories {\n    static readonly type = '[Category] Fetch All Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCategoryById {\n    static readonly type = '[Category] Fetch Category By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearCategory {\n    static readonly type = '[Category] Clear Category';\n\n    constructor() {\n    }\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchAllSubCategories.html":{"url":"classes/FetchAllSubCategories.html","title":"class - FetchAllSubCategories","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchAllSubCategories\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/sub-category/sub-category.actions.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SubCategory] Fetch All Sub Categories'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\nexport interface SubCategoryStateModel {\n  subCategories: SubCategoryModel[];\n}\n\nexport namespace SubCategoryActions {\n  export class FetchAllSubCategories {\n    static readonly type = '[SubCategory] Fetch All Sub Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchSubCategoryById {\n    static readonly type = '[SubCategory] Fetch SubCategory By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class FetchSubCategoriesByTagName {\n    static readonly type = '[SubCategory] Fetch SubCategories By Tag Name';\n\n    constructor(public tagName: string, public slice: number) {\n    }\n  }\n\n\n  export class ClearSubCategory {\n    static readonly type = '[SubCategory] Clear SubCategory';\n\n    constructor() {\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchCategoryById.html":{"url":"classes/FetchCategoryById.html","title":"class - FetchCategoryById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchCategoryById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/category/category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/category/category.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/category/category.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Category] Fetch Category By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/category/category.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CategoryModel} from '../../models/Categories/category.model';\n\nexport interface CategoryStateModel {\n  categories: CategoryModel[];\n}\n\nexport namespace CategoryActions {\n\n  export class FetchAllCategories {\n    static readonly type = '[Category] Fetch All Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCategoryById {\n    static readonly type = '[Category] Fetch Category By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearCategory {\n    static readonly type = '[Category] Clear Category';\n\n    constructor() {\n    }\n  }\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchCustomProducts.html":{"url":"classes/FetchCustomProducts.html","title":"class - FetchCustomProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchCustomProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                productsCustomFilterDto\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsCustomFilterDto: ProductsCustomFilterDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsCustomFilterDto\n                                                  \n                                                        \n                                                                        ProductsCustomFilterDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productsCustomFilterDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductsCustomFilterDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Custom Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchInvoiceById.html":{"url":"classes/FetchInvoiceById.html","title":"class - FetchInvoiceById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchInvoiceById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/invoice/invoice.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Invoice] Fetch Invoice By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {InvoiceModel} from '../../models/Invoice/invoice.model';\n\nexport interface InvoiceStateModel {\n  invoices: InvoiceModel[];\n}\n\nexport namespace InvoiceActions {\n\n  export class FetchUserInvoices {\n    static readonly type = '[Invoice] Fetch User Invoices';\n\n    constructor() {\n    }\n  }\n\n  export class PushInvoice {\n    static readonly type = '[Invoice] Push Invoice';\n\n    constructor(public invoice: InvoiceModel) {\n    }\n  }\n\n  export class FetchInvoiceById {\n    static readonly type = '[Invoice] Fetch Invoice By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearInvoicesFromStorage {\n    static readonly type = '[Invoice] Clear Invoices From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchLatestProducts.html":{"url":"classes/FetchLatestProducts.html","title":"class - FetchLatestProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchLatestProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Latest Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchMixLatestProducts.html":{"url":"classes/FetchMixLatestProducts.html","title":"class - FetchMixLatestProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchMixLatestProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:54\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Mix Latest Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchMostSalesProducts.html":{"url":"classes/FetchMostSalesProducts.html","title":"class - FetchMostSalesProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchMostSalesProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Most Sales Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchOrderById.html":{"url":"classes/FetchOrderById.html","title":"class - FetchOrderById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchOrderById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Fetch Order By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchPaymentById.html":{"url":"classes/FetchPaymentById.html","title":"class - FetchPaymentById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchPaymentById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Payment] Fetch Payment By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchProductById.html":{"url":"classes/FetchProductById.html","title":"class - FetchProductById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchProductById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Product By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchProductsByTagName.html":{"url":"classes/FetchProductsByTagName.html","title":"class - FetchProductsByTagName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchProductsByTagName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tagName\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagName: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Products By Tag Name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchProductsTags.html":{"url":"classes/FetchProductsTags.html","title":"class - FetchProductsTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchProductsTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/tag/tag.actions.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Tag] Fetch Products Tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/tag/tag.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\nexport interface TagStateModel {\n  subCategoriesTags: SubCategoryTagModel[];\n  productsTags: ProductTagModel[]\n}\n\nexport namespace TagActions {\n  export class FetchSubCategoriesTags {\n    static readonly type = '[Tag] Fetch SubCategories Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsTags {\n    static readonly type = '[Tag] Fetch Products Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchTagById {\n    static readonly type = '[Tag] Fetch Tag By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearTags {\n    static readonly type = '[Tag] Clear Tags';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchShopProducts.html":{"url":"classes/FetchShopProducts.html","title":"class - FetchShopProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchShopProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                take\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(take: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        take\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Fetch Shop Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSubCategoriesByTagName.html":{"url":"classes/FetchSubCategoriesByTagName.html","title":"class - FetchSubCategoriesByTagName","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSubCategoriesByTagName\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                slice\n                            \n                            \n                                    Public\n                                tagName\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagName: string, slice: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/sub-category/sub-category.actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        slice\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            slice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tagName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SubCategory] Fetch SubCategories By Tag Name'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\nexport interface SubCategoryStateModel {\n  subCategories: SubCategoryModel[];\n}\n\nexport namespace SubCategoryActions {\n  export class FetchAllSubCategories {\n    static readonly type = '[SubCategory] Fetch All Sub Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchSubCategoryById {\n    static readonly type = '[SubCategory] Fetch SubCategory By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class FetchSubCategoriesByTagName {\n    static readonly type = '[SubCategory] Fetch SubCategories By Tag Name';\n\n    constructor(public tagName: string, public slice: number) {\n    }\n  }\n\n\n  export class ClearSubCategory {\n    static readonly type = '[SubCategory] Clear SubCategory';\n\n    constructor() {\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSubCategoriesTags.html":{"url":"classes/FetchSubCategoriesTags.html","title":"class - FetchSubCategoriesTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSubCategoriesTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/tag/tag.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Tag] Fetch SubCategories Tags'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/tag/tag.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\nexport interface TagStateModel {\n  subCategoriesTags: SubCategoryTagModel[];\n  productsTags: ProductTagModel[]\n}\n\nexport namespace TagActions {\n  export class FetchSubCategoriesTags {\n    static readonly type = '[Tag] Fetch SubCategories Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsTags {\n    static readonly type = '[Tag] Fetch Products Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchTagById {\n    static readonly type = '[Tag] Fetch Tag By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearTags {\n    static readonly type = '[Tag] Clear Tags';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchSubCategoryById.html":{"url":"classes/FetchSubCategoryById.html","title":"class - FetchSubCategoryById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchSubCategoryById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/sub-category/sub-category.actions.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[SubCategory] Fetch SubCategory By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/sub-category/sub-category.actions.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\nexport interface SubCategoryStateModel {\n  subCategories: SubCategoryModel[];\n}\n\nexport namespace SubCategoryActions {\n  export class FetchAllSubCategories {\n    static readonly type = '[SubCategory] Fetch All Sub Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchSubCategoryById {\n    static readonly type = '[SubCategory] Fetch SubCategory By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class FetchSubCategoriesByTagName {\n    static readonly type = '[SubCategory] Fetch SubCategories By Tag Name';\n\n    constructor(public tagName: string, public slice: number) {\n    }\n  }\n\n\n  export class ClearSubCategory {\n    static readonly type = '[SubCategory] Clear SubCategory';\n\n    constructor() {\n    }\n  }\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchTagById.html":{"url":"classes/FetchTagById.html","title":"class - FetchTagById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchTagById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/tag/tag.actions.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/tag/tag.actions.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Tag] Fetch Tag By Id'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/tag/tag.actions.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\nexport interface TagStateModel {\n  subCategoriesTags: SubCategoryTagModel[];\n  productsTags: ProductTagModel[]\n}\n\nexport namespace TagActions {\n  export class FetchSubCategoriesTags {\n    static readonly type = '[Tag] Fetch SubCategories Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsTags {\n    static readonly type = '[Tag] Fetch Products Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchTagById {\n    static readonly type = '[Tag] Fetch Tag By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearTags {\n    static readonly type = '[Tag] Clear Tags';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserCart.html":{"url":"classes/FetchUserCart.html","title":"class - FetchUserCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Fetch User Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserInvoices.html":{"url":"classes/FetchUserInvoices.html","title":"class - FetchUserInvoices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserInvoices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/invoice/invoice.actions.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Invoice] Fetch User Invoices'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {InvoiceModel} from '../../models/Invoice/invoice.model';\n\nexport interface InvoiceStateModel {\n  invoices: InvoiceModel[];\n}\n\nexport namespace InvoiceActions {\n\n  export class FetchUserInvoices {\n    static readonly type = '[Invoice] Fetch User Invoices';\n\n    constructor() {\n    }\n  }\n\n  export class PushInvoice {\n    static readonly type = '[Invoice] Push Invoice';\n\n    constructor(public invoice: InvoiceModel) {\n    }\n  }\n\n  export class FetchInvoiceById {\n    static readonly type = '[Invoice] Fetch Invoice By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearInvoicesFromStorage {\n    static readonly type = '[Invoice] Clear Invoices From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserOrders.html":{"url":"classes/FetchUserOrders.html","title":"class - FetchUserOrders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserOrders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Fetch User Orders'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserPayments.html":{"url":"classes/FetchUserPayments.html","title":"class - FetchUserPayments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserPayments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.actions.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Payment] Fetch User Payments'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchUserProfile.html":{"url":"classes/FetchUserProfile.html","title":"class - FetchUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Fetch User Profile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/file.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FileDropDirective, FileSelectDirective, FileUploadModule} from \"ng2-file-upload\";\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    FileUploadModule\n  ],\n  exports: [\n    FileUploadModule,\n    FileSelectDirective,\n    FileDropDirective\n  ]\n})\nexport class FileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                test\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/footer/footer.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  test : Date = new Date();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n\n    \n    \n\n      \n      \n\n        \n        Footer Content\n        Here you can use rows and columns here to organize your footer content. Lorem ipsum dolor sit amet,\n          consectetur adipisicing\n          elit.\n\n      \n      \n\n      \n\n      \n      \n\n        \n        Links\n\n        \n          \n            Link 1\n          \n          \n            Link 2\n          \n          \n            Link 3\n          \n          \n            Link 4\n          \n        \n\n      \n      \n\n      \n\n      \n      \n\n        \n        Links\n\n        \n          \n            Link 1\n          \n          \n            Link 2\n          \n          \n            Link 3\n          \n          \n            Link 4\n          \n        \n\n      \n      \n\n      \n\n      \n      \n\n        \n        Links\n\n        \n          \n            Link 1\n          \n          \n            Link 2\n          \n          \n            Link 3\n          \n          \n            Link 4\n          \n        \n\n      \n      \n\n    \n    \n\n  \n  \n\n  \n\n  \n  \n    \n      Register for free\n    \n    \n      Sign up!\n    \n  \n  \n\n  \n\n  \n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n\n  \n  © {{test | date: 'y'}} Copyright:\n     Global Market\n  \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                footer {\n  position: relative;\n  clear:both;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Footer Content        Here you can use rows and columns here to organize your footer content. Lorem ipsum dolor sit amet,          consectetur adipisicing          elit.                                              Links                              Link 1                                Link 2                                Link 3                                Link 4                                                                Links                              Link 1                                Link 2                                Link 3                                Link 4                                                                Links                              Link 1                                Link 2                                Link 3                                Link 4                                                          Register for free              Sign up!                                                                                                                                                                  © {{test | date: \\'y\\'}} Copyright:     Global Market    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GeneralPipe.html":{"url":"pipes/GeneralPipe.html","title":"pipe - GeneralPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GeneralPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/general.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        generalFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(array: any[], searchTerm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/pipes/general.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchTerm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'generalFilter'\n})\nexport class GeneralPipe implements PipeTransform {\n\n  transform(array: any[], searchTerm: string): any[] {\n    if (!array || !searchTerm) {\n      return array;\n    }\n    return array.filter(item =>\n      item.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetProductsByRangeDto.html":{"url":"classes/GetProductsByRangeDto.html","title":"class - GetProductsByRangeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetProductsByRangeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/get-products-by-range.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                range1\n                            \n                            \n                                range2\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                stock\n                            \n                            \n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/get-products-by-range.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/get-products-by-range.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/get-products-by-range.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/get-products-by-range.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/get-products-by-range.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetProductsByRangeDto {\n  range1: number;\n  range2: number;\n  take: number;\n  skip?: number;\n  stock: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalDataDto.html":{"url":"classes/GlobalDataDto.html","title":"class - GlobalDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/global-data.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                carts\n                            \n                            \n                                    Public\n                                categories\n                            \n                            \n                                    Public\n                                files\n                            \n                            \n                                    Public\n                                invoices\n                            \n                            \n                                    Public\n                                orders\n                            \n                            \n                                    Public\n                                payments\n                            \n                            \n                                    Public\n                                products\n                            \n                            \n                                    Public\n                                profiles\n                            \n                            \n                                    Public\n                                sales\n                            \n                            \n                                    Public\n                                subCategories\n                            \n                            \n                                    Public\n                                tags\n                            \n                            \n                                    Public\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users: number, orders: number, invoices: number, payments: number, files: number, categories: number, subCategories: number, products: number, sales: number, carts: number, profiles: number, tags: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/commons/public-dto/global-data.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orders\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoices\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payments\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        files\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categories\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCategories\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        products\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sales\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        carts\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profiles\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            carts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            invoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/global-data.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GlobalDataDto {\n  constructor(\n    public users: number,\n    public orders: number,\n    public invoices: number,\n    public payments: number,\n    public files: number,\n    public categories: number,\n    public subCategories: number,\n    public products: number,\n    public sales: number,\n    public carts: number,\n    public profiles: number,\n    public tags: number,\n  ) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalDataService.html":{"url":"injectables/GlobalDataService.html","title":"injectable - GlobalDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/global-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInvoiceNumber\n                            \n                            \n                                IsAuthenticated\n                            \n                            \n                                navigateToSubCategory\n                            \n                            \n                                Token\n                            \n                            \n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    User\n                                \n                                \n                                    Username\n                                \n                                \n                                    Cart\n                                \n                                \n                                    TotalPurchase\n                                \n                                \n                                    Categories\n                                \n                                \n                                    SubCategories\n                                \n                                \n                                    ShopProducts\n                                \n                                \n                                    LatestProducts\n                                \n                                \n                                    MostSalesProducts\n                                \n                                \n                                    SubCategoriesTags\n                                \n                                \n                                    Invoices\n                                \n                                \n                                    Orders\n                                \n                                \n                                    Profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/global-data.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInvoiceNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetInvoiceNumber(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-data.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IsAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nIsAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-data.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToSubCategory(subCategory: SubCategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-data.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Token\n                        \n                        \n                    \n                \n            \n            \n                \nToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-data.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \nuserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/global-data.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        User\n                    \n                \n\n                \n                    \n                        getUser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Username\n                    \n                \n\n                \n                    \n                        getUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Cart\n                    \n                \n\n                \n                    \n                        getCart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        TotalPurchase\n                    \n                \n\n                \n                    \n                        getTotalPurchase()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:48\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Categories\n                    \n                \n\n                \n                    \n                        getCategories()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SubCategories\n                    \n                \n\n                \n                    \n                        getSubCategories()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ShopProducts\n                    \n                \n\n                \n                    \n                        getShopProducts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:64\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        LatestProducts\n                    \n                \n\n                \n                    \n                        getLatestProducts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:69\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        MostSalesProducts\n                    \n                \n\n                \n                    \n                        getMostSalesProducts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:73\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        SubCategoriesTags\n                    \n                \n\n                \n                    \n                        getSubCategoriesTags()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Invoices\n                    \n                \n\n                \n                    \n                        getInvoices()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Orders\n                    \n                \n\n                \n                    \n                        getOrders()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:87\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Profile\n                    \n                \n\n                \n                    \n                        getProfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/global-data.service.ts:91\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {AuthState} from '../../state-management/auth/auth.state';\nimport {ProfileModel} from '../../models/Profile/profile.model';\nimport {ProfileState} from '../../state-management/profile/profile.state';\nimport {CategoryState} from '../../state-management/category/category.state';\nimport {SubCategoryState} from '../../state-management/sub-category/sub-category.state';\nimport {ProductState} from '../../state-management/product/product.state';\nimport {TagState} from '../../state-management/tag/tag.state';\nimport {InvoiceState} from '../../state-management/invoice/invoice.state';\nimport {OrderState} from '../../state-management/order/order.state';\nimport {Logout} from '../../state-management/auth/auth-actions';\nimport {ProfileActions} from '../../state-management/profile/profile.actions';\nimport {InvoiceActions} from '../../state-management/invoice/invoice.actions';\nimport {OrderActions} from '../../state-management/order/order.actions';\nimport {PaymentActions} from '../../state-management/payment/payment.actions';\nimport ClearProfileData = ProfileActions.ClearProfileData;\nimport ClearInvoicesFromStorage = InvoiceActions.ClearInvoicesFromStorage;\nimport ClearOrdersFromStorage = OrderActions.ClearOrdersFromStorage;\nimport ClearPaymentsFromStorage = PaymentActions.ClearPaymentsFromStorage;\nimport {Router} from '@angular/router';\nimport {CartState} from '../../state-management/cart/cart.state';\nimport {CartActions} from '../../state-management/cart/cart.actions';\nimport ClearCartFromStorage = CartActions.ClearCartFromStorage;\nimport {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalDataService {\n\n  constructor(private store: Store, private router: Router) {\n  }\n\n\n  get User() {\n    return this.store.selectSnapshot(AuthState.User);\n  }\n\n  get Username() {\n    return this.store.selectSnapshot(AuthState.Username);\n  }\n\n  get Cart() {\n    return this.store.selectSnapshot(CartState.Cart);\n  }\n\n  get TotalPurchase() {\n    let total = 0;\n    for (let i = 0; i  i.id === id);\n      return invoice ? invoice.number : 'No Number';\n    }\n  }\n\n  navigateToSubCategory(subCategory: SubCategoryModel) {\n    const category = this.Categories.find(c => c.id === subCategory.categoryId);\n    this.router.navigate([`/sub-categories/${category.id}`, subCategory.id], {\n      queryParams: {\n        Department: category.name,\n        subCategory: subCategory.name\n      }\n    });\n  }\n\n\n  userLogout() {\n    this.store.dispatch([\n      new Logout(),\n      new ClearProfileData(),\n      new ClearCartFromStorage(),\n      new ClearInvoicesFromStorage(),\n      new ClearOrdersFromStorage(),\n      new ClearPaymentsFromStorage()]).subscribe(() => {\n      this.router.navigate(['/auth/login']);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/helper.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                imageErrorMessage\n                            \n                            \n                                imageFormData\n                            \n                            \n                                invoicesDataSource\n                            \n                            \n                                isInvalidImageType\n                            \n                            \n                                modalRef\n                            \n                            \n                                offlineEvent\n                            \n                            \n                                onlineEvent\n                            \n                            \n                                orderDataSource\n                            \n                            \n                                selectedImage\n                            \n                            \n                                startLoadingFlag\n                            \n                            \n                                state\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                adjustData\n                            \n                            \n                                hideDialog\n                            \n                            \n                                hideModal\n                            \n                            \n                                hideSpinner\n                            \n                            \n                                onImageSelect\n                            \n                            \n                                openModal\n                            \n                            \n                                openSnackbar\n                            \n                            \n                                productDetails\n                            \n                            \n                                setIsOnline\n                            \n                            \n                                showErrorDialog\n                            \n                            \n                                showSpinner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, modalService: BsModalService, spinner: NgxSpinnerService, router: Router, injector: Injector, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/helper.service.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    BsModalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            adjustData\n                        \n                        \n                    \n                \n            \n            \n                \nadjustData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideDialog\n                        \n                        \n                    \n                \n            \n            \n                \nhideDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideModal\n                        \n                        \n                    \n                \n            \n            \n                \nhideModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nhideSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonImageSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenModal(template: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    template\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSnackbar\n                        \n                        \n                    \n                \n            \n            \n                \nopenSnackbar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            productDetails\n                        \n                        \n                    \n                \n            \n            \n                \nproductDetails(product: ProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsOnline\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsOnline(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showErrorDialog\n                        \n                        \n                    \n                \n            \n            \n                \nshowErrorDialog(error: any, template: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    template\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSpinner\n                        \n                        \n                    \n                \n            \n            \n                \nshowSpinner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/helper.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageFormData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormData()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoicesDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                    \n                        \n                            Default value : new MatTableDataSource([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isInvalidImageType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BsModalRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            offlineEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onlineEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderDataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatTableDataSource\n\n                        \n                    \n                    \n                        \n                            Default value : new MatTableDataSource([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startLoadingFlag\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/services/helper.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector, TemplateRef} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap/modal';\nimport {NgxSpinnerService} from 'ngx-spinner';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {FileUploader} from 'ng2-file-upload';\nimport {ErrorMessages} from '../../commons/helpers/functions/error-messages';\nimport {ProductModel} from '../../models/Products/product.model';\nimport {Observable, Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {OrderModel} from '../../models/Orders/order.model';\nimport {InvoiceModel} from '../../models/Invoice/invoice.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HelperService {\n  modalRef: BsModalRef;\n  selectedImage = null;\n  startLoadingFlag = false;\n  isInvalidImageType = false;\n  imageErrorMessage = null;\n  imageFormData = new FormData();\n  error: {\n    error: string,\n    message: string,\n    statusCode: number\n  };\n\n\n  // For Connection\n  onlineEvent: Observable;\n\n  setIsOnline(value: boolean) {\n    sessionStorage.removeItem('isOnline');\n    sessionStorage.setItem('isOnline', String(value));\n  }\n\n  offlineEvent: Observable;\n  subscriptions: Subscription[] = [];\n\n\n  //\n  showErrorDialog(error: any, template: any) {\n    this.hideSpinner();\n    this.error = error;\n    this.openModal(template);\n  }\n\n\n  constructor(private dialog: MatDialog, private modalService: BsModalService,\n              private spinner: NgxSpinnerService,\n              private router: Router,\n              private injector: Injector,\n              private snackBar: MatSnackBar) {\n  }\n\n  state: string;\n\n\n  hideDialog() {\n    this.dialog.closeAll();\n  }\n\n  // Showing Modals\n  openModal(template: TemplateRef) {\n    this.modalRef = this.modalService.show(template);\n  }\n\n  hideModal() {\n    this.modalRef.hide();\n  }\n\n\n  // For Spinners\n  showSpinner() {\n    this.spinner.show();\n  }\n\n  hideSpinner() {\n    this.spinner.hide();\n  }\n\n  productDetails(product: ProductModel) {\n    this.router.navigate([`/products/${product.id}`, product.subCategoryId], {\n      queryParams: {\n        Product: product.name,\n        Available: product.inStock\n      }\n    });\n  }\n\n  onImageSelect(event) {\n    const file = event.files[0] as File;\n    const imageReader = new FileReader();\n    this.imageFormData.append('image', file);\n    imageReader.onload = (d: any) => {\n      this.selectedImage = d.target.result;\n    };\n    imageReader.onerror = (e: any) => {\n      console.log('File could not be read: ' + e.target.error.code);\n    };\n    imageReader.readAsDataURL(file);\n  }\n\n\n  adjustData() {\n    this.imageFormData.delete('image');\n    this.selectedImage = null;\n    this.isInvalidImageType = false;\n    this.startLoadingFlag = false;\n    this.imageErrorMessage = null;\n  }\n\n  // data sources\n  orderDataSource: MatTableDataSource = new MatTableDataSource([]);\n  invoicesDataSource: MatTableDataSource = new MatTableDataSource([]);\n\n  // for toast messages\n  openSnackbar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactMessageDto\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                showSpinner\n                            \n                            \n                                state\n                            \n                            \n                                subscriber\n                            \n                            \n                                subscriptionForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearContactForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sendContactMessage\n                            \n                            \n                                subscribeToNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ContactControls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService, helperService: HelperService, contactService: ContactService, notifyService: NotificationsService, fb: FormBuilder, swPush: SwPush, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/home/home.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        contactService\n                                                  \n                                                        \n                                                                        ContactService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifyService\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        swPush\n                                                  \n                                                        \n                                                                        SwPush\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearContactForm\n                        \n                        \n                    \n                \n            \n            \n                \nclearContactForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/home/home.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/home/home.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendContactMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsendContactMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/home/home.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            subscribeToNotifications\n                        \n                        \n                    \n                \n            \n            \n                \nsubscribeToNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/home/home.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contactMessageDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PushSubscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ContactControls\n                    \n                \n\n                \n                    \n                        getContactControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/home/home.component.ts:67\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {Store} from '@ngxs/store';\nimport {ProductActions} from '../../../state-management/product/product.actions';\nimport FetchMostSalesProducts = ProductActions.FetchMostSalesProducts;\nimport FetchMixLatestProducts = ProductActions.FetchMixLatestProducts;\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {EmailPattern} from '../../../commons/constants';\nimport {CustomValidators} from 'ngx-custom-validators';\nimport {ContactService} from '../../../services/contact/contact.service';\nimport {SwPush} from '@angular/service-worker';\nimport {ApiEndpoints} from '../../../commons/api-endpoints';\nimport {NotificationsService} from '../../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  contactMessageDto: FormGroup;\n  state: string;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n  subscriptionForm: FormGroup;\n  subscriber: PushSubscription;\n  showSpinner = false;\n\n  constructor(public gdService: GlobalDataService, public helperService: HelperService,\n              private contactService: ContactService,\n              private notifyService: NotificationsService,\n              private fb: FormBuilder,\n              private swPush: SwPush,\n              private store: Store) {\n  }\n\n  ngOnInit(): void {\n    if (!this.gdService.MostSalesProducts) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchMostSalesProducts()).subscribe(() => {\n      });\n    }\n    if (!this.gdService.LatestProducts) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchMixLatestProducts()).subscribe(() => {\n        this.helperService.hideSpinner();\n      });\n    }\n    this.contactMessageDto = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(EmailPattern),\n        CustomValidators.email,\n      ]),\n      subject: new FormControl(null, [Validators.required]),\n      message: new FormControl(null, [Validators.required]),\n    });\n    this.subscriptionForm = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(EmailPattern),\n        CustomValidators.email,\n      ]),\n    });\n  }\n\n  get ContactControls() {\n    return this.contactMessageDto.controls;\n  }\n\n  sendContactMessage() {\n    this.state = 'Sending Message...';\n    this.helperService.showSpinner();\n    this.contactService.sendContactMessage(this.contactMessageDto.value).subscribe(() => {\n      this.clearContactForm();\n      this.helperService.openSnackbar('Message sent successfully', 'Close');\n    }, error => {\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n\n  clearContactForm() {\n    this.helperService.hideSpinner();\n    this.contactMessageDto.reset();\n    this.state = null;\n  }\n\n  subscribeToNotifications() {\n    this.showSpinner = true;\n    this.swPush.requestSubscription({\n      serverPublicKey: ApiEndpoints.VapidKeys.publicKey\n    }).then(subscriber => {\n      this.subscriber = subscriber;\n      this.notifyService.addPushSubscriber(subscriber, this.subscriptionForm.value.email).subscribe(() => {\n        this.showSpinner = false;\n        this.helperService.openSnackbar(\n          'Now, you are a new subscriber, and you will get our newsletter',\n          'Okay'\n        );\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    }).catch(err => {\n      err.error = 'Could not send subscription object to server';\n      err.message = 'Could not send subscription object to server';\n      this.helperService.showErrorDialog(err, this.errorTemplate);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{state}}\n  \n\n\n  \n\n\n\n  \n    \n  \n\n\n\n\n\n  \n    \n      \n        Welcome in Global Market\n      \n      This is the right place to buy what every you want, in anytime and in\n        anywhere\n    \n  \n  \n    \n      Most Selling Products\n        \n      \n        Shop Now\n      \n\n    \n    \n      \n        \n        \n          \n          \n            \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{product.name}}\n                \n                  ${{product.currentPrice}} \n                  \n                    \n                      ${{product.previousPrice}}\n                    \n                  \n                \n                \n\n                Add to cart\n                \n                \n                  \n                \n              \n              \n            \n            \n          \n          \n\n\n          \n\n          \n\n        \n        \n\n      \n    \n  \n  \n    \n      Latest Products\n      \n      \n        Shop Now\n      \n\n    \n    \n      \n        \n        \n          \n          \n            \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{product.name}}\n                \n                  ${{product.currentPrice}}\n                  \n                    ${{product.previousPrice}}\n                  \n                \n                \n\n                Add to cart\n                \n                \n                  \n                \n              \n              \n            \n            \n          \n          \n\n\n          \n\n          \n\n        \n        \n\n      \n    \n  \n\n\n  \n    \n      \n        \n        \n          \n          Why we are the best?\n          \n          \n            All of your needs are available in this store, especially when you want customized product\n            , you just can contact the customer service team to deliver it to you.\n          \n\n          \n          \n\n            \n            \n              \n            \n            \n\n            \n            \n\n              \n                \n                  \n                  \n                    Marketing\n                    \n                      We have a graph of social media accounts that's provide the latest products and the\n                      changes that may happen for some product, changes that may happen for some product\n                    \n                  \n                \n                \n                  \n                  \n                    Availability\n                    \n                      With regard to the needs of people in (home, themselves, work, etc ...) we consider ourselves a guide that\n                      provides services suitable for their various needs.\n                    \n                  \n                \n                \n                  \n                  \n                    Super fast ordering and delivery\n                    \n                      We provide our clients with flexible payment methods, you can use PAYPAL, Visa, Mastercard, etc.,\n                      your orders will be delivered to you in a few days without delay.\n                    \n                  \n                \n              \n\n            \n            \n\n          \n          \n\n        \n        \n      \n    \n  \n  \n    \n      \n\n        Subscribe to our news letter\n        You will get the latest notifications for new\n          products and offers\n        \n          \n            \n              \n                \n                  \n                  Your email\n                \n                \n                  Email is\n                    required\n                  Please provide a\n                    valid\n                    email\n                    address\n                \n              \n            \n            \n              \n                \n                  Subscribe\n                  \n                \n\n              \n\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        \n\n          \n          Contact us\n          \n          Do you have any questions? Please do not hesitate to contact\n            us\n            directly. Our team will come back to you within\n            a matter of hours to help you.\n\n          \n\n            \n            \n              \n                \n                \n                  \n                    \n                      \n                      Your email\n                    \n                    \n                      Email is\n                        required\n                      Please provide a valid\n                        email\n                        address\n                    \n                  \n                \n                \n\n                \n                \n                  \n                    \n                      \n                      Subject\n                    \n                    \n                      Subject is\n                        required\n                    \n                  \n                \n                \n                  \n                    \n                    \n                      Your message\n                    \n                    \n                      Message is\n                        required\n                    \n                  \n\n                \n                \n\n              \n\n              \n                \n                  Send\n                \n              \n              \n            \n            \n\n            \n            \n              \n                \n                  San Francisco, CA 94126, USA\n                \n\n                \n                  + 01 234 567 89\n                \n\n                \n                  contact@mdbootstrap.com\n                \n              \n            \n            \n\n          \n\n        \n      \n\n    \n\n  \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n.center-cropped {\n  object-fit: fill;\n  max-height: 800px;\n  object-position: center;\n  width: 100%;\n}\n.header {\n  background: #2b5876;  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #4e4376, #2b5876);  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #4e4376, #2b5876); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n.mdb-body {\n  background: #ECE9E6;  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #FFFFFF, #ECE9E6);  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #FFFFFF, #ECE9E6); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{state}}                                Welcome in Global Market            This is the right place to buy what every you want, in anytime and in        anywhere                  Most Selling Products                      Shop Now                                                                                                                                                                                                                                                                      {{product.name}}                                  ${{product.currentPrice}}                                                             ${{product.previousPrice}}                                                                                      Add to cart                                                                                                                                                                                                      Latest Products                    Shop Now                                                                                                                                                                                                                                                                      {{product.name}}                                  ${{product.currentPrice}}                                      ${{product.previousPrice}}                                                                  Add to cart                                                                                                                                                                                                                                          Why we are the best?                                All of your needs are available in this store, especially when you want customized product            , you just can contact the customer service team to deliver it to you.                                                                                                                                                                                                          Marketing                                          We have a graph of social media accounts that\\'s provide the latest products and the                      changes that may happen for some product, changes that may happen for some product                                                                                                                              Availability                                          With regard to the needs of people in (home, themselves, work, etc ...) we consider ourselves a guide that                      provides services suitable for their various needs.                                                                                                                              Super fast ordering and delivery                                          We provide our clients with flexible payment methods, you can use PAYPAL, Visa, Mastercard, etc.,                      your orders will be delivered to you in a few days without delay.                                                                                                                                                                Subscribe to our news letter        You will get the latest notifications for new          products and offers                                                                                                Your email                                                  Email is                    required                  Please provide a                    valid                    email                    address                                                                                                      Subscribe                                                                                                                                  Contact us                    Do you have any questions? Please do not hesitate to contact            us            directly. Our team will come back to you within            a matter of hours to help you.                                                                                                                                                                  Your email                                                              Email is                        required                      Please provide a valid                        email                        address                                                                                                                                                                                        Subject                                                              Subject is                        required                                                                                                                                                      Your message                                                              Message is                        required                                                                                                                                    Send                                                                                                                                            San Francisco, CA 94126, USA                                                  + 01 234 567 89                                                  contact@mdbootstrap.com                                                                                    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InsertTagDto.html":{"url":"classes/InsertTagDto.html","title":"class - InsertTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InsertTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/insert-tag.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/insert-tag.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InsertTagDto {\n  tags: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvalidCredentialsComponent.html":{"url":"components/InvalidCredentialsComponent.html","title":"component - InvalidCredentialsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InvalidCredentialsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/invalid-credentials/invalid-credentials.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invalid-credentials\n            \n\n            \n                styleUrls\n                ./invalid-credentials.component.css\n            \n\n\n\n            \n                templateUrl\n                ./invalid-credentials.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                modalRef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/invalid-credentials/invalid-credentials.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/invalid-credentials/invalid-credentials.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        modalRef\n                    \n                \n                \n                    \n                        Type :     BsModalRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/invalid-credentials/invalid-credentials.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/invalid-credentials/invalid-credentials.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/invalid-credentials/invalid-credentials.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {BsModalRef} from \"ngx-bootstrap/modal\";\nimport {HelperService} from \"../../services/helper.service\";\n\n@Component({\n  selector: 'app-invalid-credentials',\n  templateUrl: './invalid-credentials.component.html',\n  styleUrls: ['./invalid-credentials.component.css']\n})\nexport class InvalidCredentialsComponent implements OnInit {\n  @Input() modalRef: BsModalRef;\n  @Input() errorMessage: BsModalRef;\n\n  constructor(public helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n    Invalid Credentials\n  \n  \n    &times;\n  \n\n\n  \n    {{errorMessage}}\n  \n  \n    Close\n  \n\n\n    \n\n    \n                \n                    ./invalid-credentials.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Invalid Credentials        ×        {{errorMessage}}        Close  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvalidCredentialsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvoiceLayoutComponent.html":{"url":"components/InvoiceLayoutComponent.html","title":"component - InvoiceLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InvoiceLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/invoice-layout/invoice-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invoice-layout\n            \n\n            \n                styleUrls\n                ./invoice-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./invoice-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/invoice-layout/invoice-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/invoice-layout/invoice-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invoice-layout',\n  templateUrl: './invoice-layout.component.html',\n  styleUrls: ['./invoice-layout.component.css']\n})\nexport class InvoiceLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./invoice-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvoiceLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InvoiceLayoutModule.html":{"url":"modules/InvoiceLayoutModule.html","title":"module - InvoiceLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    InvoiceLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InvoiceLayoutModule\n\n\n\ncluster_InvoiceLayoutModule_imports\n\n\n\ncluster_InvoiceLayoutModule_declarations\n\n\n\n\nInvoicesComponent\n\nInvoicesComponent\n\n\n\nInvoiceLayoutModule\n\nInvoiceLayoutModule\n\nInvoiceLayoutModule -->\n\nInvoicesComponent->InvoiceLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nInvoiceLayoutModule -->\n\nSharedModule->InvoiceLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/invoice-layout/invoice-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InvoicesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InvoicesComponent} from '../../pages/invoices/invoices/invoices.component';\nimport {RouterModule} from '@angular/router';\nimport {InvoiceLayoutRoutes} from './invoice-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\n\n\n@NgModule({\n  declarations: [InvoicesComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(InvoiceLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class InvoiceLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvoiceModel.html":{"url":"classes/InvoiceModel.html","title":"class - InvoiceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvoiceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Invoice/invoice.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                dueDate\n                            \n                            \n                                id\n                            \n                            \n                                number\n                            \n                            \n                                paymentDate\n                            \n                            \n                                total\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Invoice/invoice.model.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class InvoiceModel {\n  id: number;\n\n  number: string;\n\n  total: number;\n\n  date: Date;\n\n  dueDate: Date;\n\n  paymentDate: Date;\n\n  userId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvoiceService.html":{"url":"injectables/InvoiceService.html","title":"injectable - InvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/invoice/invoice.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInvoices\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/invoice/invoice.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserInvoices\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserInvoices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/invoice/invoice.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {InvoiceModel} from '../../models/Invoice/invoice.model';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n\n  getUserInvoices(): Observable {\n    return this._http.get(`${ApiEndpoints.InvoiceEndpoints.rootInvoices}/user`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvoiceState.html":{"url":"injectables/InvoiceState.html","title":"injectable - InvoiceState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InvoiceState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearInvoicesFromStorage\n                            \n                            \n                                fetchUserInvoices\n                            \n                            \n                                    Static\n                                Invoices\n                            \n                            \n                                pushInvoice\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(invoiceService: InvoiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/invoice/invoice.state.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        invoiceService\n                                                  \n                                                        \n                                                                        InvoiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearInvoicesFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \nclearInvoicesFromStorage(ctx: StateContext, action: ClearInvoicesFromStorage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearInvoicesFromStorage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/invoice/invoice.state.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearInvoicesFromStorage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserInvoices\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserInvoices(ctx: StateContext, action: FetchUserInvoices)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchUserInvoices)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/invoice/invoice.state.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchUserInvoices\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Invoices\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Invoices(state: InvoiceStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/invoice/invoice.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                InvoiceStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushInvoice\n                        \n                        \n                    \n                \n            \n            \n                \npushInvoice(ctx: StateContext, action: PushInvoice)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(PushInvoice)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/invoice/invoice.state.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                PushInvoice\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext} from '@ngxs/store';\nimport {InvoiceActions, InvoiceStateModel} from './invoice.actions';\nimport {Injectable} from '@angular/core';\nimport {InvoiceService} from '../../services/invoice/invoice.service';\nimport {tap} from 'rxjs/operators';\nimport {InvoiceModel} from '../../models/Invoice/invoice.model';\nimport FetchUserInvoices = InvoiceActions.FetchUserInvoices;\nimport ClearInvoicesFromStorage = InvoiceActions.ClearInvoicesFromStorage;\nimport PushInvoice = InvoiceActions.PushInvoice;\nimport {append, patch} from '@ngxs/store/operators';\n\n\n@State({\n  name: 'invoices',\n  defaults: {\n    invoices: null\n  }\n})\n\n@Injectable()\nexport class InvoiceState {\n  constructor(private invoiceService: InvoiceService) {\n  }\n\n  @Selector()\n  static Invoices(state: InvoiceStateModel) {\n    return state.invoices;\n  }\n\n\n  @Action(FetchUserInvoices)\n  fetchUserInvoices(ctx: StateContext, action: FetchUserInvoices) {\n    return this.invoiceService.getUserInvoices().pipe(\n      tap((data: InvoiceModel[]) => {\n        ctx.setState({\n          invoices: data\n        });\n      })\n    );\n  }\n\n  @Action(PushInvoice)\n  pushInvoice(ctx: StateContext, action: PushInvoice) {\n    ctx.setState(patch({\n      invoices: append([action.invoice])\n    }));\n  }\n\n  @Action(ClearInvoicesFromStorage)\n  clearInvoicesFromStorage(ctx: StateContext, action: ClearInvoicesFromStorage) {\n    ctx.setState({\n      invoices: null\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvoiceStateModel.html":{"url":"interfaces/InvoiceStateModel.html","title":"interface - InvoiceStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InvoiceStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        invoices\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invoices\n                                    \n                                \n                                \n                                    \n                                        invoices:         InvoiceModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InvoiceModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {InvoiceModel} from '../../models/Invoice/invoice.model';\n\nexport interface InvoiceStateModel {\n  invoices: InvoiceModel[];\n}\n\nexport namespace InvoiceActions {\n\n  export class FetchUserInvoices {\n    static readonly type = '[Invoice] Fetch User Invoices';\n\n    constructor() {\n    }\n  }\n\n  export class PushInvoice {\n    static readonly type = '[Invoice] Push Invoice';\n\n    constructor(public invoice: InvoiceModel) {\n    }\n  }\n\n  export class FetchInvoiceById {\n    static readonly type = '[Invoice] Fetch Invoice By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearInvoicesFromStorage {\n    static readonly type = '[Invoice] Clear Invoices From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvoicesComponent.html":{"url":"components/InvoicesComponent.html","title":"component - InvoicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InvoicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/invoices/invoices/invoices.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invoices\n            \n\n            \n                styleUrls\n                ./invoices.component.css\n            \n\n\n\n            \n                templateUrl\n                ./invoices.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                refreshInvoices\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Invoices\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, gdService: GlobalDataService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/invoices/invoices/invoices.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshInvoices\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshInvoices()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      'id',\n      'total',\n      'date',\n      'dueDate',\n      'paymentDate'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Invoices\n                    \n                \n\n                \n                    \n                        getInvoices()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/invoices/invoices/invoices.component.ts:53\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {InvoiceActions} from '../../../state-management/invoice/invoice.actions';\nimport FetchUserInvoices = InvoiceActions.FetchUserInvoices;\nimport {Store} from '@ngxs/store';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {MatSort} from '@angular/material/sort';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.css']\n})\nexport class InvoicesComponent implements OnInit {\n  displayedColumns: string[] =\n    [\n      'id',\n      'total',\n      'date',\n      'dueDate',\n      'paymentDate'\n    ];\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(public helperService: HelperService,\n              public gdService: GlobalDataService,\n              public store: Store) {\n    if (!gdService.Invoices) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchUserInvoices()).subscribe(() => {\n        this.refreshInvoices();\n        this.helperService.hideSpinner();\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    } else {\n      this.refreshInvoices();\n    }\n  }\n\n  refreshInvoices() {\n    this.helperService.invoicesDataSource.data = this.Invoices;\n  }\n\n  ngOnInit(): void {\n    this.helperService.invoicesDataSource.paginator = this.paginator;\n    this.helperService.invoicesDataSource.sort = this.sort;\n  }\n\n  get Invoices() {\n    return this.gdService.Invoices;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Invoices\n      \n      \n        \n          \n            No Invoices Available!\n          \n        \n        \n          \n            \n               Id\n               {{invoice.id}} \n            \n            \n              Total\n               ${{invoice.total}} \n            \n            \n              Created In\n              \n                {{invoice.date | date: 'short'}}\n              \n            \n            \n            \n               Due Date\n              \n                {{invoice.dueDate | date: 'short'}}\n              \n            \n            \n               Payment Date\n              \n                {{invoice.paymentDate | date: 'short'}}\n              \n            \n            \n            \n          \n          \n        \n      \n    \n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./invoices.component.css\n                \n                table {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Invoices                                          No Invoices Available!                                                               Id               {{invoice.id}}                                       Total               ${{invoice.total}}                                       Created In                              {{invoice.date | date: \\'short\\'}}                                                                 Due Date                              {{invoice.dueDate | date: \\'short\\'}}                                                     Payment Date                              {{invoice.paymentDate | date: \\'short\\'}}                                                                                            '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvoicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemTag.html":{"url":"classes/ItemTag.html","title":"class - ItemTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/classes/item-tag.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/item-tag.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/item-tag.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/classes/item-tag.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ItemTag  {\n\n  id: number;\n\n  name: string;\n\n  tagId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Key.html":{"url":"classes/Key.html","title":"class - Key","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Key\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/key.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                p256dh\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/key.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            p256dh\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/key.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Key {\n  p256dh: string;\n  auth: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: AuthCredentialsDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        AuthCredentialsDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthCredentialsDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailLoginDto\n                            \n                            \n                                emailRequestForm\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                isSent\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendEmailForgotPassword\n                            \n                            \n                                submitLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Email\n                                \n                                \n                                    ForgotRequestEmail\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, fb: FormBuilder, store: Store, gdService: GlobalDataService, router: Router, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/login/login.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendEmailForgotPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsendEmailForgotPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/login/login.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitLogin\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/login/login.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailLoginDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailRequestForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Email\n                    \n                \n\n                \n                    \n                        getEmail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/login/login.component.ts:63\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        ForgotRequestEmail\n                    \n                \n\n                \n                    \n                        getForgotRequestEmail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/login/login.component.ts:67\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Login} from '../../../state-management/auth/auth-actions';\nimport {CustomValidators} from 'ngx-custom-validators';\nimport {EmailPattern} from '../../../commons/constants';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {Router} from '@angular/router';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {Store} from '@ngxs/store';\nimport {AuthService} from '../../../services/auth/auth.service';\nimport {OrderActions} from '../../../state-management/order/order.actions';\nimport FetchUserOrders = OrderActions.FetchUserOrders;\nimport {PaymentActions} from '../../../state-management/payment/payment.actions';\nimport FetchUserPayments = PaymentActions.FetchUserPayments;\nimport {InvoiceActions} from '../../../state-management/invoice/invoice.actions';\nimport FetchUserInvoices = InvoiceActions.FetchUserInvoices;\nimport {CartActions} from '../../../state-management/cart/cart.actions';\nimport FetchUserCart = CartActions.FetchUserCart;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  emailLoginDto: FormGroup;\n  emailRequestForm: FormGroup;\n  // special Case\n  isSent = false;\n  message: string = null;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              private store: Store,\n              private gdService: GlobalDataService,\n              private router: Router,\n              public helperService: HelperService) {\n    if (gdService.IsAuthenticated()) {\n      router.navigate(['/dashboard']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.emailLoginDto = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(EmailPattern),\n        CustomValidators.email,\n      ]),\n      password: new FormControl(null, Validators.required)\n    });\n    this.emailRequestForm = this.fb.group({\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(EmailPattern),\n        CustomValidators.email,\n      ])\n    });\n  }\n\n  get Email() {\n    return this.emailLoginDto.get('email');\n  }\n\n  get ForgotRequestEmail() {\n    return this.emailRequestForm.get('email');\n\n  }\n\n  submitLogin() {\n    this.helperService.showSpinner();\n    this.store.dispatch(new Login(this.emailLoginDto.value)).subscribe(() => {\n      this.helperService.openSnackbar(`Welcome ${this.gdService.Username}`, 'Close');\n      this.store.dispatch(new FetchUserCart());\n      this.store.dispatch(new FetchUserOrders());\n      this.store.dispatch(new FetchUserPayments());\n      this.store.dispatch(new FetchUserInvoices());\n      this.router.navigate(['/home']);\n      this.helperService.hideSpinner();\n    }, error => {\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n  sendEmailForgotPassword() {\n    this.helperService.showSpinner();\n    this.authService.forgotPassword(this.emailRequestForm.value.email)\n      .subscribe(result => {\n        this.message = `Your Request has been sent successfully, please checkout\n         your email inbox to confirm your request and reset your password`;\n        this.isSent = true;\n        this.helperService.hideSpinner();\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Sign in\n          \n        \n        \n          \n          \n            \n            \n              \n                \n                  \n                \n                \n              \n              \n                Email is required\n                Please provide a valid email address\n              \n            \n            \n              \n                \n                  \n                \n                \n              \n            \n            \n              \n                Forgot Your Password?\n              \n              \n                Or create a new account\n              \n            \n            Sign in\n            \n          \n        \n      \n    \n  \n\n\n\n  \n    Please Wait...\n  \n\n\n  \n\n\n\n\n  \n    \n      Enter Your Email to Send Forgot Password\n        Request\n      \n        &times;\n      \n    \n    \n      \n        \n          \n            \n              \n                \n              \n              \n            \n            \n              Email is required\n              Please provide a valid email\n                address\n            \n          \n        \n      \n      \n        \n          {{message}}\n        \n      \n    \n    \n      Send Request\n      \n      Close\n    \n  \n  \n    \n      Sending Request...\n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Sign in                                                                                                                                                                                                  Email is required                Please provide a valid email address                                                                                                                                                                                          Forgot Your Password?                                            Or create a new account                                      Sign in                                                Please Wait...                Enter Your Email to Send Forgot Password        Request              ×                                                                                                                                                  Email is required              Please provide a valid email                address                                                            {{message}}                            Send Request            Close                  Sending Request...      '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFirstComponent.html":{"url":"components/LoginFirstComponent.html","title":"component - LoginFirstComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFirstComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/login-first/login-first.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-first\n            \n\n            \n                styleUrls\n                ./login-first.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-first.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helperService\n                            \n                            \n                                validatingForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginFormModalEmail\n                                \n                                \n                                    loginFormModalPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/login-first/login-first.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/login-first/login-first.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/login-first/login-first.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validatingForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/login-first/login-first.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loginFormModalEmail\n                    \n                \n\n                \n                    \n                        getloginFormModalEmail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/login-first/login-first.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        loginFormModalPassword\n                    \n                \n\n                \n                    \n                        getloginFormModalPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/login-first/login-first.component.ts:29\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HelperService} from '../../services/helper.service';\n\n@Component({\n  selector: 'app-login-first',\n  templateUrl: './login-first.component.html',\n  styleUrls: ['./login-first.component.css']\n})\nexport class LoginFirstComponent implements OnInit {\n\n  validatingForm: FormGroup;\n  helperService: HelperService;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.validatingForm = new FormGroup({\n      loginFormModalEmail: new FormControl('', Validators.email),\n      loginFormModalPassword: new FormControl('', Validators.required)\n    });\n  }\n\n  get loginFormModalEmail() {\n    return this.validatingForm.get('loginFormModalEmail');\n  }\n\n  get loginFormModalPassword() {\n    return this.validatingForm.get('loginFormModalPassword');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Sign in\n      \n        &times;\n      \n    \n    \n      \n        \n        \n        Your email\n        \n          Input invalid\n        \n        Input\n          valid\n        \n      \n\n      \n        \n        \n        Your password\n        \n          Input invalid\n        \n        \n          Input valid\n        \n      \n\n    \n    \n      Login\n      Close\n    \n  \n\n\n    \n\n    \n                \n                    ./login-first.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sign in              ×                                            Your email                  Input invalid                Input          valid                                            Your password                  Input invalid                          Input valid                            Login      Close      '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFirstComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/interfaces/login-response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/interfaces/login-response.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/interfaces/login-response.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\n\nexport class LoginResponse {\n  user: UserModel;\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logout.html":{"url":"classes/Logout.html","title":"class - Logout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Logout'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/material.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatTreeModule} from \"@angular/material/tree\";\nimport {MatProgressBarModule} from \"@angular/material/progress-bar\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {ScrollingModule} from \"@angular/cdk/scrolling\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatExpansionModule} from \"@angular/material/expansion\";\nimport {MatDatepickerModule} from \"@angular/material/datepicker\";\nimport {OverlayModule} from \"@angular/cdk/overlay\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatMenuModule} from \"@angular/material/menu\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatSortModule} from \"@angular/material/sort\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {CdkStepperModule} from \"@angular/cdk/stepper\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {A11yModule} from \"@angular/cdk/a11y\";\nimport {PortalModule} from \"@angular/cdk/portal\";\nimport {CdkTableModule} from \"@angular/cdk/table\";\nimport {CdkTreeModule} from \"@angular/cdk/tree\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {ObserversModule} from \"@angular/cdk/observers\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatStepperModule} from \"@angular/material/stepper\";\nimport {PlatformModule} from \"@angular/cdk/platform\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {CdkAccordionModule} from \"@angular/cdk/accordion\";\nimport {BidiModule} from \"@angular/cdk/bidi\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatNativeDateModule, MatRippleModule} from \"@angular/material/core\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {MatBadgeModule} from \"@angular/material/badge\";\nimport {DragDropModule} from \"@angular/cdk/drag-drop\";\nimport {MatBottomSheetModule} from \"@angular/material/bottom-sheet\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatDividerModule} from \"@angular/material/divider\";\n\n\nconst materialModules = [\n  MatButtonModule,\n  CdkAccordionModule,\n  BidiModule,\n  OverlayModule,\n  PlatformModule,\n  ObserversModule,\n  MatIconModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatTabsModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  A11yModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  PortalModule,\n  ScrollingModule\n];\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    materialModules\n  ],\n  exports: [\n    materialModules\n  ]\n})\nexport class MaterialModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MdbModule.html":{"url":"modules/MdbModule.html","title":"module - MdbModule","body":"\n                   \n\n\n\n\n    Modules\n    MdbModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/mdb.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {\n  MDBBootstrapModule,\n  BadgeModule,\n  BreadcrumbModule,\n  MDBRootModule,\n  ModalModule,\n  ButtonsModule,\n  WavesModule,\n  TooltipModule,\n  TableModule,\n  PopoverModule,\n  NavbarModule,\n  CardsModule,\n  DropdownModule,\n  IconsModule,\n  CheckboxModule,\n  InputUtilitiesModule,\n  CarouselModule,\n  CollapseModule,\n  ChartsModule,\n  StickyHeaderModule,\n  InputsModule\n} from 'angular-bootstrap-md';\n\nexport const mdbModules = [\n  MDBBootstrapModule.forRoot(),\n  BadgeModule,\n  BreadcrumbModule,\n  MDBRootModule,\n  ModalModule.forRoot(),\n  ButtonsModule.forRoot(),\n  WavesModule.forRoot(),\n  TooltipModule.forRoot(),\n  TableModule,\n  PopoverModule.forRoot(),\n  NavbarModule,\n  CardsModule.forRoot(),\n  DropdownModule.forRoot(),\n  IconsModule,\n  CheckboxModule,\n  InputUtilitiesModule,\n  CarouselModule.forRoot(),\n  CollapseModule.forRoot(),\n  ChartsModule,\n  StickyHeaderModule,\n  InputsModule.forRoot(),\n];\n\n@NgModule({\n  imports: mdbModules,\n  exports: [mdbModules]\n})\nexport class MdbModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/chatbot/message.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                sender\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: string, sender: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/chatbot/message.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sender\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chatbot/message.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/chatbot/message.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Message {\n  constructor(public content: string, public sender: string) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enableCookies\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                isHandset$\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, router: Router, helperService: HelperService, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableCookies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('enableCookies', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSidenav\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('sidenav', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {map, shareReplay} from 'rxjs/operators';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {HelperService} from '../../shared/services/helper.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n\n  @ViewChild('sidenav', {static: false}) sidenav: MatSidenav;\n  @ViewChild('enableCookies', {static: false}) enableCookies: TemplateRef;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    public router: Router,\n    public helperService: HelperService,\n    public gdService: GlobalDataService) {\n  }\n\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n    \n\n    \n        \n\n\n  \n\n    \n      \n        close\n        \n          \n        \n      \n    \n    \n\n\n      \n        \n          Login \n        \n        \n        \n          Register \n        \n      \n      \n        \n          {{gdService.Username}}\n          \n          \n          \n        \n        \n          \n            Profile\n          \n          \n            Orders\n          \n          \n            Invoices\n          \n          \n            Logout \n          \n        \n      \n      \n        \n          Cart \n        \n        \n        \n          Shop Now \n        \n      \n      \n        \n          \n        \n      \n    \n    \n  \n  \n    \n      \n        \n        \n          close\n        \n      \n    \n    \n  \n  \n    \n      \n        \n          \n            \n          \n        \n\n        \n        \n          menu\n        \n        \n          \n            Cart =1\"\n                    [matBadge]=\"gdService.Cart.cartProducts.length.toString()\"\n                    class=\"fas fa-cart-arrow-down\" matBadgeOverlap=\"false\"\n                    matBadgePosition=\"above after\" matBadgeSize=\"medium\"\n                    matBadgeColor=\"accent\">\n          \n          \n            {{gdService.Username}}\n          \n          \n            \n              Profile\n            \n            \n              Orders\n            \n            \n              Invoices\n            \n          \n          \n            Logout \n          \n          \n            Login \n          \n          \n            Register \n          \n        \n      \n\n    \n    \n      \n        \n          \n            Categories &nbsp; \n          \n        \n        \n          \n            Tags &nbsp; \n          \n        \n        \n          \n            Home&nbsp; \n          \n        \n        \n          \n            Shop &nbsp; \n          \n        \n        \n          \n        \n      \n    \n\n    \n\n    \n    \n\n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .sidenav-container {\n  height: 100%;\n  width: 100%;\n}\n\n.vl {\n  border-left: 1px solid;\n  height: 30px;\n}\n\n.desktop {\n  background: #283048;  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #859398, #283048);  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #859398, #283048); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n}\n\n.under-bar {\n  background: #E0EAFC; /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #CFDEF3, #E0EAFC); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #CFDEF3, #E0EAFC); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.sidenav {\n  width: 290px;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n}\n\n\n\n\n.test {\n  background: #bdc3c7; /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #2c3e50, #bdc3c7); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #2c3e50, #bdc3c7); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n\n.example-spacer {\n  flex: 1 1 auto;\n}\n\n.nav-item {\n  font-family: 'Anton', sans-serif;\n}\n\na {\n  font-family: 'Anton', sans-serif;\n  color: white;\n}\n\n.example-container {\n  position: absolute;\n  top: 200px;\n  bottom: 0;\n  left: 0;\n}\n\n.example-sidenav {\n  width: 250px;\n}\n\n.example-header {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  background: #000000; /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #434343, #000000); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #434343, #000000); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    close                                                                Login                                   Register                                       {{gdService.Username}}                                                                    Profile                                Orders                                Invoices                                Logout                                                 Cart                                   Shop Now                                                                                                     close                                                                                                              menu                                      Cart =1\"                    [matBadge]=\"gdService.Cart.cartProducts.length.toString()\"                    class=\"fas fa-cart-arrow-down\" matBadgeOverlap=\"false\"                    matBadgePosition=\"above after\" matBadgeSize=\"medium\"                    matBadgeColor=\"accent\">                                {{gdService.Username}}                                              Profile                                      Orders                                      Invoices                                            Logout                                 Login                                 Register                                                                     Categories                                                   Tags                                                   Home                                                  Shop                                                                       '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxModule.html":{"url":"modules/NgxModule.html","title":"module - NgxModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/ngx.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CarouselModule} from 'ngx-bootstrap/carousel';\nimport {TooltipModule} from 'ngx-bootstrap/tooltip';\nimport {ModalModule} from 'ngx-bootstrap/modal';\nimport {PopoverModule} from 'ngx-bootstrap/popover';\nimport {AccordionModule} from 'ngx-bootstrap/accordion';\nimport {PaginationModule} from 'ngx-bootstrap/pagination';\nimport {NgxSpinnerModule} from 'ngx-spinner';\nimport {ToastrModule} from 'ngx-toastr';\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {NgxImageZoomModule} from 'ngx-image-zoom';\n\nconst ngxComponents = [\n  CarouselModule.forRoot(),\n  TooltipModule.forRoot(),\n  ModalModule.forRoot(),\n  PopoverModule.forRoot(),\n  AccordionModule.forRoot(),\n  PaginationModule.forRoot(),\n  BsDropdownModule.forRoot(),\n  NgxImageZoomModule\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ngxComponents,\n    NgxSpinnerModule,\n    ToastrModule.forRoot(),\n  ],\n  exports: [ngxComponents, NgxSpinnerModule, ToastrModule]\n})\nexport class NgxModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoInternetComponent.html":{"url":"components/NoInternetComponent.html","title":"component - NoInternetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoInternetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/error/no-internet/no-internet.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-no-internet\n            \n\n            \n                styleUrls\n                ./no-internet.component.css\n            \n\n\n\n            \n                templateUrl\n                ./no-internet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                returnUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOnline\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/error/no-internet/no-internet.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/error/no-internet/no-internet.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://global-market-demo.herokuapp.com'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/error/no-internet/no-internet.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/error/no-internet/no-internet.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOnline\n                    \n                \n\n                \n                    \n                        getisOnline()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/error/no-internet/no-internet.component.ts:30\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {ActivatedRoute, ParamMap, Params, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-no-internet',\n  templateUrl: './no-internet.component.html',\n  styleUrls: ['./no-internet.component.css']\n})\nexport class NoInternetComponent implements OnInit {\n\n  baseUrl = 'https://global-market-demo.herokuapp.com';\n\n  constructor(private helperService: HelperService, private router: Router, private route: ActivatedRoute) {\n    route.queryParamMap.subscribe((q: ParamMap) => {\n      this.returnUrl = q.get('returnUrl');\n      this.baseUrl = this.baseUrl + q.get('returnUrl');\n    });\n  }\n\n  returnUrl: string;\n\n  ngOnInit(): void {\n    if (this.isOnline) {\n      this.router.navigate([this.returnUrl]);\n    }\n  }\n\n\n  get isOnline() {\n    const isOnline = sessionStorage.getItem('isOnline');\n    return isOnline === 'true';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            No internet\n            connection \n        \n        \n          \n            Please re-connect to the internet to continue use Footsteps.\n            If you encounter problems:\n            \n              Try restarting wireless connection on this device.\n              Move clouse to your wireless access point.\n            \n          \n          \n            \n              Try Again\n              Try Again\n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./no-internet.component.css\n                \n                @import url('https://fonts.googleapis.com/css?family=Rubik&display=swap');\n\nbody {\n  font-family: 'Rubik', sans-serif;\n  background: linear-gradient(180deg, rgb(255, 166, 166), #fff) no-repeat;\n}\n\n.container {\n  margin-top: 100px !important\n}\n\nh3 {\n  color: #9E9E9E;\n  font-size: calc(20px + 6 * ((100vw - 320px) / 680))\n}\n\nbutton:focus {\n  box-shadow: none !important;\n  outline-width: 0\n}\n\n.card {\n  border-radius: 0;\n  width: calc(475px + 10 * ((100vw - 320px) / 680));\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.8)\n}\n\n.card-header {\n  background-color: #F44236 !important;\n  color: #fff\n}\n\nimg {\n  width: 180px !important\n}\n\n.btn-primary {\n  background: #B52AB4;\n  color: #fff !important;\n  border-radius: 0 !important;\n  letter-spacing: 1px\n}\n\n.btn-primary:hover {\n  background: #B52AB4\n}\n\n.btn-primary:focus {\n  background: #B52AB4 !important\n}\n\n.btn-success {\n  border: 1px solid #B52AB4;\n  padding: 8px 20px 8px 20px !important;\n  border-radius: 20px !important\n}\n\n.btn-success:hover {\n  background: #B52AB4;\n  color: #fff !important;\n  border-color: #B52AB4 !important\n}\n\n.btn-success:focus {\n  background: #B52AB4 !important;\n  color: #fff !important\n}\n\n.btn-success {\n  background: #B52AB4 !important\n}\n\n.inner li {\n  list-style-type: disc !important\n}\n\n.fa-times-circle {\n  vertical-align: middle !important;\n  cursor: pointer !important\n}\n\n@media (max-width: 654px) {\n  .card {\n    width: unset\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                No internet            connection                                       Please re-connect to the internet to continue use Footsteps.            If you encounter problems:                          Try restarting wireless connection on this device.              Move clouse to your wireless access point.                                                          Try Again              Try Again                                                        '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoInternetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/notification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                body\n                            \n                            \n                                data\n                            \n                            \n                                icon\n                            \n                            \n                                title\n                            \n                            \n                                vibrate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Content[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vibrate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationData } from './notification-data';\nimport { Content } from './content';\n\nexport class Notification {\n  title: string;\n  body: string;\n  icon: string;\n  vibrate: number[];\n  data: NotificationData;\n  actions: Content[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationData.html":{"url":"classes/NotificationData.html","title":"class - NotificationData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/notification-data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfArrival\n                            \n                            \n                                primaryKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateOfArrival\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification-data.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            primaryKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification-data.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotificationData {\n  dateOfArrival: Date;\n  primaryKey: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationEntity.html":{"url":"classes/NotificationEntity.html","title":"class - NotificationEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/models/notification-entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                id\n                            \n                            \n                                subscribersNotifications\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/notification-entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/notification-entity.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribersNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscribersNotifications[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/notification-entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/notification-entity.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SubscribersNotifications} from './subscribers-notification';\n\nexport class NotificationEntity  {\n  id: number;\n\n  title: string;\n\n  body: string;\n\n\n  subscribersNotifications: SubscribersNotifications[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationPayload.html":{"url":"classes/NotificationPayload.html","title":"class - NotificationPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/notification-payload.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notification\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification-payload.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Notification} from './notification';\n\nexport class NotificationPayload {\n  notification: Notification\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotificationPayloadDto.html":{"url":"classes/NotificationPayloadDto.html","title":"class - NotificationPayloadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotificationPayloadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/classes/notification-payload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification-payload.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/classes/notification-payload.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NotificationPayloadDto {\n  title: string;\n  body: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPushSubscriber\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addPushSubscriber\n                        \n                        \n                    \n                \n            \n            \n                \naddPushSubscriber(sub: any, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification/notification.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sub\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {Observable} from 'rxjs';\nimport {NotificationPayloadDto} from '../../models/Notifications/classes/notification-payload.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  addPushSubscriber(sub: any, email: string) {\n    return this.http.post(ApiEndpoints.NotificationEndpoints.newSubscriber, {\n      subscriptionDto: {\n        sub,\n        email\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderDetailsComponent.html":{"url":"components/OrderDetailsComponent.html","title":"component - OrderDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/orders/order-details/order-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-details\n            \n\n            \n                styleUrls\n                ./order-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./order-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                order\n                            \n                            \n                                orderItemsProducts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService, route: ActivatedRoute, orderService: OrderService, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/orders/order-details/order-details.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/orders/order-details/order-details.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/order-details/order-details.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/order-details/order-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/order-details/order-details.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderItemsProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/order-details/order-details.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {ActivatedRoute, ParamMap} from '@angular/router';\nimport {OrderService} from '../../../services/order/order.service';\nimport {OrderModel} from '../../../models/Orders/order.model';\nimport {ProductModel} from '../../../models/Products/product.model';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(private gdService: GlobalDataService, private route: ActivatedRoute,\n              private orderService: OrderService,\n              public helperService: HelperService) {\n    this.helperService.showSpinner();\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = +params.get('id');\n      if (id) {\n        this.orderService.getOrderDetails(id).subscribe((data) => {\n          this.order = data.order;\n          this.orderItemsProducts = data.orderItemsProducts;\n          this.helperService.hideSpinner();\n        }, error => {\n          this.helperService.showErrorDialog(error, this.errorTemplate);\n        });\n      }\n    });\n  }\n\n  order: OrderModel;\n  orderItemsProducts: ProductModel[];\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          &nbsp; Back to orders\n        \n      \n      \n        \n          \n            \n              \n                \n                  Basic Information\n                \n                \n                  Status: {{order.status}}\n                  {{order.createdAt | date: 'short'}}\n                  Shipped in: {{order.shipmentDate | date: 'short'}}\n                  View Invoice\n                \n              \n              \n              \n                \n                  Billing Address\n                \n                \n                  {{order.billingAddress.fullName}}\n                  {{order.billingAddress.email}}\n                  {{order.billingAddress.address1}}\n                  {{order.billingAddress.address2}}\n                  {{order.billingAddress.country}}\n                  {{order.billingAddress.city}}\n                  {{order.billingAddress.postalCode}}\n                  {{order.billingAddress.phone}}\n                  {{order.billingAddress.comments}}\n                \n              \n            \n          \n          \n            \n              \n                \n                  Items\n                \n                \n                  \n                    \n                      \n                        \n                          \n                          \n                            \n                              \n                              \n                            \n                          \n                        \n                      \n                      \n                        \n                          \n                            \n                              {{orderItemsProducts[i].name}}\n                              Unit Price:\n                                ${{orderItemsProducts[i].currentPrice}}\n                              Quantity: {{orderItem.quantity}}\n                            \n                          \n                        \n                      \n                    \n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Loading Order\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./order-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Back to orders                                                                                                  Basic Information                                                  Status: {{order.status}}                  {{order.createdAt | date: \\'short\\'}}                  Shipped in: {{order.shipmentDate | date: \\'short\\'}}                  View Invoice                                                                                            Billing Address                                                  {{order.billingAddress.fullName}}                  {{order.billingAddress.email}}                  {{order.billingAddress.address1}}                  {{order.billingAddress.address2}}                  {{order.billingAddress.country}}                  {{order.billingAddress.city}}                  {{order.billingAddress.postalCode}}                  {{order.billingAddress.phone}}                  {{order.billingAddress.comments}}                                                                                                                          Items                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {{orderItemsProducts[i].name}}                              Unit Price:                                ${{orderItemsProducts[i].currentPrice}}                              Quantity: {{orderItem.quantity}}                                                                                                                                                                                                                                            Loading Order    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderDto.html":{"url":"classes/OrderDto.html","title":"class - OrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/order.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billingAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billingAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BillingAddress\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/order.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BillingAddress} from '../classes/billing-address';\n\nexport class OrderDto {\n  billingAddress: BillingAddress;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderItemModel.html":{"url":"classes/OrderItemModel.html","title":"class - OrderItemModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderItemModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Orders/order-item.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                orderId\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                            \n                                unitPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order-item.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order-item.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order-item.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order-item.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unitPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order-item.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OrderItemModel {\n  id: number;\n\n  unitPrice: number;\n\n  quantity: number;\n\n  orderId: number;\n\n  productId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderLayoutComponent.html":{"url":"components/OrderLayoutComponent.html","title":"component - OrderLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/order-layout/order-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-layout\n            \n\n            \n                styleUrls\n                ./order-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./order-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/order-layout/order-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/order-layout/order-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-layout',\n  templateUrl: './order-layout.component.html',\n  styleUrls: ['./order-layout.component.css']\n})\nexport class OrderLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./order-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderLayoutModule.html":{"url":"modules/OrderLayoutModule.html","title":"module - OrderLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderLayoutModule\n\n\n\ncluster_OrderLayoutModule_imports\n\n\n\ncluster_OrderLayoutModule_declarations\n\n\n\n\nOrderDetailsComponent\n\nOrderDetailsComponent\n\n\n\nOrderLayoutModule\n\nOrderLayoutModule\n\nOrderLayoutModule -->\n\nOrderDetailsComponent->OrderLayoutModule\n\n\n\n\n\nOrdersComponent\n\nOrdersComponent\n\nOrderLayoutModule -->\n\nOrdersComponent->OrderLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nOrderLayoutModule -->\n\nSharedModule->OrderLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/order-layout/order-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrderDetailsComponent\n                        \n                        \n                            OrdersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrdersComponent} from '../../pages/orders/orders/orders.component';\nimport {OrderDetailsComponent} from '../../pages/orders/order-details/order-details.component';\nimport {RouterModule} from '@angular/router';\nimport {OrderLayoutRoutes} from './order-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\n\n\n@NgModule({\n  declarations: [OrdersComponent, OrderDetailsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(OrderLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class OrderLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderModel.html":{"url":"classes/OrderModel.html","title":"class - OrderModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Orders/order.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                billingAddress\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                invoiceId\n                            \n                            \n                                orderItems\n                            \n                            \n                                shipmentDate\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            billingAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BillingAddress\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoiceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderItemModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shipmentDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderStatus\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Orders/order.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {BillingAddress} from '../../commons/classes/billing-address';\nimport {OrderItemModel} from './order-item.model';\nimport {OrderStatus} from '../../commons/enums/order-status.enum';\n\nexport class OrderModel {\n  id: number;\n\n  status: OrderStatus;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n\n  billingAddress: BillingAddress;\n\n  shipmentDate: Date;\n\n  orderItems: OrderItemModel[];\n\n  userId: number;\n\n  invoiceId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/order/order.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOrder\n                            \n                            \n                                getOrderDetails\n                            \n                            \n                                getUserOrders\n                            \n                            \n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/order/order.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelOrder\n                        \n                        \n                    \n                \n            \n            \n                \ncancelOrder(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/order/order.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrderDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrderDetails(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/order/order.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserOrders\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/order/order.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrder(id: number, data: OrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/order/order.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                OrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrderModel} from '../../models/Orders/order.model';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {ProductModel} from '../../models/Products/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  constructor(private _http: HttpClient) {\n  }\n\n\n  getUserOrders(): Observable {\n    return this._http.get(`${ApiEndpoints.OrderEndpoints.rootOrders}/user`);\n  }\n\n  updateOrder(id: number, data: OrderDto): Observable {\n    return this._http.put(`${ApiEndpoints.OrderEndpoints.rootOrders}/${id}/update`, data);\n  }\n\n  cancelOrder(id: number): Observable {\n    return this._http.delete(`${ApiEndpoints.OrderEndpoints.rootOrders}/${id}/cancel`);\n  }\n\n  getOrderDetails(id: number): Observable {\n    return this._http.get(`${ApiEndpoints.OrderEndpoints.rootOrders}/${id}/details`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderState.html":{"url":"injectables/OrderState.html","title":"injectable - OrderState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelOrder\n                            \n                            \n                                clearOrdersFromStorage\n                            \n                            \n                                fetchUserInvoices\n                            \n                            \n                                    Static\n                                Orders\n                            \n                            \n                                pushOrder\n                            \n                            \n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.state.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancelOrder\n                        \n                        \n                    \n                \n            \n            \n                \ncancelOrder(ctx: StateContext, action: CancelOrder)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CancelOrder)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                CancelOrder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearOrdersFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \nclearOrdersFromStorage(ctx: StateContext, action: ClearOrdersFromStorage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearOrdersFromStorage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearOrdersFromStorage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserInvoices\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserInvoices(ctx: StateContext, action: FetchUserOrders)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchUserOrders)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchUserOrders\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Orders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Orders(state: OrderStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                OrderStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushOrder\n                        \n                        \n                    \n                \n            \n            \n                \npushOrder(ctx: StateContext, action: PushOrder)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(PushOrder)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                PushOrder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrder(ctx: StateContext, action: UpdateOrder)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UpdateOrder)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/order/order.state.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UpdateOrder\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext} from '@ngxs/store';\nimport {Injectable} from '@angular/core';\nimport {tap} from 'rxjs/operators';\nimport {OrderService} from '../../services/order/order.service';\nimport {OrderActions, OrderStateModel} from './order.actions';\nimport {OrderModel} from '../../models/Orders/order.model';\nimport FetchUserOrders = OrderActions.FetchUserOrders;\nimport UpdateOrder = OrderActions.UpdateOrder;\nimport {append, patch, removeItem, updateItem} from '@ngxs/store/operators';\nimport CancelOrder = OrderActions.CancelOrder;\nimport ClearOrdersFromStorage = OrderActions.ClearOrdersFromStorage;\nimport PushOrder = OrderActions.PushOrder;\n\n\n@State({\n  name: 'orders',\n  defaults: {\n    orders: null\n  }\n})\n\n@Injectable()\nexport class OrderState {\n  constructor(private orderService: OrderService) {\n  }\n\n  @Selector()\n  static Orders(state: OrderStateModel) {\n    return state.orders;\n  }\n\n  @Action(FetchUserOrders)\n  fetchUserInvoices(ctx: StateContext, action: FetchUserOrders) {\n    return this.orderService.getUserOrders().pipe(\n      tap((data: OrderModel[]) => {\n        ctx.setState({\n          orders: data\n        });\n      })\n    );\n  }\n\n  @Action(UpdateOrder)\n  updateOrder(ctx: StateContext, action: UpdateOrder) {\n    return this.orderService.updateOrder(action.id, action.updateOrderDto).pipe(\n      tap((updatedOrder: OrderModel) => {\n        ctx.setState(patch({\n          orders: updateItem(order => order.id === action.id, updatedOrder)\n        }));\n      })\n    );\n  }\n\n  @Action(PushOrder)\n  pushOrder(ctx: StateContext, action: PushOrder) {\n    ctx.setState(patch({\n      orders: append([action.order])\n    }));\n  }\n\n  @Action(ClearOrdersFromStorage)\n  clearOrdersFromStorage(ctx: StateContext, action: ClearOrdersFromStorage) {\n    ctx.setState({\n      orders: null\n    });\n  }\n\n  @Action(CancelOrder)\n  cancelOrder(ctx: StateContext, action: CancelOrder) {\n    return this.orderService.cancelOrder(action.id).pipe(\n      tap(() => {\n        ctx.setState(patch({\n          orders: removeItem(order => order.id === action.id)\n        }));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderStateModel.html":{"url":"interfaces/OrderStateModel.html","title":"interface - OrderStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        orders\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        orders\n                                    \n                                \n                                \n                                    \n                                        orders:         OrderModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrdersComponent.html":{"url":"components/OrdersComponent.html","title":"component - OrdersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrdersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/orders/orders/orders.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-orders\n            \n\n            \n                styleUrls\n                ./orders.component.css\n            \n\n\n\n            \n                templateUrl\n                ./orders.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayedColumns\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                paginator\n                            \n                            \n                                sort\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToOrder\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Orders\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, router: Router, gdService: GlobalDataService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/orders/orders/orders.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToOrder\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToOrder(order: OrderModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/orders/orders/orders.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                OrderModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/orders/orders/orders.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshOrders\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/orders/orders/orders.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n      'id',\n      'status',\n      'createdAt',\n      'updatedAt',\n      'shipmentDate',\n      'actions'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Orders\n                    \n                \n\n                \n                    \n                        getOrders()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/orders/orders/orders.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {OrderStatus} from '../../../commons/enums/order-status.enum';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {Store} from '@ngxs/store';\nimport {InvoiceActions} from '../../../state-management/invoice/invoice.actions';\nimport FetchUserInvoices = InvoiceActions.FetchUserInvoices;\nimport {OrderActions} from '../../../state-management/order/order.actions';\nimport FetchUserOrders = OrderActions.FetchUserOrders;\nimport {OrderModel} from '../../../models/Orders/order.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  displayedColumns: string[] =\n    [\n      'id',\n      'status',\n      'createdAt',\n      'updatedAt',\n      'shipmentDate',\n      'actions'\n    ];\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(public helperService: HelperService,\n              private router: Router,\n              public gdService: GlobalDataService,\n              public store: Store) {\n\n    if (!gdService.Invoices) {\n      this.store.dispatch(new FetchUserInvoices()).subscribe(() => {\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    }\n    if (!this.gdService.Orders) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchUserOrders()).subscribe(() => {\n        this.refreshOrders();\n        this.helperService.hideSpinner();\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    } else {\n      this.refreshOrders();\n    }\n  }\n\n  refreshOrders() {\n    this.helperService.orderDataSource.data = this.Orders;\n  }\n\n  ngOnInit(): void {\n    this.helperService.orderDataSource.paginator = this.paginator;\n    this.helperService.orderDataSource.sort = this.sort;\n  }\n\n  navigateToOrder(order: OrderModel) {\n    this.router.navigate(['/orders', order.id], {\n      queryParams: {\n        status: order.status\n      }\n    });\n  }\n\n  get Orders() {\n    return this.gdService.Orders;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Orders\n      \n      \n        \n          \n            No Orders Available!\n          \n        \n        \n          \n            \n               Id\n               {{order.id}} \n            \n\n            \n               Status\n              \n                {{order.status}}\n              \n            \n            \n               Created In\n              \n                {{order.createdAt | date: 'short'}}\n              \n            \n            \n            \n               Updated In\n              \n                {{(order.updatedAt | date: 'short') || 'Not updated yet!'}}\n              \n            \n            \n               Shipment Date\n              \n                {{order.shipmentDate | date: 'short'}}\n              \n            \n            \n               Actions\n              \n                \n                  more_vert\n                \n                \n                  \n                    Details\n                  \n                \n              \n            \n            \n            \n          \n          \n        \n      \n    \n  \n\n\n  \n    Loading Orders\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./orders.component.css\n                \n                table {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Orders                                          No Orders Available!                                                               Id               {{order.id}}                                        Status                              {{order.status}}                                                     Created In                              {{order.createdAt | date: \\'short\\'}}                                                                 Updated In                              {{(order.updatedAt | date: \\'short\\') || \\'Not updated yet!\\'}}                                                     Shipment Date                              {{order.shipmentDate | date: \\'short\\'}}                                                     Actions                                                more_vert                                                                      Details                                                                                                                                  Loading Orders    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrdersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentLayoutComponent.html":{"url":"components/PaymentLayoutComponent.html","title":"component - PaymentLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaymentLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/payment-layout/payment-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-payment-layout\n            \n\n            \n                styleUrls\n                ./payment-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./payment-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/payment-layout/payment-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/payment-layout/payment-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payment-layout',\n  templateUrl: './payment-layout.component.html',\n  styleUrls: ['./payment-layout.component.css']\n})\nexport class PaymentLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        payment-layout works!\n\n    \n\n    \n                \n                    ./payment-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'payment-layout works!'\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentLayoutModule.html":{"url":"modules/PaymentLayoutModule.html","title":"module - PaymentLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentLayoutModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/payment-layout/payment-layout.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PaymentLayoutModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaymentModel.html":{"url":"classes/PaymentModel.html","title":"class - PaymentModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaymentModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Payments/payment.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                amount\n                            \n                            \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                invoiceId\n                            \n                            \n                                paymentMethod\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            amount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoiceId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaymentMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Payments/payment.model.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentMethod} from '../../commons/enums/payment-method.enum';\n\nexport class PaymentModel {\n  id: number;\n\n  date: Date;\n\n  amount: number;\n\n  paymentMethod: PaymentMethod;\n\n  userId: number;\n\n  invoiceId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/payment/payment.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserPayments\n                            \n                            \n                                setCustomerToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/payment/payment.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserPayments\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserPayments()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/payment/payment.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCustomerToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetCustomerToken(customerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/payment/payment.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    customerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {PaymentModel} from '../../models/Payments/payment.model';\nimport {UserModel} from '../../models/Auth/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  setCustomerToken(customerId: string): Observable {\n    return this._http.post\n    (`${ApiEndpoints.PaymentEndpoints.rootPayments}/customer/set-token`, {customerId});\n  }\n\n  getUserPayments(): Observable {\n    return this._http.get(`${ApiEndpoints.PaymentEndpoints.rootPayments}/user`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentState.html":{"url":"injectables/PaymentState.html","title":"injectable - PaymentState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaymentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearPaymentsFromStorage\n                            \n                            \n                                fetchUserPayments\n                            \n                            \n                                    Static\n                                Payments\n                            \n                            \n                                pushPayment\n                            \n                            \n                                setCustomerToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentService: PaymentService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.state.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentService\n                                                  \n                                                        \n                                                                        PaymentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearPaymentsFromStorage\n                        \n                        \n                    \n                \n            \n            \n                \nclearPaymentsFromStorage(ctx: StateContext, action: ClearPaymentsFromStorage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearPaymentsFromStorage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/payment/payment.state.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearPaymentsFromStorage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserPayments\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserPayments(ctx: StateContext, action: FetchUserPayments)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchUserPayments)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/payment/payment.state.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchUserPayments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Payments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Payments(state: PaymentStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/payment/payment.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                PaymentStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pushPayment\n                        \n                        \n                    \n                \n            \n            \n                \npushPayment(ctx: StateContext, action: PushPayment)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(PushPayment)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/payment/payment.state.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                PushPayment\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCustomerToken\n                        \n                        \n                    \n                \n            \n            \n                \nsetCustomerToken(ctx: StateContext, action: SetCustomerToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetCustomerToken)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/payment/payment.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetCustomerToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {Injectable} from '@angular/core';\nimport {tap} from 'rxjs/operators';\nimport {PaymentActions, PaymentStateModel} from './payment.actions';\nimport {PaymentService} from '../../services/payment/payment.service';\nimport {PaymentModel} from '../../models/Payments/payment.model';\nimport FetchUserPayments = PaymentActions.FetchUserPayments;\nimport ClearPaymentsFromStorage = PaymentActions.ClearPaymentsFromStorage;\nimport PushPayment = PaymentActions.PushPayment;\nimport {append, patch} from '@ngxs/store/operators';\nimport SetCustomerToken = PaymentActions.SetCustomerToken;\nimport {UserModel} from '../../models/Auth/user.model';\nimport {UpdateUser} from '../auth/auth-actions';\n\n\n@State({\n  name: 'payments',\n  defaults: {\n    payments: []\n  }\n})\n\n@Injectable()\nexport class PaymentState {\n  constructor(private paymentService: PaymentService, private store: Store) {\n  }\n\n  @Selector()\n  static Payments(state: PaymentStateModel) {\n    return state.payments;\n  }\n\n  @Action(ClearPaymentsFromStorage)\n  clearPaymentsFromStorage(ctx: StateContext, action: ClearPaymentsFromStorage) {\n    ctx.setState({\n      payments: null\n    });\n  }\n\n  @Action(PushPayment)\n  pushPayment(ctx: StateContext, action: PushPayment) {\n    ctx.setState(patch({\n      payments: append([action.payment])\n    }));\n  }\n\n  @Action(SetCustomerToken)\n  setCustomerToken(ctx: StateContext, action: SetCustomerToken) {\n    return this.paymentService.setCustomerToken(action.customerId).pipe(\n      tap((user: UserModel) => {\n        this.store.dispatch(new UpdateUser(user));\n      })\n    );\n  }\n\n  @Action(FetchUserPayments)\n  fetchUserPayments(ctx: StateContext, action: FetchUserPayments) {\n    return this.paymentService.getUserPayments().pipe(\n      tap((data: PaymentModel[]) => {\n        ctx.setState({\n          payments: data\n        });\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaymentStateModel.html":{"url":"interfaces/PaymentStateModel.html","title":"interface - PaymentStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaymentStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        payments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                    \n                                \n                                \n                                    \n                                        payments:         PaymentModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nCategoryPipe\n\nCategoryPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCategoryPipe->PipesModule\n\n\n\n\n\nGeneralPipe\n\nGeneralPipe\n\nPipesModule -->\n\nGeneralPipe->PipesModule\n\n\n\n\n\nProductFilterPipe\n\nProductFilterPipe\n\nPipesModule -->\n\nProductFilterPipe->PipesModule\n\n\n\n\n\nTagPipe\n\nTagPipe\n\nPipesModule -->\n\nTagPipe->PipesModule\n\n\n\n\n\nCategoryPipe \n\nCategoryPipe \n\nCategoryPipe  -->\n\nPipesModule->CategoryPipe \n\n\n\n\n\nGeneralPipe \n\nGeneralPipe \n\nGeneralPipe  -->\n\nPipesModule->GeneralPipe \n\n\n\n\n\nProductFilterPipe \n\nProductFilterPipe \n\nProductFilterPipe  -->\n\nPipesModule->ProductFilterPipe \n\n\n\n\n\nTagPipe \n\nTagPipe \n\nTagPipe  -->\n\nPipesModule->TagPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/pipes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoryPipe\n                        \n                        \n                            GeneralPipe\n                        \n                        \n                            ProductFilterPipe\n                        \n                        \n                            TagPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoryPipe\n                        \n                        \n                            GeneralPipe\n                        \n                        \n                            ProductFilterPipe\n                        \n                        \n                            TagPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CategoryPipe} from './category.pipe';\nimport {TagPipe} from './tag.pipe';\nimport {ProductFilterPipe} from './product-filter.pipe';\nimport {GeneralPipe} from './general.pipe';\n\n\n@NgModule({\n  declarations: [CategoryPipe, TagPipe, ProductFilterPipe, GeneralPipe],\n  exports: [CategoryPipe, TagPipe, ProductFilterPipe, GeneralPipe]\n})\nexport class PipesModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductDetailsComponent.html":{"url":"components/ProductDetailsComponent.html","title":"component - ProductDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/product/product-details/product-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-details\n            \n\n            \n                styleUrls\n                ./product-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                product\n                            \n                            \n                                relatedProducts\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedImage\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToTop\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setData\n                            \n                            \n                                setSelectedImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, router: Router, store: Store, route: ActivatedRoute, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/product/product-details/product-details.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToTop\n                        \n                        \n                    \n                \n            \n            \n                \nbackToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/product/product-details/product-details.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/product/product-details/product-details.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(productId: number, subCategoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/product/product-details/product-details.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subCategoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedImage\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedImage(image: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/product/product-details/product-details.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            relatedProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCategoryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/product/product-details/product-details.component.ts:68\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit} from '@angular/core';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Store} from '@ngxs/store';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\nimport {ProductModel} from '../../../models/Products/product.model';\nimport {SubCategoryActions} from '../../../state-management/sub-category/sub-category.actions';\nimport FetchAllSubCategories = SubCategoryActions.FetchAllSubCategories;\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  relatedProducts: ProductModel[] = [];\n\n  constructor(public helperService: HelperService,\n              public router: Router,\n              public store: Store,\n              public route: ActivatedRoute,\n              public gdService: GlobalDataService) {\n    this.helperService.showSpinner();\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const productId = +params.get('productId');\n      const subCategoryId = +params.get('subCategoryId');\n      if (!this.gdService.SubCategories) {\n        this.store.dispatch(new FetchAllSubCategories()).subscribe(() => {\n          this.setData(productId, subCategoryId);\n        });\n      } else {\n        this.setData(productId, subCategoryId);\n      }\n    });\n  }\n\n  backToTop() {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }\n\n  setData(productId: number, subCategoryId: number) {\n    const subCategory = this.gdService.SubCategories.find(sc => sc.id === subCategoryId);\n    if (subCategory) {\n      this.subCategory = subCategory;\n      const product = subCategory.products.find(p => p.id === productId);\n      if (product) {\n        this.relatedProducts = [];\n        this.product = product;\n        this.selectedImage = product.images[0];\n        for (let i = 0; i  p.id === product.references[i]);\n          if (productModel) {\n            this.relatedProducts = [...this.relatedProducts, productModel];\n          }\n        }\n      }\n    }\n    this.helperService.hideSpinner();\n  }\n\n  selectedImage: string;\n\n  setSelectedImage(image: string) {\n    this.selectedImage = image;\n  }\n\n  subCategory: SubCategoryModel;\n  product: ProductModel;\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Loading Product... Hang On\n  \n\n\n  \n    \n      \n        \n          \n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n            \n              \n                \n                  \n                  \n                \n              \n            \n          \n          \n            {{product.name}}\n            ${{product.currentPrice}}\n              \n                ${{product.previousPrice}}\n              \n            \n            {{product.description}}.\n            \n              \n                \n                \n                  \n                \n                \n                  Delivery\n                  Jordan, All Provinces\n                \n                \n              \n            \n            \n            Add to cart\n            \n            \n              \n            \n\n          \n        \n\n      \n    \n  \n  = 1\">\n    \n      Related Products\n    \n    \n      \n        \n        \n          \n          \n            \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{product.name}}\n                \n                  ${{product.currentPrice}} \n                  \n                   ${{product.previousPrice}}\n                  \n                \n                \n\n                Add to cart\n                \n                \n                  \n                \n              \n              \n            \n            \n          \n          \n\n\n          \n\n          \n\n        \n        \n\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./product-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Loading Product... Hang On                                                                                                                                                                                                                                                                                                                              {{product.name}}            ${{product.currentPrice}}                              ${{product.previousPrice}}                                      {{product.description}}.                                                                                                                              Delivery                  Jordan, All Provinces                                                                                  Add to cart                                                                                  = 1\">          Related Products                                                                                                                                                                                                                                                                {{product.name}}                                  ${{product.currentPrice}}                                      ${{product.previousPrice}}                                                                  Add to cart                                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ProductFilterPipe.html":{"url":"pipes/ProductFilterPipe.html","title":"pipe - ProductFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ProductFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/product-filter.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        productFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(products: ProductModel[], searchTerm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/pipes/product-filter.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    products\n                                    \n                                                ProductModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchTerm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProductModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport {ProductModel} from '../../models/Products/product.model';\n\n@Pipe({\n  name: 'productFilter'\n})\nexport class ProductFilterPipe implements PipeTransform {\n\n  transform(products: ProductModel[], searchTerm: string): ProductModel[] {\n    if (!products || !searchTerm) {\n      return products;\n    }\n    return products.filter(product =>\n      product.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1)\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProductLayoutComponent.html":{"url":"components/ProductLayoutComponent.html","title":"component - ProductLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProductLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/product-layout/product-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-product-layout\n            \n\n            \n                styleUrls\n                ./product-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./product-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/product-layout/product-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/product-layout/product-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-layout',\n  templateUrl: './product-layout.component.html',\n  styleUrls: ['./product-layout.component.css']\n})\nexport class ProductLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./product-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProductLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductLayoutModule.html":{"url":"modules/ProductLayoutModule.html","title":"module - ProductLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductLayoutModule\n\n\n\ncluster_ProductLayoutModule_declarations\n\n\n\ncluster_ProductLayoutModule_imports\n\n\n\n\nProductDetailsComponent\n\nProductDetailsComponent\n\n\n\nProductLayoutModule\n\nProductLayoutModule\n\nProductLayoutModule -->\n\nProductDetailsComponent->ProductLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProductLayoutModule -->\n\nSharedModule->ProductLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/product-layout/product-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProductDetailsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ProductDetailsComponent} from '../../pages/product/product-details/product-details.component';\nimport {RouterModule} from '@angular/router';\nimport {ProductLayoutRoutes} from './product-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\n\n\n@NgModule({\n  declarations: [ProductDetailsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ProductLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class ProductLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductModel.html":{"url":"classes/ProductModel.html","title":"class - ProductModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Products/product.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                currentPrice\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                inStock\n                            \n                            \n                                name\n                            \n                            \n                                previousPrice\n                            \n                            \n                                productTags\n                            \n                            \n                                quantity\n                            \n                            \n                                references\n                            \n                            \n                                sales\n                            \n                            \n                                subCategoryId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            images\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inStock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productTags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductTagModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sales\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product.model.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductTagModel} from './product-tag.model';\n\nexport class ProductModel  {\n  id: number;\n\n  name: string;\n\n  quantity: number;\n\n  images: string[];\n\n  description: string;\n\n  references: number[];\n\n  inStock: boolean;\n\n  currentPrice: number;\n\n  previousPrice: number;\n\n  sales: null;\n\n  productTags: ProductTagModel[];\n\n  createdAt: Date;\n\n  updatedAt: Date;\n\n  subCategoryId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/product/product.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                getCustomProducts\n                            \n                            \n                                getMixLatestProducts\n                            \n                            \n                                getMostSalesProducts\n                            \n                            \n                                getShopProducts\n                            \n                            \n                                searchByMatchingName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/product/product.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart(productId: number, cartId: number, createCartProductDto: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cartId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCartProductDto\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCustomProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetCustomProducts(productsCustomFilterDto: ProductsCustomFilterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsCustomFilterDto\n                                    \n                                                ProductsCustomFilterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMixLatestProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetMixLatestProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMostSalesProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetMostSalesProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getShopProducts\n                        \n                        \n                    \n                \n            \n            \n                \ngetShopProducts(take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchByMatchingName\n                        \n                        \n                    \n                \n            \n            \n                \nsearchByMatchingName(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/product/product.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {ProductModel} from '../../models/Products/product.model';\nimport {Observable} from 'rxjs';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\nimport {CartModel} from '../../models/Cart/cart.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getShopProducts(take: number): Observable {\n    let params = new HttpParams();\n    params = params.append('take', take.toString());\n    return this._http.get(`${ApiEndpoints.ProductEndpoints.rootProducts}/shop`, {\n      params\n    });\n  }\n\n  getMostSalesProducts(): Observable {\n    return this._http.get(`${ApiEndpoints.ProductEndpoints.rootProducts}/most-sales`);\n  }\n\n  getMixLatestProducts(): Observable {\n    return this._http.get(`${ApiEndpoints.ProductEndpoints.rootProducts}/mix-latest-products`);\n  }\n\n  searchByMatchingName(searchValue: string): Observable {\n    return this._http.get\n    (`${ApiEndpoints.ProductEndpoints.rootProducts}/match-by-name/${searchValue}`);\n  }\n\n  getCustomProducts(productsCustomFilterDto: ProductsCustomFilterDto): Observable {\n    return this._http.post(`${ApiEndpoints.ProductEndpoints.rootProducts}/custom-filter`, productsCustomFilterDto);\n  }\n\n\n  addToCart(productId: number, cartId: number, createCartProductDto: { quantity: number }): Observable {\n    return this._http.post\n    (`${ApiEndpoints.ProductEndpoints.rootProducts}/${productId}/add-to-cart/${cartId}`, createCartProductDto);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductState.html":{"url":"injectables/ProductState.html","title":"injectable - ProductState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToCart\n                            \n                            \n                                clearProducts\n                            \n                            \n                                fetchCustomProducts\n                            \n                            \n                                fetchMixLatestProducts\n                            \n                            \n                                fetchMostSalesProducts\n                            \n                            \n                                fetchShopProducts\n                            \n                            \n                                    Static\n                                LatestProducts\n                            \n                            \n                                    Static\n                                MostSalesProducts\n                            \n                            \n                                    Static\n                                ShopProducts\n                            \n                            \n                                updateShopProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productService: ProductService, subCategoryService: SubCategoryService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.state.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCategoryService\n                                                  \n                                                        \n                                                                        SubCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToCart\n                        \n                        \n                    \n                \n            \n            \n                \naddToCart(ctx: StateContext, action: AddToCart)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddToCart)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                AddToCart\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearProducts\n                        \n                        \n                    \n                \n            \n            \n                \nclearProducts(ctx: StateContext, action: ClearProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCustomProducts\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCustomProducts(ctx: StateContext, action: FetchCustomProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchCustomProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchCustomProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchMixLatestProducts\n                        \n                        \n                    \n                \n            \n            \n                \nfetchMixLatestProducts(ctx: StateContext, action: FetchMixLatestProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchMixLatestProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchMixLatestProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchMostSalesProducts\n                        \n                        \n                    \n                \n            \n            \n                \nfetchMostSalesProducts(ctx: StateContext, action: FetchMostSalesProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchMostSalesProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchMostSalesProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchShopProducts\n                        \n                        \n                    \n                \n            \n            \n                \nfetchShopProducts(ctx: StateContext, action: FetchShopProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchShopProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchShopProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            LatestProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    LatestProducts(state: ProductStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProductStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            MostSalesProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    MostSalesProducts(state: ProductStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProductStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ShopProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ShopProducts(state: ProductStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProductStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateShopProducts\n                        \n                        \n                    \n                \n            \n            \n                \nupdateShopProducts(ctx: StateContext, action: UpdateShopProducts)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(UpdateShopProducts)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/product/product.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                UpdateShopProducts\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {ProductActions, ProductStateModel} from './product.actions';\nimport {Injectable} from '@angular/core';\nimport {ProductService} from '../../services/product/product.service';\nimport {tap} from 'rxjs/operators';\nimport {ProductModel} from '../../models/Products/product.model';\nimport ClearProducts = ProductActions.ClearProducts;\nimport {patch} from '@ngxs/store/operators';\nimport FetchMostSalesProducts = ProductActions.FetchMostSalesProducts;\nimport FetchShopProducts = ProductActions.FetchShopProducts;\nimport FetchCustomProducts = ProductActions.FetchCustomProducts;\nimport {SubCategoryService} from '../../services/category/sub-category.service';\nimport FetchMixLatestProducts = ProductActions.FetchMixLatestProducts;\nimport AddToCart = ProductActions.AddToCart;\nimport {CartActions} from '../cart/cart.actions';\nimport UpdateShopProducts = ProductActions.UpdateShopProducts;\nimport {CartModel} from '../../models/Cart/cart.model';\nimport UpdateCartState = CartActions.UpdateCartState;\n\n@State({\n  name: 'products',\n  defaults: {\n    shopProducts: null,\n    latestProducts: null,\n    mostSalesProducts: null\n  }\n})\n\n@Injectable()\nexport class ProductState {\n  constructor(private productService: ProductService,\n              private subCategoryService: SubCategoryService,\n              private store: Store) {\n  }\n\n  @Selector()\n  static ShopProducts(state: ProductStateModel) {\n    return state.shopProducts;\n  }\n\n  @Selector()\n  static LatestProducts(state: ProductStateModel) {\n    return state.latestProducts;\n  }\n\n  @Selector()\n  static MostSalesProducts(state: ProductStateModel) {\n    return state.mostSalesProducts;\n  }\n\n  @Action(FetchShopProducts)\n  fetchShopProducts(ctx: StateContext, action: FetchShopProducts) {\n    return this.productService.getShopProducts(action.take).pipe(\n      tap((data: ProductModel[]) => {\n        ctx.setState(patch({\n          shopProducts: data\n        }));\n      })\n    );\n  }\n\n  @Action(UpdateShopProducts)\n  updateShopProducts(ctx: StateContext, action: UpdateShopProducts) {\n    ctx.setState(patch({\n      shopProducts: action.products\n    }));\n  }\n\n  @Action(FetchMostSalesProducts)\n  fetchMostSalesProducts(ctx: StateContext, action: FetchMostSalesProducts) {\n    return this.productService.getMostSalesProducts().pipe(\n      tap((data: ProductModel[]) => {\n        ctx.setState(patch({\n          mostSalesProducts: data\n        }));\n      })\n    );\n  }\n\n  @Action(FetchCustomProducts)\n  fetchCustomProducts(ctx: StateContext, action: FetchCustomProducts) {\n    return this.productService.getCustomProducts(action.productsCustomFilterDto).pipe(\n      tap((data: ProductModel[]) => {\n        ctx.setState(patch({\n          shopProducts: data\n        }));\n      })\n    );\n  }\n\n  @Action(AddToCart)\n  addToCart(ctx: StateContext, action: AddToCart) {\n    return this.productService.addToCart(action.productId, action.cartId, action.createCartProductDto).pipe(\n      tap((cart: CartModel) => {\n        this.store.dispatch(new UpdateCartState(cart));\n      })\n    );\n  }\n\n  @Action(FetchMixLatestProducts)\n  fetchMixLatestProducts(ctx: StateContext, action: FetchMixLatestProducts) {\n    return this.productService.getMixLatestProducts().pipe(\n      tap((data: ProductModel[]) => {\n        ctx.setState(patch({\n          latestProducts: data\n        }));\n      })\n    );\n  }\n\n\n  @Action(ClearProducts)\n  clearProducts(ctx: StateContext, action: ClearProducts) {\n    ctx.setState({\n      shopProducts: null,\n      mostSalesProducts: null,\n      latestProducts: null\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductStateModel.html":{"url":"interfaces/ProductStateModel.html","title":"interface - ProductStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProductStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latestProducts\n                                \n                                \n                                        mostSalesProducts\n                                \n                                \n                                        shopProducts\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latestProducts\n                                    \n                                \n                                \n                                    \n                                        latestProducts:         ProductModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mostSalesProducts\n                                    \n                                \n                                \n                                    \n                                        mostSalesProducts:         ProductModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shopProducts\n                                    \n                                \n                                \n                                    \n                                        shopProducts:         ProductModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductTagModel.html":{"url":"classes/ProductTagModel.html","title":"class - ProductTagModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductTagModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Products/product-tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ItemTag\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Products/product-tag.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ItemTag} from '../../commons/classes/item-tag';\n\nexport class ProductTagModel extends ItemTag {\n  productId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsCustomFilterDto.html":{"url":"classes/ProductsCustomFilterDto.html","title":"class - ProductsCustomFilterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsCustomFilterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/products-custom-filter.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                range1\n                            \n                            \n                                range2\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                stock\n                            \n                            \n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/products-custom-filter.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/products-custom-filter.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/products-custom-filter.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/products-custom-filter.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/products-custom-filter.dto.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductsCustomFilterDto {\n  range1: number;\n  range2: number;\n  take: number;\n  skip?: number;\n  stock: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileModel.html":{"url":"classes/ProfileModel.html","title":"class - ProfileModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Profile/profile.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                contacts\n                            \n                            \n                                country\n                            \n                            \n                                displayName\n                            \n                            \n                                gender\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contacts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Contact[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Profile/profile.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Contact} from '../../commons/classes/contact';\nimport {Gender} from '../../commons/enums/gender.enum';\n\nexport class ProfileModel {\n  id: number;\n\n  displayName: string;\n\n  gender: Gender;\n\n  country: string;\n\n  city: string;\n\n  contacts: Contact[];\n\n  image: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeProfileImage\n                            \n                            \n                                createUserProfile\n                            \n                            \n                                deleteProfileImage\n                            \n                            \n                                editUserProfile\n                            \n                            \n                                getUserProfile\n                            \n                            \n                                setProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/profile/profile.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \nchangeProfileImage(imageForm: any, subFolder: string, folderName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    imageForm\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    subFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    folderName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'users-images'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUserProfile(createProfileDto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfileImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \neditUserProfile(updateProfileDto: CreateProfileDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProfileDto\n                                    \n                                                CreateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \nsetProfileImage(imageForm: any, subFolder: string, folderName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/profile/profile.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    imageForm\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    subFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    folderName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'users-images'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ProfileModel} from '../../models/Profile/profile.model';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getUserProfile(): Observable {\n    return this._http.get(`${ApiEndpoints.ProfileEndpoints.rootProfile}/user-profile`);\n  }\n\n  createUserProfile(createProfileDto: CreateProfileDto): Observable {\n    return this._http.post\n    (`${ApiEndpoints.ProfileEndpoints.rootProfile}/create-profile`, createProfileDto);\n  }\n\n  editUserProfile(updateProfileDto: CreateProfileDto): Observable {\n    return this._http.put\n    (`${ApiEndpoints.ProfileEndpoints.rootProfile}/user-profile/edit-profile`, updateProfileDto);\n  }\n\n  setProfileImage(imageForm: any, subFolder: string, folderName = 'users-images'): Observable {\n    const url = `${ApiEndpoints.ProfileEndpoints.rootProfile}/user-profile/set-profile-image/${folderName}/${subFolder}`;\n    return this._http.post(url, imageForm);\n  }\n\n  changeProfileImage(imageForm: any, subFolder: string, folderName = 'users-images'): Observable {\n    const url = `${ApiEndpoints.ProfileEndpoints.rootProfile}/user-profile/change-profile-image/${folderName}/${subFolder}`;\n    return this._http.patch(url, imageForm);\n  }\n\n  deleteProfileImage() {\n    return this._http.delete\n    (`${ApiEndpoints.ProfileEndpoints.rootProfile}/user-profile/delete-profile-image`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileState.html":{"url":"injectables/ProfileState.html","title":"injectable - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeProfileImage\n                            \n                            \n                                clearProfileData\n                            \n                            \n                                createUserProfile\n                            \n                            \n                                deleteProfileImage\n                            \n                            \n                                editProfile\n                            \n                            \n                                fetchUserProfile\n                            \n                            \n                                    Static\n                                Profile\n                            \n                            \n                                setProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.state.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \nchangeProfileImage(ctx: StateContext, action: ChangeProfileImage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ChangeProfileImage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ChangeProfileImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearProfileData\n                        \n                        \n                    \n                \n            \n            \n                \nclearProfileData(ctx: StateContext, action: ClearProfileData)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearProfileData)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearProfileData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \ncreateUserProfile(ctx: StateContext, action: CreateUserProfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CreateUserProfile)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                CreateUserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfileImage(ctx: StateContext, action: DeleteProfileImage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(DeleteProfileImage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                DeleteProfileImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editProfile\n                        \n                        \n                    \n                \n            \n            \n                \neditProfile(ctx: StateContext, action: EditProfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(EditProfile)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                EditProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUserProfile(ctx: StateContext, action: FetchUserProfile)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchUserProfile)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchUserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            Profile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    Profile(state: ProfileStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProfileImage\n                        \n                        \n                    \n                \n            \n            \n                \nsetProfileImage(ctx: StateContext, action: SetProfileImage)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetProfileImage)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/profile/profile.state.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                SetProfileImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {ProfileActions, ProfileStateModel} from './profile.actions';\nimport {Injectable} from '@angular/core';\nimport {ProfileService} from '../../services/profile/profile.service';\nimport {tap} from 'rxjs/operators';\nimport {ProfileModel} from '../../models/Profile/profile.model';\nimport FetchUserProfile = ProfileActions.FetchUserProfile;\nimport EditProfile = ProfileActions.EditProfile;\nimport SetProfileImage = ProfileActions.SetProfileImage;\nimport ChangeProfileImage = ProfileActions.ChangeProfileImage;\nimport DeleteProfileImage = ProfileActions.DeleteProfileImage;\nimport ClearProfileData = ProfileActions.ClearProfileData;\nimport {SetUserProfile} from '../auth/auth-actions';\nimport CreateUserProfile = ProfileActions.CreateUserProfile;\n\n\n@State({\n  name: 'profile',\n  defaults: {\n    profile: null\n  }\n})\n@Injectable()\nexport class ProfileState {\n  constructor(private profileService: ProfileService, private store: Store) {\n  }\n\n  @Selector()\n  static Profile(state: ProfileStateModel) {\n    return state.profile;\n  }\n\n  @Action(CreateUserProfile)\n  createUserProfile(ctx: StateContext, action: CreateUserProfile) {\n    return this.profileService.createUserProfile(action.createProfileDto).pipe(\n      tap((profile: ProfileModel) => {\n        ctx.setState({\n          profile\n        });\n        this.store.dispatch(new SetUserProfile(profile.id));\n      })\n    );\n  }\n\n  @Action(ClearProfileData)\n  clearProfileData(ctx: StateContext, action: ClearProfileData) {\n    ctx.setState({\n      profile: null\n    });\n  }\n\n  @Action(EditProfile)\n  editProfile(ctx: StateContext, action: EditProfile) {\n    return this.profileService.editUserProfile(action.updateProfileDto).pipe(\n      tap((profile: ProfileModel) => {\n        ctx.patchState({\n          profile\n        });\n      })\n    );\n  }\n\n  @Action(FetchUserProfile)\n  fetchUserProfile(ctx: StateContext, action: FetchUserProfile) {\n    return this.profileService.getUserProfile().pipe(\n      tap((profile: ProfileModel) => {\n        ctx.setState({\n          profile\n        });\n      })\n    );\n  }\n\n  @Action(SetProfileImage)\n  setProfileImage(ctx: StateContext, action: SetProfileImage) {\n    return this.profileService.setProfileImage(action.imageForm, action.subFolder).pipe(\n      tap((profile: ProfileModel) => {\n        ctx.patchState({\n          profile\n        });\n      })\n    );\n  }\n\n  @Action(ChangeProfileImage)\n  changeProfileImage(ctx: StateContext, action: ChangeProfileImage) {\n    return this.profileService.changeProfileImage(action.imageForm, action.subFolder).pipe(\n      tap((profile: ProfileModel) => {\n        ctx.patchState({\n          profile\n        });\n      })\n    );\n  }\n\n  @Action(DeleteProfileImage)\n  deleteProfileImage(ctx: StateContext, action: DeleteProfileImage) {\n    return this.profileService.deleteProfileImage().pipe(\n      tap((profile: ProfileModel) => {\n        ctx.patchState({\n          profile\n        });\n      })\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileStateModel.html":{"url":"interfaces/ProfileStateModel.html","title":"interface - ProfileStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProfileStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        profile\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        profile\n                                    \n                                \n                                \n                                    \n                                        profile:         ProfileModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProfileModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PushInvoice.html":{"url":"classes/PushInvoice.html","title":"class - PushInvoice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PushInvoice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/invoice/invoice.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                invoice\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(invoice: InvoiceModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/invoice/invoice.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        invoice\n                                                  \n                                                        \n                                                                        InvoiceModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            invoice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InvoiceModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Invoice] Push Invoice'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/invoice/invoice.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {InvoiceModel} from '../../models/Invoice/invoice.model';\n\nexport interface InvoiceStateModel {\n  invoices: InvoiceModel[];\n}\n\nexport namespace InvoiceActions {\n\n  export class FetchUserInvoices {\n    static readonly type = '[Invoice] Fetch User Invoices';\n\n    constructor() {\n    }\n  }\n\n  export class PushInvoice {\n    static readonly type = '[Invoice] Push Invoice';\n\n    constructor(public invoice: InvoiceModel) {\n    }\n  }\n\n  export class FetchInvoiceById {\n    static readonly type = '[Invoice] Fetch Invoice By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearInvoicesFromStorage {\n    static readonly type = '[Invoice] Clear Invoices From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PushOrder.html":{"url":"classes/PushOrder.html","title":"class - PushOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PushOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                order\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(order: OrderModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        order\n                                                  \n                                                        \n                                                                        OrderModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Push Order'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PushPayment.html":{"url":"classes/PushPayment.html","title":"class - PushPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PushPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payment\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payment: PaymentModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payment\n                                                  \n                                                        \n                                                                        PaymentModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaymentModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Payment] Push Payment'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Register.html":{"url":"classes/Register.html","title":"class - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Register'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Username\n                                \n                                \n                                    Email\n                                \n                                \n                                    Password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, gdService: GlobalDataService, router: Router, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/register/register.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitRegister\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/register/register.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ErrorMessages()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/register/register.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/register/register.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/register/register.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Username\n                    \n                \n\n                \n                    \n                        getUsername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/register/register.component.ts:33\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Email\n                    \n                \n\n                \n                    \n                        getEmail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/register/register.component.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Password\n                    \n                \n\n                \n                    \n                        getPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/register/register.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Register} from '../../../state-management/auth/auth-actions';\nimport {CustomValidators} from 'ngx-custom-validators';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {EmailPattern} from '../../../commons/constants';\nimport {ErrorMessages} from '../../../commons/helpers/functions/error-messages';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {Store} from '@ngxs/store';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registrationForm: FormGroup;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n  errorMessages = new ErrorMessages();\n\n  constructor(private fb: FormBuilder,\n              private store: Store,\n              private gdService: GlobalDataService,\n              private router: Router,\n              public helperService: HelperService) {\n    if (gdService.IsAuthenticated()) {\n      router.navigate(['/home']);\n    }\n  }\n\n  get Username() {\n    return this.registrationForm.get('username');\n  }\n\n  get Email() {\n    return this.registrationForm.get('email');\n  }\n\n\n  get Password() {\n    return this.registrationForm.get('password');\n  }\n\n  ngOnInit() {\n    this.registrationForm = this.fb.group({\n      username: new FormControl(null,\n        [\n          Validators.required]\n      ),\n      email: new FormControl(null, [\n        Validators.required,\n        Validators.pattern(EmailPattern),\n        CustomValidators.email,\n      ]),\n      password: new FormControl(null, [\n        Validators.required\n      ])\n    });\n  }\n\n\n  submitRegister() {\n    this.helperService.showSpinner();\n    const data = {\n      username: this.registrationForm.value.username,\n      email: this.registrationForm.value.email,\n      password: this.registrationForm.value.password\n    };\n    this.store.dispatch(new Register(data)).subscribe(() => {\n      this.helperService.hideSpinner();\n      this.router.navigate(['/home']);\n    }, error => {\n      this.helperService.hideDialog();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Sign Up\n          \n        \n        \n          \n          \n            \n              \n                \n                  \n                \n                \n              \n              \n                {{errorMessages.requiredField('Username')}}\n              \n            \n            \n              \n                \n                  \n                \n                \n              \n              \n                {{errorMessages.requiredField('Email')}}\n                {{errorMessages.notValidField(\"Email\")}}\n              \n            \n            \n              \n                \n                  \n                \n                \n              \n              \n                {{errorMessages.requiredField('Password')}}\n              \n            \n            \n              Already have an account\n              \n                Sign In\n              \n            \n            \n              Register\n              \n            \n          \n          \n        \n      \n    \n  \n\n\n\n  \n    Please Wait...\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Sign Up                                                                                                                                                                                      {{errorMessages.requiredField(\\'Username\\')}}                                                                                                                                                                  {{errorMessages.requiredField(\\'Email\\')}}                {{errorMessages.notValidField(\"Email\")}}                                                                                                                                                                  {{errorMessages.requiredField(\\'Password\\')}}                                                    Already have an account                              Sign In                                                    Register                                                                        Please Wait...    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveCartItem.html":{"url":"interfaces/RemoveCartItem.html","title":"interface - RemoveCartItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RemoveCartItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/interfaces/remove-cart-item.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cartProductId\n                                \n                                \n                                        productId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cartProductId\n                                    \n                                \n                                \n                                    \n                                        cartProductId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RemoveCartItem {\n  cartProductId: number;\n  productId: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveCartProduct.html":{"url":"classes/RemoveCartProduct.html","title":"class - RemoveCartProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveCartProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                cartProductId\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartId: number, cartProductId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartProductId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Remove Cart Product'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveProductsFromCart.html":{"url":"classes/RemoveProductsFromCart.html","title":"class - RemoveProductsFromCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveProductsFromCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Remove Products From Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/auth/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                    Private\n                                newPasswordToken\n                            \n                            \n                                resetPasswordDto\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    controls\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, fb: FormBuilder, helperService: HelperService, router: Router, store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/auth/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            newPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        controls\n                    \n                \n\n                \n                    \n                        getcontrols()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/auth/reset-password/reset-password.component.ts:44\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngxs/store';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {MustMatch} from '../../../shared/validators/must-match.validator';\nimport {AuthService} from '../../../services/auth/auth.service';\nimport {HelperService} from '../../../shared/services/helper.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  resetPasswordDto: FormGroup;\n  private newPasswordToken: string;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(private authService: AuthService,\n              private fb: FormBuilder,\n              public helperService: HelperService,\n              private router: Router,\n              private store: Store,\n              private route: ActivatedRoute) {\n    route.paramMap.subscribe((params: ParamMap) => {\n      if (!params.get('newPasswordToken')) {\n        router.navigate(['/home']);\n      }\n      this.newPasswordToken = params.get('newPasswordToken');\n    });\n  }\n\n  ngOnInit(): void {\n    this.resetPasswordDto = this.fb.group({\n      newPassword: new FormControl(null, [Validators.required,\n        Validators.minLength(6)]),\n      confirmPassword: new FormControl(null, [Validators.required]),\n      newPasswordToken: new FormControl(this.newPasswordToken)\n    }, {\n      validator: MustMatch('newPassword', 'confirmPassword')\n    });\n  }\n\n  get controls() {\n    return this.resetPasswordDto.controls;\n  }\n\n\n  resetPassword() {\n    this.helperService.showSpinner();\n    this.authService.resetPassword(this.resetPasswordDto.value).subscribe(() => {\n      this.helperService.hideSpinner();\n      this.helperService.openSnackbar('Password Changed Successfully', 'Okay');\n      this.router.navigate(['/auth/login']);\n    }, error => {\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            Please Enter Your Password to reset it\n          \n          \n            \n              \n                \n                  \n                \n                \n              \n              \n                NewPassword is\n                  required\n              \n            \n\n            \n              \n                \n                  \n                \n                \n              \n              \n                ConfirmPassword is\n                  required\n                Passwords does not\n                  match!!\n              \n            \n            \n              Reset\n            \n          \n        \n      \n\n    \n  \n\n\n  \n\n\n  \n    Resetting Password...\n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Please Enter Your Password to reset it                                                                                                                                                            NewPassword is                  required                                                                                                                                                                  ConfirmPassword is                  required                Passwords does not                  match!!                                                    Reset                                                  Resetting Password...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPasswordDto.html":{"url":"classes/ResetPasswordDto.html","title":"class - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/reset-password.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                confirmPassword\n                            \n                            \n                                    Readonly\n                                currentPassword\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                newPassword\n                            \n                            \n                                    Readonly\n                                newPasswordToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            confirmPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/reset-password.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currentPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/reset-password.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/reset-password.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/reset-password.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            newPasswordToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/reset-password.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ResetPasswordDto {\n\n  readonly email: string;\n\n  readonly newPassword: string;\n\n  readonly newPasswordToken: string;\n\n  readonly currentPassword: string;\n\n  readonly confirmPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchBarComponent.html":{"url":"components/SearchBarComponent.html","title":"component - SearchBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/common/search-bar/search-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-bar\n            \n\n            \n                styleUrls\n                ./search-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                matAutocomplete\n                            \n                            \n                                search\n                            \n                            \n                                searchField\n                            \n                            \n                                selectedList\n                            \n                            \n                                selectedOptionSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setAutoCompleteList\n                            \n                            \n                                setOptionSearch\n                            \n                            \n                                submitSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawer\n                            \n                            \n                                gdService\n                            \n                            \n                                isHandset$\n                            \n                            \n                                router\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(productsService: ProductService, subCategoryService: SubCategoryService, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/common/search-bar/search-bar.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCategoryService\n                                                  \n                                                        \n                                                                        SubCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawer\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        gdService\n                    \n                \n                \n                    \n                        Type :         GlobalDataService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isHandset$\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        router\n                    \n                \n                \n                    \n                        Type :         Router\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAutoCompleteList\n                        \n                        \n                    \n                \n            \n            \n                \nsetAutoCompleteList(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOptionSearch\n                        \n                        \n                    \n                \n            \n            \n                \nsetOptionSearch(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitSearch\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('matAutocomplete', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('searchField', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedOptionSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Categories'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search-bar/search-bar.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {ProductModel} from '../../../models/Products/product.model';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {Router} from '@angular/router';\nimport {fromEvent, Observable} from 'rxjs';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport {MatAutocomplete} from '@angular/material/autocomplete';\nimport {ProductService} from '../../../services/product/product.service';\nimport {SubCategoryService} from '../../../services/category/sub-category.service';\nimport {CategoryService} from '../../../services/category/category.service';\nimport {CategoryModel} from '../../../models/Categories/category.model';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\nexport class SearchBarComponent implements OnInit {\n  search: string;\n  selectedOptionSearch: string = 'Categories';\n  selectedList: any[] = [];\n  @Input() drawer: MatSidenav;\n  @Input() isHandset$: Observable;\n\n  constructor(private productsService: ProductService, private subCategoryService: SubCategoryService,\n              private categoryService: CategoryService) {\n  }\n\n  @ViewChild('searchField', {static: true}) searchField: ElementRef;\n  @ViewChild('matAutocomplete', {static: true}) matAutocomplete: MatAutocomplete;\n\n  @Input() gdService: GlobalDataService;\n  @Input() router: Router;\n\n  ngOnInit(): void {\n    fromEvent(this.searchField.nativeElement, 'keyup')\n      .pipe(\n        // get value\n        map((event: any) => {\n          return event.target.value;\n        }),\n        debounceTime(200)\n        , distinctUntilChanged()\n      ).subscribe((value: string) => {\n      if (value && value.length > 0) {\n        this.setAutoCompleteList(value);\n      }\n    });\n  }\n\n  submitSearch() {\n    if (this.drawer) {\n      this.drawer.close();\n    }\n    this.router.navigate([`/search/${this.search}/`, this.selectedOptionSearch], {\n      queryParams: {\n        type: this.selectedOptionSearch\n      }\n    });\n  }\n\n  setOptionSearch(value: string) {\n    this.selectedOptionSearch = value;\n    if (this.search && this.search.length > 0) {\n      this.setAutoCompleteList(this.search);\n    }\n  }\n\n  setAutoCompleteList(value?: string) {\n    this.selectedList = [];\n    switch (this.selectedOptionSearch) {\n      case 'Categories': {\n        this.categoryService.searchByMatchingName(value).subscribe((data: CategoryModel[]) => {\n          for (let i = 0; i  {\n          for (let i = 0; i  {\n          for (let i = 0; i \n    \n\n    \n        \n  \n    \n      {{selectedOptionSearch}}\n      \n      \n      \n        Categories\n        Sub Categories\n        Products\n      \n    \n  \n  \n  \n    \n      {{option}}\n    \n  \n  \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./search-bar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{selectedOptionSearch}}                          Categories        Sub Categories        Products                          {{option}}                              '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/common/search/search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriesArray\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                name\n                            \n                            \n                                productsArray\n                            \n                            \n                                showSpinner\n                            \n                            \n                                subCategoriesArray\n                            \n                            \n                                take\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToTop\n                            \n                            \n                                loadMore\n                            \n                            \n                                loadMoreSearch\n                            \n                            \n                                navigateToCategoryDetails\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setData\n                            \n                            \n                                showLoadMore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, helperService: HelperService, gdService: GlobalDataService, route: ActivatedRoute, searchService: SearchService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/common/search/search.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToTop\n                        \n                        \n                    \n                \n            \n            \n                \nbackToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMore\n                        \n                        \n                    \n                \n            \n            \n                \nloadMore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMoreSearch\n                        \n                        \n                    \n                \n            \n            \n                \nloadMoreSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToCategoryDetails\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToCategoryDetails(category: CategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                CategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(name: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showLoadMore\n                        \n                        \n                    \n                \n            \n            \n                \nshowLoadMore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/common/search/search.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoriesArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CategoryModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategoriesArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubCategoryModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            take\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/common/search/search.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {SearchService} from '../../../services/search/search.service';\nimport {CategoryModel} from '../../../models/Categories/category.model';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\nimport {ProductModel} from '../../../models/Products/product.model';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  categoriesArray: CategoryModel[];\n  subCategoriesArray: SubCategoryModel[];\n  productsArray: ProductModel[];\n  take: number = 10;\n  name: string;\n  type: string;\n  showSpinner = false;\n\n  constructor(private router: Router,\n              public helperService: HelperService,\n              public gdService: GlobalDataService,\n              private route: ActivatedRoute,\n              private searchService: SearchService) {\n    route.paramMap.subscribe((params: ParamMap) => {\n      this.productsArray = null;\n      this.categoriesArray = null;\n      this.subCategoriesArray = null;\n      const name = params.get('name');\n      const type = params.get('type');\n      if (name && type) {\n        this.name = name;\n        this.type = type;\n        this.setData(name, type);\n      } else {\n        helperService.hideSpinner();\n        router.navigate(['/home']);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  setData(name: string, type: string) {\n    this.helperService.showSpinner();\n    this.searchService.searchByName(name, type, this.take).subscribe((data) => {\n        switch (type) {\n          case 'Categories': {\n            this.categoriesArray = data;\n            break;\n          }\n          case 'Sub Categories': {\n            this.subCategoriesArray = data;\n            break;\n          }\n          case 'Products': {\n            this.productsArray = data;\n            break;\n          }\n        }\n        this.helperService.hideSpinner();\n      }\n    );\n  }\n\n  navigateToCategoryDetails(category: CategoryModel) {\n    this.router.navigate(['/categories', category.id], {\n      queryParams: {\n        name: category.name\n      }\n    });\n  }\n\n\n  backToTop() {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }\n\n  loadMore() {\n    if (this.categoriesArray) {\n      this.take = this.categoriesArray.length + 5;\n      this.loadMoreSearch();\n    } else if (this.subCategoriesArray) {\n      this.take = this.subCategoriesArray.length + 5;\n      this.loadMoreSearch();\n    } else if (this.productsArray) {\n      this.take = this.productsArray.length + 5;\n      this.loadMoreSearch();\n    }\n  }\n\n  loadMoreSearch() {\n    this.showSpinner = true;\n    this.searchService.searchByName(this.name, this.type, this.take).subscribe((data) => {\n        switch (this.type) {\n          case 'Categories': {\n            this.categoriesArray = data;\n            break;\n          }\n          case 'Sub Categories': {\n            this.subCategoriesArray = data;\n            break;\n          }\n          case 'Products': {\n            this.productsArray = data;\n            break;\n          }\n        }\n        this.showSpinner = false;\n      }\n    );\n  }\n\n  showLoadMore() {\n    return (this.categoriesArray && this.categoriesArray.length > 0)\n      || (this.subCategoriesArray && this.subCategoriesArray.length > 0)\n      || (this.productsArray && this.productsArray.length > 0);\n  }\n}\n\n    \n\n    \n        \n  \n    Searching...\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n            \n            You have searched for: \n             {{name}}\n          \n        \n      \n      \n        \n          There are no result for what you searched\n        \n      \n      \n        \n          \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{category.name}}\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n            \n            You have searched for: \n             {{name}}\n          \n        \n      \n      \n        \n          There are no result for what you searched\n        \n      \n      \n        \n          \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{subCategory.name}}\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              \n            \n            You have searched for: \n             {{name}}\n          \n        \n      \n      \n        \n          There are no result for what you searched\n        \n      \n      \n        \n          \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{product.name}}\n                \n                  ${{product.currentPrice}}\n                  \n                    $36.99\n                  \n                \n                Add to cart\n                \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n      \n      Load More\n    \n    \n      Back to Top &nbsp; \n    \n  \n\n\n    \n\n    \n                \n                    ./search.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Searching...                                                                                  You have searched for:              {{name}}                                                There are no result for what you searched                                                                                                                                                                                                                                        {{category.name}}                                                                                                                                        You have searched for:              {{name}}                                                There are no result for what you searched                                                                                                                                                                                                                                        {{subCategory.name}}                                                                                                                                        You have searched for:              {{name}}                                                There are no result for what you searched                                                                                                                                                                                                                                        {{product.name}}                                  ${{product.currentPrice}}                                      $36.99                                                  Add to cart                                                                                                                                            Load More              Back to Top         '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search/search.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                searchByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search/search.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchByName\n                        \n                        \n                    \n                \n            \n            \n                \nsearchByName(name: string, type: string, take: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/search/search.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    take\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  constructor(private http: HttpClient) {\n  }\n\n  searchByName(name: string, type: string, take: number): Observable {\n    let params = new HttpParams();\n    params = params.append('take', take.toString());\n    return this.http.get(`${ApiEndpoints.Search.searchByName}/${name}/${type}`, {\n      params\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCustomerToken.html":{"url":"classes/SetCustomerToken.html","title":"class - SetCustomerToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCustomerToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/payment/payment.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                customerId\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/payment/payment.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            customerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Payment] Set Customer Token'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/payment/payment.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaymentModel} from '../../models/Payments/payment.model';\n\nexport interface PaymentStateModel {\n  payments: PaymentModel[];\n}\n\nexport namespace PaymentActions {\n\n  export class FetchUserPayments {\n    static readonly type = '[Payment] Fetch User Payments';\n\n    constructor() {\n    }\n  }\n\n  export class PushPayment {\n    static readonly type = '[Payment] Push Payment';\n\n    constructor(public payment: PaymentModel) {\n    }\n  }\n\n  export class FetchPaymentById {\n    static readonly type = '[Payment] Fetch Payment By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class SetCustomerToken {\n    static readonly type = '[Payment] Set Customer Token';\n\n    constructor(public customerId: string) {\n    }\n  }\n\n  export class ClearPaymentsFromStorage {\n    static readonly type = '[Payment] Clear Payments From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetProfileImage.html":{"url":"classes/SetProfileImage.html","title":"class - SetProfileImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetProfileImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/profile/profile.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                imageForm\n                            \n                            \n                                    Public\n                                subFolder\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imageForm: any, subFolder: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/profile/profile.actions.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageForm\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subFolder\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            subFolder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Profile] Set Profile Image'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/profile/profile.actions.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProfileModel} from '../../models/Profile/profile.model';\nimport {CreateProfileDto} from '../../commons/public-dto/create-profile.dto';\n\nexport interface ProfileStateModel {\n  profile: ProfileModel;\n}\n\nexport namespace ProfileActions {\n  export class CreateUserProfile {\n    static readonly type = '[Profile] Create User Profile';\n\n    constructor(public createProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class FetchUserProfile {\n    static readonly type = '[Profile] Fetch User Profile';\n\n    constructor() {\n    }\n  }\n\n  export class EditProfile {\n    static readonly type = '[Profile] Edit Profile';\n\n    constructor(public updateProfileDto: CreateProfileDto) {\n    }\n  }\n\n  export class SetProfileImage {\n    static readonly type = '[Profile] Set Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class ChangeProfileImage {\n    static readonly type = '[Profile] Change Profile Image';\n\n    constructor(public imageForm: any, public subFolder: string) {\n    }\n  }\n\n  export class DeleteProfileImage {\n    static readonly type = '[Profile] Delete Profile Image';\n\n    constructor() {\n    }\n  }\n\n  export class ClearProfileData {\n    static readonly type = '[Profile] Clear Profile Data';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUserCart.html":{"url":"classes/SetUserCart.html","title":"class - SetUserCart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserCart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Set User Cart'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:56\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetUserProfile.html":{"url":"classes/SetUserProfile.html","title":"class - SetUserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                profileId\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileId: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profileId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Set User Profile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nAddContactsComponent\n\nAddContactsComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nAddContactsComponent->SharedModule\n\n\n\n\n\nAddToCartComponent\n\nAddToCartComponent\n\nSharedModule -->\n\nAddToCartComponent->SharedModule\n\n\n\n\n\nInvalidCredentialsComponent\n\nInvalidCredentialsComponent\n\nSharedModule -->\n\nInvalidCredentialsComponent->SharedModule\n\n\n\n\n\nLoginFirstComponent\n\nLoginFirstComponent\n\nSharedModule -->\n\nLoginFirstComponent->SharedModule\n\n\n\n\n\nShowErrorDialogComponent\n\nShowErrorDialogComponent\n\nSharedModule -->\n\nShowErrorDialogComponent->SharedModule\n\n\n\n\n\nAddContactsComponent \n\nAddContactsComponent \n\nAddContactsComponent  -->\n\nSharedModule->AddContactsComponent \n\n\n\n\n\nAddToCartComponent \n\nAddToCartComponent \n\nAddToCartComponent  -->\n\nSharedModule->AddToCartComponent \n\n\n\n\n\nFileModule \n\nFileModule \n\nFileModule  -->\n\nSharedModule->FileModule \n\n\n\n\n\nInvalidCredentialsComponent \n\nInvalidCredentialsComponent \n\nInvalidCredentialsComponent  -->\n\nSharedModule->InvalidCredentialsComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMdbModule \n\nMdbModule \n\nMdbModule  -->\n\nSharedModule->MdbModule \n\n\n\n\n\nNgxModule \n\nNgxModule \n\nNgxModule  -->\n\nSharedModule->NgxModule \n\n\n\n\n\nShowErrorDialogComponent \n\nShowErrorDialogComponent \n\nShowErrorDialogComponent  -->\n\nSharedModule->ShowErrorDialogComponent \n\n\n\n\n\nFileModule\n\nFileModule\n\nSharedModule -->\n\nFileModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nMdbModule\n\nMdbModule\n\nSharedModule -->\n\nMdbModule->SharedModule\n\n\n\n\n\nNgxModule\n\nNgxModule\n\nSharedModule -->\n\nNgxModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared-global.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddContactsComponent\n                        \n                        \n                            AddToCartComponent\n                        \n                        \n                            InvalidCredentialsComponent\n                        \n                        \n                            LoginFirstComponent\n                        \n                        \n                            ShowErrorDialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            MdbModule\n                        \n                        \n                            NgxModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddContactsComponent\n                        \n                        \n                            AddToCartComponent\n                        \n                        \n                            FileModule\n                        \n                        \n                            InvalidCredentialsComponent\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            MdbModule\n                        \n                        \n                            NgxModule\n                        \n                        \n                            ShowErrorDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomFormsModule} from 'ngx-custom-validators';\nimport {NgbDropdownModule, NgbModule, NgbPaginationModule} from '@ng-bootstrap/ng-bootstrap';\nimport {InvalidCredentialsComponent} from './components/invalid-credentials/invalid-credentials.component';\nimport {ShowErrorDialogComponent} from './components/show-error-dialog/show-error-dialog.component';\nimport {MaterialModule} from './modules/material.module';\nimport {NgxModule} from './modules/ngx.module';\nimport {FileModule} from './modules/file.module';\nimport {AddContactsComponent} from './components/add-contacts/add-contacts.component';\nimport {MdbModule} from './modules/mdb.module';\nimport {LoginFirstComponent} from './components/login-first/login-first.component';\nimport {AddToCartComponent} from './components/products/add-to-cart/add-to-cart.component';\nimport {RxReactiveFormsModule} from '@rxweb/reactive-form-validators';\n\n@NgModule({\n  declarations: [\n    InvalidCredentialsComponent,\n    ShowErrorDialogComponent,\n    AddContactsComponent,\n    LoginFirstComponent,\n    AddToCartComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FileModule,\n    NgxModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbModule,\n    CustomFormsModule,\n    NgbDropdownModule,\n    NgbPaginationModule,\n    MdbModule,\n    RxReactiveFormsModule.forRoot()\n  ],\n  exports: [\n    MaterialModule,\n    NgbModule,\n    FileModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxModule,\n    InvalidCredentialsComponent,\n    ShowErrorDialogComponent,\n    AddToCartComponent,\n    CustomFormsModule,\n    NgbDropdownModule,\n    NgbPaginationModule,\n    AddContactsComponent,\n    MdbModule,\n    RxReactiveFormsModule\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopComponent.html":{"url":"components/ShopComponent.html","title":"component - ShopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/shop/shop/shop.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shop\n            \n\n            \n                styleUrls\n                ./shop.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                paginator\n                            \n                            \n                                products\n                            \n                            \n                                productsCustomFilterDto\n                            \n                            \n                                scId\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedTag\n                            \n                            \n                                showFilter\n                            \n                            \n                                showSpinner\n                            \n                            \n                                startSlice\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                subCategory\n                            \n                            \n                                subCategoryTag\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToTop\n                            \n                            \n                                fetchBySubCategoryName\n                            \n                            \n                                fetchByTagName\n                            \n                            \n                                getAll\n                            \n                            \n                                loadCustomProducts\n                            \n                            \n                                loadMore\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubCategorySelect\n                            \n                            \n                                refreshProducts\n                            \n                            \n                                resetSlice\n                            \n                            \n                                setRange1\n                            \n                            \n                                setRange2\n                            \n                            \n                                setSkipLength\n                            \n                            \n                                setTakeLength\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, store: Store, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/shop/shop/shop.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            backToTop\n                        \n                        \n                    \n                \n            \n            \n                \nbackToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchBySubCategoryName\n                        \n                        \n                    \n                \n            \n            \n                \nfetchBySubCategoryName(subCategory: SubCategoryModel, slice: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slice\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchByTagName\n                        \n                        \n                    \n                \n            \n            \n                \nfetchByTagName(subCategoryTag: SubCategoryTagModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategoryTag\n                                    \n                                                SubCategoryTagModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadCustomProducts\n                        \n                        \n                    \n                \n            \n            \n                \nloadCustomProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadMore\n                        \n                        \n                    \n                \n            \n            \n                \nloadMore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubCategorySelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSubCategorySelect(subCategory: SubCategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            refreshProducts\n                        \n                        \n                    \n                \n            \n            \n                \nrefreshProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetSlice\n                        \n                        \n                    \n                \n            \n            \n                \nresetSlice(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRange1\n                        \n                        \n                    \n                \n            \n            \n                \nsetRange1(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRange2\n                        \n                        \n                    \n                \n            \n            \n                \nsetRange2(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSkipLength\n                        \n                        \n                    \n                \n            \n            \n                \nsetSkipLength(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTakeLength\n                        \n                        \n                    \n                \n            \n            \n                \nsetTakeLength(length: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/shop/shop/shop.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    length\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paginator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatPaginator\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatPaginator, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsCustomFilterDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductsCustomFilterDto\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    range1: null,\n    range2: null,\n    take: null,\n    skip: null,\n    stock: null\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startSlice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCategoryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategoryTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCategoryTagModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/shop/shop/shop.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {Store} from '@ngxs/store';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {ProductActions} from '../../../state-management/product/product.actions';\nimport {SubCategoryActions} from '../../../state-management/sub-category/sub-category.actions';\nimport FetchAllSubCategories = SubCategoryActions.FetchAllSubCategories;\nimport FetchShopProducts = ProductActions.FetchShopProducts;\nimport {MatPaginator} from '@angular/material/paginator';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\nimport {ProductModel} from '../../../models/Products/product.model';\nimport FetchCustomProducts = ProductActions.FetchCustomProducts;\nimport {ProductsCustomFilterDto} from '../../../commons/public-dto/products-custom-filter.dto';\nimport {SubCategoryTagModel} from '../../../models/Categories/sub-category-tag.model';\nimport {TagActions} from '../../../state-management/tag/tag.actions';\nimport FetchSubCategoriesTags = TagActions.FetchSubCategoriesTags;\nimport FetchSubCategoriesByTagName = SubCategoryActions.FetchSubCategoriesByTagName;\n\nexport enum LoadType {\n  TAG = 'TAG',\n  SHOP_PRODUCTS = 'SHOP_PRODUCTS',\n  SUB_CATEGORY = 'SUBCATEGORY',\n  CUSTOM = 'CUSTOM'\n}\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css']\n})\nexport class ShopComponent implements OnInit {\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  subCategory: SubCategoryModel;\n  showSpinner = false;\n  showFilter = false;\n  products: ProductModel[] = [];\n  subCategoryTag: SubCategoryTagModel;\n  startSlice = 5;\n  selectedTag: number;\n  isAllSelected = true;\n  scId: number;\n  searchTerm: string;\n  productsCustomFilterDto: ProductsCustomFilterDto = {\n    range1: null,\n    range2: null,\n    take: null,\n    skip: null,\n    stock: null\n  };\n\n  constructor(public helperService: HelperService,\n              public store: Store,\n              public gdService: GlobalDataService) {\n\n  }\n\n  onSubCategorySelect(subCategory: SubCategoryModel) {\n    this.scId = subCategory.id;\n    localStorage.setItem('loadType', LoadType.SUB_CATEGORY);\n  }\n\n  setRange1(value: number) {\n    this.productsCustomFilterDto.range1 = value;\n  }\n\n  setRange2(value: number) {\n    this.productsCustomFilterDto.range2 = value;\n  }\n\n  ngOnInit(): void {\n    if (!this.gdService.ShopProducts) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchShopProducts(10)).subscribe(() => {\n        this.helperService.hideSpinner();\n        this.refreshProducts();\n      });\n    }\n    if (!this.gdService.SubCategories) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchAllSubCategories()).subscribe(() => {\n        this.helperService.hideSpinner();\n      });\n    }\n    if (!this.gdService.SubCategoriesTags) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchSubCategoriesTags()).subscribe(() => {\n        this.helperService.hideSpinner();\n      });\n    }\n    localStorage.setItem('loadType', LoadType.SHOP_PRODUCTS);\n    this.refreshProducts();\n  }\n\n  refreshProducts() {\n    this.products = this.gdService.ShopProducts;\n  }\n\n  backToTop() {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }\n\n  fetchByTagName(subCategoryTag: SubCategoryTagModel) {\n    localStorage.setItem('loadType', LoadType.TAG);\n    this.selectedTag = subCategoryTag.id;\n    this.subCategoryTag = subCategoryTag;\n    this.isAllSelected = null;\n    this.helperService.showSpinner();\n    this.store.dispatch(new FetchSubCategoriesByTagName(subCategoryTag.name, this.startSlice)).subscribe(() => {\n      this.refreshProducts();\n      this.helperService.hideSpinner();\n    });\n  }\n\n  getAll() {\n    this.selectedTag = null;\n    this.isAllSelected = true;\n    localStorage.setItem('loadType', LoadType.SHOP_PRODUCTS);\n    this.helperService.showSpinner();\n    this.store.dispatch(new FetchShopProducts(10)).subscribe(() => {\n      this.helperService.hideSpinner();\n      this.refreshProducts();\n    });\n  }\n\n\n  loadCustomProducts() {\n    this.setTakeLength(10);\n    localStorage.setItem('loadType', LoadType.CUSTOM);\n    this.showFilter = true;\n    this.store.dispatch(new FetchCustomProducts(this.productsCustomFilterDto)).subscribe(() => {\n      this.refreshProducts();\n      this.showFilter = false;\n    });\n  }\n\n\n  fetchBySubCategoryName(subCategory: SubCategoryModel, slice: number) {\n    this.subCategory = Object.assign({}, subCategory);\n    this.products = [];\n    this.products = [].concat(subCategory.products.slice(0, slice));\n    this.showSpinner = false;\n  }\n\n  loadMore() {\n    const type = localStorage.getItem('loadType');\n    this.showSpinner = true;\n    switch (type) {\n      case LoadType.SHOP_PRODUCTS: {\n        this.resetSlice(5);\n        this.store.dispatch(new FetchShopProducts(this.products.length + 10)).subscribe(() => {\n          this.refreshProducts();\n          this.showSpinner = false;\n        });\n        break;\n      }\n      case LoadType.CUSTOM: {\n        this.productsCustomFilterDto.take = this.products.length + 10;\n        this.resetSlice(5);\n        this.setSkipLength(this.products.length);\n        this.store.dispatch(new FetchCustomProducts(this.productsCustomFilterDto)).subscribe(() => {\n          this.refreshProducts();\n          this.showSpinner = false;\n        });\n        break;\n      }\n      case LoadType.TAG: {\n        this.startSlice = this.startSlice + 5;\n        this.store.dispatch(new FetchSubCategoriesByTagName(this.subCategoryTag.name, this.startSlice)).subscribe(() => {\n          this.refreshProducts();\n          this.showSpinner = false;\n        });\n        break;\n      }\n      case LoadType.SUB_CATEGORY: {\n        this.resetSlice(5);\n        setTimeout(() => {\n          this.fetchBySubCategoryName(this.subCategory, this.products.length + 5);\n        }, 1000);\n        break;\n      }\n    }\n  }\n\n  resetSlice(length: number) {\n    this.startSlice = length;\n  }\n\n  setSkipLength(length: number) {\n    this.productsCustomFilterDto.skip = length;\n  }\n\n  setTakeLength(length: number) {\n    this.productsCustomFilterDto.take = length;\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        General Filter\n      \n      \n        \n          \n            Sub Categories\n          \n        \n        \n          \n            \n              {{sc.name}}\n            \n          \n        \n        \n        \n          \n            Select a Tag\n          \n        \n        \n          \n            \n              All\n            \n          \n          \n            \n              {{tag.name}}\n            \n          \n        \n        \n        Custom Filter\n        \n        \n          \n            Price\n          \n        \n        \n          \n            Min Range: {{productsCustomFilterDto.range1 ? productsCustomFilterDto.range1 : 0}}\n            \n          \n        \n        \n          \n            Max Range: {{productsCustomFilterDto.range2 ? productsCustomFilterDto.range2 : 0}}\n            \n          \n        \n        \n        \n          \n            \n              Availability\n              \n                None\n                {{state}}\n              \n            \n          \n        \n        \n          \n            \n              \n            \n            Filter &nbsp; \n          \n        \n      \n    \n  \n  \n    \n      \n        \n          Search for product\n          \n        \n        \n          \n          \n            \n            \n              \n                \n                  \n                  \n                    \n                      \n                      \n                    \n                  \n                \n                \n                  {{product.name}}\n                  \n                     ${{product.currentPrice}}\n                    \n                    \n                      ${{product.previousPrice}}\n                    \n                  \n                  \n                  \n\n                  Add to cart\n                  \n                  \n                    \n                  \n                \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n            Load More\n          \n          \n            Back to Top &nbsp; \n          \n        \n      \n    \n  \n\n\n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./shop.component.css\n                \n                .example-full-width {\n  width: 100%;\n}\ntable {\n  width: 100%;\n}\nmat-radio-button {\n  margin-left: 4px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    General Filter                                          Sub Categories                                                              {{sc.name}}                                                                    Select a Tag                                                              All                                                          {{tag.name}}                                              Custom Filter                                      Price                                                Min Range: {{productsCustomFilterDto.range1 ? productsCustomFilterDto.range1 : 0}}                                                            Max Range: {{productsCustomFilterDto.range2 ? productsCustomFilterDto.range2 : 0}}                                                                                  Availability                              None                {{state}}                                                                                                                Filter                                                               Search for product                                                                                                                                                                                                                                                                                                {{product.name}}                                       ${{product.currentPrice}}                                                              ${{product.previousPrice}}                                                                                            Add to cart                                                                                                                                                                                                            Load More                                Back to Top                                       Loading...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopLayoutComponent.html":{"url":"components/ShopLayoutComponent.html","title":"component - ShopLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShopLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/shop-layout/shop-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shop-layout\n            \n\n            \n                styleUrls\n                ./shop-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./shop-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/shop-layout/shop-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/shop-layout/shop-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop-layout',\n  templateUrl: './shop-layout.component.html',\n  styleUrls: ['./shop-layout.component.css']\n})\nexport class ShopLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./shop-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShopLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ShopLayoutModule.html":{"url":"modules/ShopLayoutModule.html","title":"module - ShopLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    ShopLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ShopLayoutModule\n\n\n\ncluster_ShopLayoutModule_declarations\n\n\n\ncluster_ShopLayoutModule_imports\n\n\n\n\nShopComponent\n\nShopComponent\n\n\n\nShopLayoutModule\n\nShopLayoutModule\n\nShopLayoutModule -->\n\nShopComponent->ShopLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nShopLayoutModule -->\n\nSharedModule->ShopLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/shop-layout/shop-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ShopComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ShopComponent} from '../../pages/shop/shop/shop.component';\nimport {RouterModule} from '@angular/router';\nimport {ShopLayoutRoutes} from './shop-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {PipesModule} from '../../commons/pipes/pipes.module';\n\n\n@NgModule({\n  declarations: [ShopComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ShopLayoutRoutes),\n    SharedModule,\n    PipesModule\n  ]\n})\nexport class ShopLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowErrorDialogComponent.html":{"url":"components/ShowErrorDialogComponent.html","title":"component - ShowErrorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShowErrorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/show-error-dialog/show-error-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-error-dialog\n            \n\n            \n                styleUrls\n                ./show-error-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./show-error-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                errorName\n                            \n                            \n                                    Public\n                                helperService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/show-error-dialog/show-error-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {HelperService} from '../../services/helper.service';\n\n@Component({\n  selector: 'app-show-error-dialog',\n  templateUrl: './show-error-dialog.component.html',\n  styleUrls: ['./show-error-dialog.component.css']\n})\nexport class ShowErrorDialogComponent implements OnInit {\n  errorName: string;\n  errorMessage: string;\n\n  @Input() error: any;\n\n  constructor(public helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n    if ([403].indexOf(this.error.statusCode) !== -1) {\n      this.errorName = 'Forbidden Resource';\n      this.errorMessage = 'This Resource cannot be access without permissions (Forbidden)';\n    } else if ([401].indexOf(this.error.statusCode) !== -1) {\n      this.errorName = 'Unauthorized!!';\n      this.errorMessage = 'You\\'re not authorized, please login to have the access';\n    } else if ([400, 404, 409].indexOf(this.error.statusCode) !== -1) {\n      this.errorName = this.error.error;\n      this.errorMessage = this.error.message;\n    } else if ([500].indexOf(this.error.statusCode) !== -1) {\n      this.errorName = 'An strange error occurred!';\n      this.errorMessage = 'please come back later while the support team fix this issue';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{errorName}}\n  \n  \n    &times;\n  \n\n\n  \n    {{errorMessage}}\n  \n  \n    Close\n  \n\n\n    \n\n    \n                \n                    ./show-error-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{errorName}}        ×        {{errorMessage}}        Close  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShowErrorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/sidebar/sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToSubCategory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService, store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isHandset$\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToSubCategory(category: CategoryModel, subCategory: SubCategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sidebar/sidebar.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                CategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/sidebar/sidebar.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/sidebar/sidebar.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\nimport {Store} from '@ngxs/store';\nimport {CategoryActions} from '../../state-management/category/category.actions';\nimport FetchAllCategories = CategoryActions.FetchAllCategories;\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {CategoryModel} from '../../models/Categories/category.model';\nimport {SubCategoryModel} from '../../models/Categories/sub-category.model';\nimport {Router} from '@angular/router';\nimport { Observable} from 'rxjs';\nimport {TagActions} from '../../state-management/tag/tag.actions';\nimport FetchSubCategoriesTags = TagActions.FetchSubCategoriesTags;\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  constructor(public gdService: GlobalDataService, public store: Store,\n              private router: Router) {\n  }\n\n  @Input() sidenav: MatSidenav;\n  @Input() isHandset$: Observable;\n\n  ngOnInit(): void {\n    if (!this.gdService.Categories) {\n      this.store.dispatch(new FetchAllCategories()).subscribe(() => {\n      });\n    }\n    if (!this.gdService.SubCategories) {\n      this.store.dispatch(new FetchSubCategoriesTags()).subscribe(() => {\n      });\n    }\n\n  }\n\n  navigateToSubCategory(category: CategoryModel, subCategory: SubCategoryModel) {\n    this.router.navigate([`/sub-categories/${category.id}`, subCategory.id], {\n      queryParams: {\n        Department: category.name,\n        subCategory: subCategory.name\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Categories\n  \n  \n    \n      {{category.name}}\n      &nbsp; &nbsp;\n      \n    \n    \n      \n        \n          {{subC.name}}\n        \n      \n\n    \n  \n\n\n\n  \n    Tags\n  \n  \n    \n      {{tag.name}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                .example-spacer {\n  flex: 1 1 auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Categories              {{category.name}}                                               {{subC.name}}                          Tags              {{tag.name}}      '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StripeCheckoutComponent.html":{"url":"components/StripeCheckoutComponent.html","title":"component - StripeCheckoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StripeCheckoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stripe-checkout\n            \n\n            \n                styleUrls\n                ./stripe-checkout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stripe-checkout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                card\n                            \n                            \n                                createPaymentDto\n                            \n                            \n                                elements\n                            \n                            \n                                elementsOptions\n                            \n                            \n                                errorOnCharge\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buy\n                            \n                            \n                                clearError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                createOrderDto\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    StripeData\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, helperService: HelperService, cartService: CartService, gdService: GlobalDataService, store: Store, router: Router, stripeService: StripeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stripeService\n                                                  \n                                                        \n                                                                    StripeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        createOrderDto\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buy\n                        \n                        \n                    \n                \n            \n            \n                \nbuy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearError\n                        \n                        \n                    \n                \n            \n            \n                \nclearError()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            card\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createPaymentDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StripeElements\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            elementsOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StripeElementsOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    locale: 'en'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorOnCharge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    message: null,\n    type: null,\n    code: null\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        StripeData\n                    \n                \n\n                \n                    \n                        getStripeData()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stripe-integration/components/stripe-checkout/stripe-checkout.component.ts:85\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {StripeService} from 'ngx-stripe';\nimport {\n  StripeElementsOptions,\n  StripeElements, Token, StripeError\n} from '@stripe/stripe-js';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {HelperService} from '../../../../shared/services/helper.service';\nimport {PaymentMethod} from '../../../../commons/enums/payment-method.enum';\nimport {GlobalDataService} from '../../../../shared/services/global-data.service';\nimport {CreatePaymentDto} from '../../../../commons/public-dto/create-payment.dto';\nimport {Store} from '@ngxs/store';\nimport {CartActions} from '../../../../state-management/cart/cart.actions';\nimport CheckoutOnCart = CartActions.CheckoutOnCart;\nimport {CartService} from '../../../../services/cart/cart.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-stripe-checkout',\n  templateUrl: './stripe-checkout.component.html',\n  styleUrls: ['./stripe-checkout.component.css']\n})\nexport class StripeCheckoutComponent implements OnInit {\n  @Input() createOrderDto: FormGroup;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n  elements: StripeElements;\n  card: any;\n  state: string;\n  elementsOptions: StripeElementsOptions = {\n    locale: 'en'\n  };\n  createPaymentDto: FormGroup;\n  errorOnCharge = {\n    message: null,\n    type: null,\n    code: null\n  };\n\n  constructor(private fb: FormBuilder, public helperService: HelperService,\n              private cartService: CartService,\n              private gdService: GlobalDataService,\n              private store: Store,\n              private router: Router,\n              private stripeService: StripeService) {\n\n  }\n\n  ngOnInit(): void {\n    this.createPaymentDto = this.fb.group({\n      paymentMethod: new FormControl({\n        value: null,\n        disabled: true,\n        hidden: true\n      }),\n      stripeData: this.fb.group({\n        amount: new FormControl({\n          value: `$${this.gdService.TotalPurchase}`,\n          disabled: true\n        }),\n        description: new FormControl(null, Validators.required)\n      })\n    });\n    this.stripeService.elements(this.elementsOptions).subscribe((elements: StripeElements) => {\n      this.elements = elements;\n      if (!this.card) {\n        this.card = this.elements.create('card', {\n          iconStyle: 'solid',\n          style: {\n            base: {\n              iconColor: '#666EE8',\n              color: '#31325F',\n              fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n              fontSize: '18px',\n              '::placeholder': {\n                color: '#CFD7E0'\n              }\n            }\n          },\n        });\n        this.card.mount('#card-element');\n      }\n    });\n  }\n\n  get StripeData() {\n    const stripeData = this.createPaymentDto.get('stripeData') as FormGroup;\n    return stripeData.controls;\n  }\n\n\n  buy(): void {\n    const stripeData = {\n      amount: this.gdService.TotalPurchase,\n      source: null,\n      description: null\n    };\n    this.helperService.showSpinner();\n    this.stripeService.createToken(this.card).subscribe((result: {\n      token: Token;\n      error: StripeError;\n    }) => {\n      const {token, error} = result;\n      if (error) {\n        this.helperService.hideSpinner();\n        const {message, type, code} = error;\n        this.errorOnCharge.message = message;\n        this.errorOnCharge.code = code;\n        this.errorOnCharge.type = type;\n        return;\n      } else {\n        switch (token.card.brand) {\n          case 'Visa': {\n            this.createPaymentDto.patchValue({\n              paymentMethod: PaymentMethod.VISA\n            });\n            break;\n          }\n          case 'MasterCard': {\n            this.createPaymentDto.patchValue({\n              paymentMethod: PaymentMethod.MASTERCARD\n            });\n            break;\n          }\n        }\n        if (!this.createPaymentDto.get('paymentMethod').value) {\n          this.createPaymentDto.patchValue({\n            paymentMethod: PaymentMethod.VISA\n          });\n        }\n        stripeData.description = this.createPaymentDto.get('stripeData').get('description').value;\n        stripeData.source = token.id;\n        const paymentDto: CreatePaymentDto = {\n          paymentMethod: this.createPaymentDto.get('paymentMethod').value,\n          stripeData\n        };\n        this.clearError();\n        this.store.dispatch(new CheckoutOnCart({\n          createPaymentDto: paymentDto,\n          createOrderDto: {billingAddress: this.createOrderDto.value}\n        })).subscribe(() => {\n          this.helperService.hideSpinner();\n          this.helperService.hideModal();\n          this.helperService.openSnackbar('Process completed successfully', 'Close');\n          this.router.navigate(['/orders']);\n        }, error1 => {\n          this.helperService.hideModal();\n          this.helperService.showErrorDialog(this.errorTemplate, error1);\n        });\n      }\n    });\n  }\n\n  clearError() {\n    this.errorOnCharge = {\n      type: null,\n      code: null,\n      message: null\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Fill your card information, and description\n      \n        &times;\n      \n    \n    \n      \n        \n          \n            Amount\n            \n          \n          \n            Description\n            \n            \n            \n              Description is\n                required\n            \n          \n        \n        \n          Card\n          \n        \n      \n      \n        \n          {{errorOnCharge.code}}\n          {{errorOnCharge.message}}\n        \n      \n    \n\n    \n      Make purchase\n      \n      Close\n    \n  \n\n\n  \n\n\n  \n    Please wait...\n  \n\n\n    \n\n    \n                \n                    ./stripe-checkout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Fill your card information, and description              ×                                                  Amount                                            Description                                                  Description is                required                                                Card                                                {{errorOnCharge.code}}          {{errorOnCharge.message}}                            Make purchase            Close              Please wait...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StripeCheckoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StripeIntegrationModule.html":{"url":"modules/StripeIntegrationModule.html","title":"module - StripeIntegrationModule","body":"\n                   \n\n\n\n\n    Modules\n    StripeIntegrationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StripeIntegrationModule\n\n\n\ncluster_StripeIntegrationModule_exports\n\n\n\ncluster_StripeIntegrationModule_declarations\n\n\n\ncluster_StripeIntegrationModule_imports\n\n\n\n\nStripeCheckoutComponent\n\nStripeCheckoutComponent\n\n\n\nStripeIntegrationModule\n\nStripeIntegrationModule\n\nStripeIntegrationModule -->\n\nStripeCheckoutComponent->StripeIntegrationModule\n\n\n\n\n\nStripeCheckoutComponent \n\nStripeCheckoutComponent \n\nStripeCheckoutComponent  -->\n\nStripeIntegrationModule->StripeCheckoutComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStripeIntegrationModule -->\n\nSharedModule->StripeIntegrationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stripe-integration/stripe-integration.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StripeCheckoutComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StripeCheckoutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StripeCheckoutComponent} from './components/stripe-checkout/stripe-checkout.component';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {NgxStripeModule} from 'ngx-stripe';\n\n\n@NgModule({\n  declarations: [StripeCheckoutComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgxStripeModule\n  ],\n  exports: [\n    StripeCheckoutComponent,\n  ]\n})\nexport class StripeIntegrationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubCategoryDetailsComponent.html":{"url":"components/SubCategoryDetailsComponent.html","title":"component - SubCategoryDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubCategoryDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    DoCheck\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sub-category-details\n            \n\n            \n                styleUrls\n                ./sub-category-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sub-category-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                isAllSelected\n                            \n                            \n                                products\n                            \n                            \n                                productsTags\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                selectedTag\n                            \n                            \n                                showSpinner\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                subCategory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                loadProducts\n                            \n                            \n                                ngDoCheck\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTagSelect\n                            \n                            \n                                productsTagsInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(helperService: HelperService, router: Router, store: Store, subCategoryService: SubCategoryService, route: ActivatedRoute, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCategoryService\n                                                  \n                                                        \n                                                                        SubCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadProducts\n                        \n                        \n                    \n                \n            \n            \n                \nloadProducts(subCategory: SubCategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngDoCheck\n                        \n                        \n                    \n                \n            \n            \n                \nngDoCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onTagSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonTagSelect(productTag: ProductTagModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productTag\n                                    \n                                                ProductTagModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            productsTagsInit\n                        \n                        \n                    \n                \n            \n            \n                \nproductsTagsInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAllSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            productsTags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ProductTagModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SubCategoryModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/sub-category/sub-category-details/sub-category-details.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, DoCheck, OnDestroy, OnInit} from '@angular/core';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Store} from '@ngxs/store';\nimport {SubCategoryService} from '../../../services/category/sub-category.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\nimport {ProductModel} from '../../../models/Products/product.model';\nimport {ProductTagModel} from '../../../models/Products/product-tag.model';\n\n@Component({\n  selector: 'app-sub-category-details',\n  templateUrl: './sub-category-details.component.html',\n  styleUrls: ['./sub-category-details.component.css']\n})\nexport class SubCategoryDetailsComponent implements OnInit, DoCheck {\n  showSpinner = false;\n  selectedTag: number;\n  isAllSelected = true;\n\n  constructor(public helperService: HelperService,\n              public router: Router,\n              public store: Store,\n              private subCategoryService: SubCategoryService,\n              public route: ActivatedRoute,\n              public gdService: GlobalDataService) {\n\n  }\n\n  products: ProductModel[];\n  productsTags: ProductTagModel[];\n\n  onTagSelect(productTag: ProductTagModel) {\n    this.selectedTag = productTag.id;\n    this.isAllSelected = false;\n    let products = [];\n    let dressesProducts = [];\n    for (let i = 0; i  pTag.name === productTag.name);\n      if (item) {\n        products = [...products, this.subCategory.products[i]];\n      }\n    }\n    this.products = products;\n  }\n\n  subCategory: SubCategoryModel;\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      let subCategoryId = params.get('subCategoryId');\n      let categoryId = params.get('categoryId');\n      if (!!subCategoryId && !!subCategoryId) {\n        this.helperService.showSpinner();\n        if (this.gdService.Categories) {\n          const category = this.gdService.Categories.find(c => c.id === +categoryId);\n          if (category) {\n            const subCategory = category.subCategories.find(s => s.id === +subCategoryId);\n            if (subCategory) {\n              this.subCategory = subCategory;\n              this.loadProducts(subCategory);\n              this.productsTagsInit();\n            }\n          }\n          this.helperService.hideSpinner();\n        } else if (this.gdService.SubCategories) {\n          this.helperService.showSpinner();\n          const subCategoryModel = this.gdService.SubCategories.find(s => s.id === +subCategoryId);\n          if (subCategoryModel) {\n            this.subCategory = subCategoryModel;\n            this.loadProducts(subCategoryModel);\n            this.productsTagsInit();\n            this.helperService.hideSpinner();\n          }\n        } else {\n          this.helperService.showSpinner();\n          this.subCategoryService.getSubCategoryById(+subCategoryId).subscribe((subCategory: SubCategoryModel) => {\n            this.subCategory = subCategory;\n            this.loadProducts(subCategory);\n            this.productsTagsInit();\n            this.helperService.hideSpinner();\n          });\n        }\n      }\n    });\n  }\n\n  getAll() {\n    this.selectedTag = null;\n    this.isAllSelected = true;\n    this.loadProducts(this.subCategory);\n  }\n\n  productsTagsInit() {\n    this.productsTags = [];\n    for (let i = 0; i  item.name === this.productsTags[i].name);\n      if (!item) {\n        uniqueArray = [...uniqueArray, this.productsTags[i]];\n      }\n    }\n    this.productsTags = uniqueArray;\n  }\n\n  loadProducts(subCategory: SubCategoryModel) {\n    this.products = subCategory.products;\n    this.showSpinner = false;\n  }\n\n  ngDoCheck(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      =1\">\n        \n          \n            \n              \n                \n                  All\n                \n              \n              \n                \n                  {{tag.name}}\n                \n              \n            \n          \n        \n      \n      \n        \n           No Products Available in this sub category yet!\n          \n        \n        \n          \n            \n              \n              \n                \n                  \n                  \n                \n              \n            \n            \n              {{product.name}}\n              {{subCategory.name}}\n              \n                ${{product.currentPrice}}\n                \n                    ${{product.previousPrice}}\n                  \n              \n              Add to cart\n              \n              \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./sub-category-details.component.css\n                \n                .vl {\n  border-left: 1px solid;\n  height: 100%;\n}\n\n.hr {\n  border-top: 1px solid;\n  margin-top: 4px;\n  width: 100%;\n}\n.center-cropped {\n  object-fit: cover;\n  max-height: 320px;\n  object-position: inherit;\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            =1\">                                                                              All                                                                              {{tag.name}}                                                                                           No Products Available in this sub category yet!                                                                                                                                                                                                    {{product.name}}              {{subCategory.name}}                              ${{product.currentPrice}}                                    ${{product.previousPrice}}                                              Add to cart                                                                                                          Loading...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubCategoryDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubCategoryDto.html":{"url":"classes/SubCategoryDto.html","title":"class - SubCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                references\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/category.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/category.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/category.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CategoryDto {\n  name: string;\n  description: string;\n}\n\nexport class SubCategoryDto {\n  name: string;\n  description: string;\n  references: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SubCategoryLayoutComponent.html":{"url":"components/SubCategoryLayoutComponent.html","title":"component - SubCategoryLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SubCategoryLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/sub-category-layout/sub-category-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sub-category-layout\n            \n\n            \n                styleUrls\n                ./sub-category-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sub-category-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/sub-category-layout/sub-category-layout.component.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n@Component({\n  selector: 'app-sub-category-layout',\n  templateUrl: './sub-category-layout.component.html',\n  styleUrls: ['./sub-category-layout.component.css']\n})\nexport class SubCategoryLayoutComponent implements OnInit {\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./sub-category-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SubCategoryLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubCategoryLayoutModule.html":{"url":"modules/SubCategoryLayoutModule.html","title":"module - SubCategoryLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    SubCategoryLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubCategoryLayoutModule\n\n\n\ncluster_SubCategoryLayoutModule_imports\n\n\n\ncluster_SubCategoryLayoutModule_declarations\n\n\n\n\nSubCategoryDetailsComponent\n\nSubCategoryDetailsComponent\n\n\n\nSubCategoryLayoutModule\n\nSubCategoryLayoutModule\n\nSubCategoryLayoutModule -->\n\nSubCategoryDetailsComponent->SubCategoryLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSubCategoryLayoutModule -->\n\nSharedModule->SubCategoryLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/sub-category-layout/sub-category-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SubCategoryDetailsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SubCategoryDetailsComponent} from '../../pages/sub-category/sub-category-details/sub-category-details.component';\nimport {RouterModule} from '@angular/router';\nimport {SubCategoryLayoutRoutes} from './sub-category-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\n\n\n@NgModule({\n  declarations: [SubCategoryDetailsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(SubCategoryLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class SubCategoryLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubCategoryModel.html":{"url":"classes/SubCategoryModel.html","title":"class - SubCategoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubCategoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Categories/sub-category.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractCategory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                products\n                            \n                            \n                                references\n                            \n                            \n                                subCategoryTags\n                            \n                            \n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/sub-category.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/sub-category.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/sub-category.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategoryTags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubCategoryTagModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/sub-category.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:2\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractCategory\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractCategory:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AbstractCategory} from '../../commons/classes/abstract-category';\nimport {ProductModel} from '../Products/product.model';\nimport {SubCategoryTagModel} from './sub-category-tag.model';\n\nexport class SubCategoryModel extends AbstractCategory {\n  products: ProductModel[];\n\n  subCategoryTags: SubCategoryTagModel[];\n\n  categoryId: number;\n\n  references: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubCategoryService.html":{"url":"injectables/SubCategoryService.html","title":"injectable - SubCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/category/sub-category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                prefixURI\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNewProduct\n                            \n                            \n                                addTagsToSubCategory\n                            \n                            \n                                deleteSubCategory\n                            \n                            \n                                getAllSubCategories\n                            \n                            \n                                getSubCategoriesByTagName\n                            \n                            \n                                getSubCategoryById\n                            \n                            \n                                removeTagsFromSubCategory\n                            \n                            \n                                searchByMatchingName\n                            \n                            \n                                updateSubCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/category/sub-category.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNewProduct\n                        \n                        \n                    \n                \n            \n            \n                \naddNewProduct(id: number, formData: any, type: string, folderName: string, subFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    formData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    folderName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'products'\n                                    \n\n                                \n                                \n                                    subFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'products-images'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTagsToSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \naddTagsToSubCategory(id: number, payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteSubCategory(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllSubCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllSubCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubCategoriesByTagName\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubCategoriesByTagName(tagName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubCategoryById\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubCategoryById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeTagsFromSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \nremoveTagsFromSubCategory(id: number, payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            searchByMatchingName\n                        \n                        \n                    \n                \n            \n            \n                \nsearchByMatchingName(searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSubCategory(id: number, updateSubCategoryDto: SubCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/category/sub-category.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSubCategoryDto\n                                    \n                                                SubCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            prefixURI\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ApiEndpoints.SubCategoryEndpoints.rootSubCategories\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/category/sub-category.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {SubCategoryModel} from '../../models/Categories/sub-category.model';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {ProductModel} from '../../models/Products/product.model';\nimport {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {SubCategoryDto} from '../../commons/public-dto/category.dto';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubCategoryService {\n  private prefixURI = ApiEndpoints.SubCategoryEndpoints.rootSubCategories;\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getAllSubCategories(): Observable {\n    return this._http.get(this.prefixURI);\n  }\n\n\n\n  getSubCategoriesByTagName(tagName: string): Observable {\n    return this._http.get(`${this.prefixURI}/search-by-tag-name/${tagName}`);\n  }\n\n  searchByMatchingName(searchValue: string): Observable {\n    return this._http.get\n    (`${ApiEndpoints.SubCategoryEndpoints.rootSubCategories}/match-by-name/${searchValue}`);\n  }\n\n  getSubCategoryById(id: number): Observable {\n    return this._http.get(`${this.prefixURI}/${id}`);\n  }\n\n  addNewProduct(id: number, formData: any, type: string,\n                folderName = 'products', subFolder = 'products-images'): Observable {\n    return this._http.post\n    (`${this.prefixURI}/${id}/new-product/${folderName}/${subFolder}/${type}`, formData);\n  }\n\n  addTagsToSubCategory(id: number, payload: { tags: number[] }): Observable {\n    return this._http.post(`${this.prefixURI}/${id}/add-tags`, payload);\n  }\n\n  removeTagsFromSubCategory(id: number, payload: { tags: number[] }): Observable {\n    return this._http.request('delete', `${this.prefixURI}/${id}/remove-tags`, {\n      body: {\n        payload\n      }\n    });\n  }\n\n  updateSubCategory(id: number, updateSubCategoryDto: SubCategoryDto): Observable {\n    return this._http.put(`${this.prefixURI}/${id}/update`, updateSubCategoryDto);\n  }\n\n  deleteSubCategory(id: number): Observable {\n    return this._http.delete(`${this.prefixURI}/${id}/delete`);\n  }\n\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubCategoryState.html":{"url":"injectables/SubCategoryState.html","title":"injectable - SubCategoryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubCategoryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSubCategories\n                            \n                            \n                                fetchAllSubCategories\n                            \n                            \n                                fetchSubCategoriesByTagName\n                            \n                            \n                                    Static\n                                SubCategories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subCategoryService: SubCategoryService, categoryService: CategoryService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/sub-category/sub-category.state.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subCategoryService\n                                                  \n                                                        \n                                                                        SubCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearSubCategories\n                        \n                        \n                    \n                \n            \n            \n                \nclearSubCategories(ctx: StateContext, action: ClearSubCategory)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearSubCategory)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/sub-category/sub-category.state.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearSubCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchAllSubCategories\n                        \n                        \n                    \n                \n            \n            \n                \nfetchAllSubCategories(ctx: StateContext, action: FetchAllSubCategories)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchAllSubCategories)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/sub-category/sub-category.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchAllSubCategories\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchSubCategoriesByTagName\n                        \n                        \n                    \n                \n            \n            \n                \nfetchSubCategoriesByTagName(ctx: StateContext, action: FetchSubCategoriesByTagName)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchSubCategoriesByTagName)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/sub-category/sub-category.state.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                            StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchSubCategoriesByTagName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            SubCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SubCategories(state: SubCategoryStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/sub-category/sub-category.state.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SubCategoryStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext, Store} from '@ngxs/store';\nimport {SubCategoryActions, SubCategoryStateModel} from './sub-category.actions';\nimport {Injectable} from '@angular/core';\nimport {SubCategoryService} from '../../services/category/sub-category.service';\nimport FetchAllSubCategories = SubCategoryActions.FetchAllSubCategories;\nimport {tap} from 'rxjs/operators';\nimport {SubCategoryModel} from '../../models/Categories/sub-category.model';\nimport ClearSubCategory = SubCategoryActions.ClearSubCategory;\nimport {CategoryService} from '../../services/category/category.service';\nimport FetchSubCategoriesByTagName = SubCategoryActions.FetchSubCategoriesByTagName;\nimport {ProductActions} from '../product/product.actions';\nimport UpdateShopProducts = ProductActions.UpdateShopProducts;\n\n\n@State({\n  name: 'subCategories',\n  defaults: {\n    subCategories: null\n  }\n})\n@Injectable()\nexport class SubCategoryState {\n  constructor(private subCategoryService: SubCategoryService, private categoryService: CategoryService,\n              private store: Store) {\n  }\n\n  @Selector()\n  static SubCategories(state: SubCategoryStateModel) {\n    return state.subCategories;\n  }\n\n\n  @Action(FetchSubCategoriesByTagName)\n  fetchSubCategoriesByTagName(ctx: StateContext, action: FetchSubCategoriesByTagName) {\n    return this.subCategoryService.getSubCategoriesByTagName(action.tagName).pipe(\n      tap((subCategories: SubCategoryModel[]) => {\n        let products = [];\n        for (let i = 0; i , action: FetchAllSubCategories) {\n    return this.subCategoryService.getAllSubCategories().pipe(\n      tap((data: SubCategoryModel[]) => {\n        ctx.setState({\n          subCategories: data\n        });\n      })\n    );\n  }\n\n\n  @Action(ClearSubCategory)\n  clearSubCategories(ctx: StateContext, action: ClearSubCategory) {\n    ctx.setState({\n      subCategories: null\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubCategoryStateModel.html":{"url":"interfaces/SubCategoryStateModel.html","title":"interface - SubCategoryStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SubCategoryStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/sub-category/sub-category.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        subCategories\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        subCategories\n                                    \n                                \n                                \n                                    \n                                        subCategories:     SubCategoryModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SubCategoryModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {SubCategoryModel} from '../../models/Categories/sub-category.model';\n\nexport interface SubCategoryStateModel {\n  subCategories: SubCategoryModel[];\n}\n\nexport namespace SubCategoryActions {\n  export class FetchAllSubCategories {\n    static readonly type = '[SubCategory] Fetch All Sub Categories';\n\n    constructor() {\n    }\n  }\n\n  export class FetchSubCategoryById {\n    static readonly type = '[SubCategory] Fetch SubCategory By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class FetchSubCategoriesByTagName {\n    static readonly type = '[SubCategory] Fetch SubCategories By Tag Name';\n\n    constructor(public tagName: string, public slice: number) {\n    }\n  }\n\n\n  export class ClearSubCategory {\n    static readonly type = '[SubCategory] Clear SubCategory';\n\n    constructor() {\n    }\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubCategoryTagModel.html":{"url":"classes/SubCategoryTagModel.html","title":"class - SubCategoryTagModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubCategoryTagModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Categories/sub-category-tag.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ItemTag\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                subCategoryId\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                tagId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Categories/sub-category-tag.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ItemTag\n\n                                \n                            \n                        \n                            \n                                    Defined in         ItemTag:7\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ItemTag} from '../../commons/classes/item-tag';\n\nexport class SubCategoryTagModel extends ItemTag {\n  subCategoryId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/models/subscriber.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endpoint\n                            \n                            \n                                expirationTime\n                            \n                            \n                                id\n                            \n                            \n                                keys\n                            \n                            \n                                subscribersNotifications\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscriber.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expirationTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscriber.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscriber.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Key\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscriber.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscribersNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubscribersNotifications[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscriber.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Key } from '../classes/key';\nimport {SubscribersNotifications} from './subscribers-notification';\nexport class Subscriber {\n  id: number;\n\n  endpoint: string;\n\n  expirationTime: Date;\n\n  keys: Key;\n\n  subscribersNotifications: SubscribersNotifications[];\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubscribersNotifications.html":{"url":"classes/SubscribersNotifications.html","title":"class - SubscribersNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubscribersNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Notifications/models/subscribers-notification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actions\n                            \n                            \n                                body\n                            \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                notificationId\n                            \n                            \n                                subscriberId\n                            \n                            \n                                title\n                            \n                            \n                                vibrate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriberId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vibrate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Notifications/models/subscribers-notification.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationData } from '../classes/notification-data';\nexport class SubscribersNotifications  {\n  id: number;\n\n  title: string;\n\n  body: string;\n\n  data: NotificationData;\n\n  actions: { title: string, action: string }[];\n\n  vibrate: number[];\n\n  subscriberId: number;\n\n  notificationId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagDto.html":{"url":"classes/TagDto.html","title":"class - TagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/tag.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/tag.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TagDto {\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagItemsComponent.html":{"url":"components/TagItemsComponent.html","title":"component - TagItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tag/tag-items/tag-items.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tag-items\n            \n\n            \n                styleUrls\n                ./tag-items.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tag-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                searchedTag\n                            \n                            \n                                    Public\n                                store\n                            \n                            \n                                subCategories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateToSubCategory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, route: ActivatedRoute, gdService: GlobalDataService, subCategoryService: SubCategoryService, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tag/tag-items/tag-items.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subCategoryService\n                                                  \n                                                        \n                                                                        SubCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToSubCategory\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToSubCategory(subCategory: SubCategoryModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subCategory\n                                    \n                                                SubCategoryModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchedTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subCategories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SubCategoryModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tag-items/tag-items.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {SubCategoryService} from '../../../services/category/sub-category.service';\nimport {SubCategoryModel} from '../../../models/Categories/sub-category.model';\n\n@Component({\n  selector: 'app-tag-items',\n  templateUrl: './tag-items.component.html',\n  styleUrls: ['./tag-items.component.css']\n})\nexport class TagItemsComponent implements OnInit {\n\n  subCategories: SubCategoryModel[];\n  searchedTag: string;\n\n  constructor(public store: Store, private router: Router,\n              private route: ActivatedRoute,\n              public gdService: GlobalDataService,\n              private subCategoryService: SubCategoryService,\n              public helperService: HelperService) {\n    helperService.showSpinner();\n    route.paramMap.subscribe((params: ParamMap) => {\n      const tagName = params.get('name');\n      if (tagName) {\n        this.searchedTag = tagName;\n        this.subCategoryService.getSubCategoriesByTagName(tagName)\n          .subscribe((subCategories: SubCategoryModel[]) => {\n            this.subCategories = subCategories;\n            helperService.hideSpinner();\n          });\n      }\n    });\n  }\n\n  navigateToSubCategory(subCategory: SubCategoryModel) {\n    this.router.navigate([`/sub-categories/${subCategory.categoryId}`, subCategory.id], {\n      queryParams: {\n        Tag: this.searchedTag,\n        subCategory: subCategory.name\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n         You've searched for: {{searchedTag}}\n        \n      \n      \n        \n          \n            No items associated with the selected tag\n          \n        \n        \n          \n            \n              \n                \n                \n                  \n                    \n                    \n                  \n                \n              \n              \n                {{subCategory.name}}\n              \n            \n          \n        \n      \n    \n  \n\n\n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./tag-items.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     You\\'ve searched for: {{searchedTag}}                                                  No items associated with the selected tag                                                                                                                                                                                                                                      {{subCategory.name}}                                                              Loading...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagLayoutComponent.html":{"url":"components/TagLayoutComponent.html","title":"component - TagLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layouts/tag-layout/tag-layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tag-layout\n            \n\n            \n                styleUrls\n                ./tag-layout.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tag-layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layouts/tag-layout/tag-layout.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layouts/tag-layout/tag-layout.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tag-layout',\n  templateUrl: './tag-layout.component.html',\n  styleUrls: ['./tag-layout.component.css']\n})\nexport class TagLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./tag-layout.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagLayoutModule.html":{"url":"modules/TagLayoutModule.html","title":"module - TagLayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    TagLayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagLayoutModule\n\n\n\ncluster_TagLayoutModule_imports\n\n\n\ncluster_TagLayoutModule_declarations\n\n\n\n\nTagItemsComponent\n\nTagItemsComponent\n\n\n\nTagLayoutModule\n\nTagLayoutModule\n\nTagLayoutModule -->\n\nTagItemsComponent->TagLayoutModule\n\n\n\n\n\nTagsComponent\n\nTagsComponent\n\nTagLayoutModule -->\n\nTagsComponent->TagLayoutModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTagLayoutModule -->\n\nSharedModule->TagLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/layouts/tag-layout/tag-layout.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TagItemsComponent\n                        \n                        \n                            TagsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {TagLayoutRoutes} from './tag-layout.routing';\nimport {SharedModule} from '../../shared/shared-global.module';\nimport {TagsComponent} from '../../pages/tag/tags/tags.component';\nimport {TagItemsComponent} from '../../pages/tag/tag-items/tag-items.component';\n\n\n@NgModule({\n  declarations: [TagsComponent, TagItemsComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(TagLayoutRoutes),\n    SharedModule\n  ]\n})\nexport class TagLayoutModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagModel.html":{"url":"classes/TagModel.html","title":"class - TagModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Tag/tag.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Tag/tag.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Tag/tag.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Tag/tag.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Tag/tag.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TagModel {\n  id: number;\n\n  name: string;\n\n  createdAt: Date;\n\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TagPipe.html":{"url":"pipes/TagPipe.html","title":"pipe - TagPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TagPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/commons/pipes/tag.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        tagsFilter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(tags: TagModel[], searchTerm: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/pipes/tag.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                                TagModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    searchTerm\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TagModel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {TagModel} from '../../models/Tag/tag.model';\n\n@Pipe({\n  name: 'tagsFilter'\n})\nexport class TagPipe implements PipeTransform {\n\n  transform(tags: TagModel[], searchTerm: string): TagModel[] {\n    if (!tags || !searchTerm) {\n      return tags;\n    }\n    return tags.filter(category =>\n      category.name.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tag/tag.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProductsTags\n                            \n                            \n                                getSubCategoriesTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tag/tag.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProductsTags\n                        \n                        \n                    \n                \n            \n            \n                \ngetProductsTags()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tag/tag.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSubCategoriesTags\n                        \n                        \n                    \n                \n            \n            \n                \ngetSubCategoriesTags()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tag/tag.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {TagModel} from '../../models/Tag/tag.model';\nimport {ApiEndpoints} from '../../commons/api-endpoints';\nimport {Observable} from 'rxjs';\nimport {TagDto} from '../../commons/public-dto/tag.dto';\nimport {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getSubCategoriesTags(): Observable {\n    return this._http.get(`${ApiEndpoints.TagEndpoints.rootTags}/sub-categories`);\n  }\n\n  getProductsTags(): Observable {\n    return this._http.get(`${ApiEndpoints.TagEndpoints.rootTags}/products`);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagState.html":{"url":"injectables/TagState.html","title":"injectable - TagState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.state.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearTags\n                            \n                            \n                                fetchProductsTags\n                            \n                            \n                                fetchSubCategoriesTags\n                            \n                            \n                                    Static\n                                ProductsTags\n                            \n                            \n                                    Static\n                                SubCategoriesTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagService: TagService)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/tag/tag.state.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagService\n                                                  \n                                                        \n                                                                        TagService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearTags\n                        \n                        \n                    \n                \n            \n            \n                \nclearTags(ctx: StateContext, action: ClearTags)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ClearTags)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/tag/tag.state.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                ClearTags\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchProductsTags\n                        \n                        \n                    \n                \n            \n            \n                \nfetchProductsTags(ctx: StateContext, action: FetchProductsTags)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchProductsTags)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/tag/tag.state.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchProductsTags\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchSubCategoriesTags\n                        \n                        \n                    \n                \n            \n            \n                \nfetchSubCategoriesTags(ctx: StateContext, action: FetchSubCategoriesTags)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(FetchSubCategoriesTags)\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/tag/tag.state.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                FetchSubCategoriesTags\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            ProductsTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ProductsTags(state: TagStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/tag/tag.state.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TagStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            SubCategoriesTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    SubCategoriesTags(state: TagStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/state-management/tag/tag.state.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                TagStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Action, Selector, State, StateContext} from '@ngxs/store';\nimport {TagActions, TagStateModel} from './tag.actions';\nimport {Injectable} from '@angular/core';\nimport {TagService} from '../../services/tag/tag.service';\nimport {tap} from 'rxjs/operators';\nimport ClearTags = TagActions.ClearTags;\nimport FetchSubCategoriesTags = TagActions.FetchSubCategoriesTags;\nimport {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {patch} from '@ngxs/store/operators';\nimport FetchProductsTags = TagActions.FetchProductsTags;\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\n\n@State({\n  name: 'tags',\n  defaults: {\n    subCategoriesTags: null,\n    productsTags: null\n  }\n})\n@Injectable()\nexport class TagState {\n  constructor(private tagService: TagService) {\n  }\n\n  @Selector()\n  static SubCategoriesTags(state: TagStateModel) {\n    return state.subCategoriesTags;\n  }\n\n  @Selector()\n  static ProductsTags(state: TagStateModel) {\n    return state.productsTags;\n  }\n\n  @Action(FetchSubCategoriesTags)\n  fetchSubCategoriesTags(ctx: StateContext, action: FetchSubCategoriesTags) {\n    return this.tagService.getSubCategoriesTags().pipe(\n      tap((tags: SubCategoryTagModel[]) => {\n        ctx.setState(patch({\n          subCategoriesTags: tags\n        }));\n      })\n    );\n  }\n\n  @Action(FetchProductsTags)\n  fetchProductsTags(ctx: StateContext, action: FetchProductsTags) {\n    return this.tagService.getProductsTags().pipe(\n      tap((tags: ProductTagModel[]) => {\n        ctx.setState(patch({\n          productsTags: tags\n        }));\n      })\n    );\n  }\n\n  @Action(ClearTags)\n  clearTags(ctx: StateContext, action: ClearTags) {\n    ctx.setState({\n      subCategoriesTags: null,\n      productsTags: null\n    });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagStateModel.html":{"url":"interfaces/TagStateModel.html","title":"interface - TagStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TagStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/tag/tag.actions.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        productsTags\n                                \n                                \n                                        subCategoriesTags\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        productsTags\n                                    \n                                \n                                \n                                    \n                                        productsTags:     ProductTagModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProductTagModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subCategoriesTags\n                                    \n                                \n                                \n                                    \n                                        subCategoriesTags:     SubCategoryTagModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SubCategoryTagModel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {SubCategoryTagModel} from '../../models/Categories/sub-category-tag.model';\nimport {ProductTagModel} from '../../models/Products/product-tag.model';\n\nexport interface TagStateModel {\n  subCategoriesTags: SubCategoryTagModel[];\n  productsTags: ProductTagModel[]\n}\n\nexport namespace TagActions {\n  export class FetchSubCategoriesTags {\n    static readonly type = '[Tag] Fetch SubCategories Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsTags {\n    static readonly type = '[Tag] Fetch Products Tags';\n\n    constructor() {\n    }\n  }\n\n  export class FetchTagById {\n    static readonly type = '[Tag] Fetch Tag By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class ClearTags {\n    static readonly type = '[Tag] Clear Tags';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsComponent.html":{"url":"components/TagsComponent.html","title":"component - TagsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TagsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/tag/tags/tags.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tags\n            \n\n            \n                styleUrls\n                ./tags.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tags.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchTagItems\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, gdService: GlobalDataService, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/tag/tags/tags.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchTagItems\n                        \n                        \n                    \n                \n            \n            \n                \nfetchTagItems(tag: SubCategoryTagModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tag/tags/tags.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                SubCategoryTagModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/tag/tags/tags.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tags/tags.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tags/tags.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Store\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/tag/tags/tags.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {Router} from '@angular/router';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {TagActions} from '../../../state-management/tag/tag.actions';\nimport FetchSubCategoriesTags = TagActions.FetchSubCategoriesTags;\nimport {SubCategoryTagModel} from '../../../models/Categories/sub-category-tag.model';\n\n@Component({\n  selector: 'app-tags',\n  templateUrl: './tags.component.html',\n  styleUrls: ['./tags.component.css']\n})\nexport class TagsComponent implements OnInit {\n\n  constructor(public store: Store, private router: Router,\n              public gdService: GlobalDataService,\n              public helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n    if (!this.gdService.SubCategoriesTags) {\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchSubCategoriesTags()).subscribe(() => {\n        this.helperService.hideSpinner();\n      });\n    }\n  }\n\n  fetchTagItems(tag: SubCategoryTagModel) {\n    this.router.navigate(['tag-items', tag.name]);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      All Tags\n    \n    \n      \n        \n        \n          \n          \n            \n            \n              #{{tag.name}}\n            \n          \n          \n\n\n          \n\n          \n\n        \n        \n\n      \n    \n  \n\n\n  \n    Loading...\n  \n\n\n    \n\n    \n                \n                    ./tags.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            All Tags                                                                                        #{{tag.name}}                                                                                      Loading...  '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptor.html":{"url":"interceptors/TokenInterceptor.html","title":"interceptor - TokenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/token.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/token.interceptor.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/token.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private gdService: GlobalDataService) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler) {\n    const tokenReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.gdService.Token()}`\n      }\n    });\n    return next.handle(tokenReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth/token.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, gdService: GlobalDataService, store: Store, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth/token.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateToken\n                        \n                        \n                    \n                \n            \n            \n                \nupdateToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth/token.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {UpdateToken} from '../../state-management/auth/auth-actions';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\nimport {Store} from '@ngxs/store';\nimport {AuthService} from './auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n  constructor(private http: HttpClient, private gdService: GlobalDataService, private store: Store,\n              private authService: AuthService) {\n  }\n\n  updateToken() {\n    this.authService.updateToken(this.gdService.User.email).subscribe((data: { jwt: string }) => {\n      const {jwt} = data;\n      this.store.dispatch(new UpdateToken(jwt)).subscribe(() => {\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartProductQuantity.html":{"url":"classes/UpdateCartProductQuantity.html","title":"class - UpdateCartProductQuantity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartProductQuantity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cartId\n                            \n                            \n                                    Public\n                                cartProductId\n                            \n                            \n                                    Public\n                                newQuantity\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cartId: number, cartProductId: number, newQuantity: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartProductId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        newQuantity\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cartProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newQuantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Update Cart Product Quantity'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartState.html":{"url":"classes/UpdateCartState.html","title":"class - UpdateCartState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/cart/cart.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cart\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cart: CartModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/cart/cart.actions.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cart\n                                                  \n                                                        \n                                                                        CartModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cart\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CartModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Cart] Update Cart State'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/cart/cart.actions.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {CartModel} from '../../models/Cart/cart.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\nimport {CreatePaymentDto} from '../../commons/public-dto/create-payment.dto';\nimport {RemoveCartItem} from '../../commons/interfaces/remove-cart-item.interface';\n\nexport interface CartStateModel {\n  cart: CartModel;\n}\n\nexport namespace CartActions {\n\n  export class FetchUserCart {\n    static readonly type = '[Cart] Fetch User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class ClearCartContent {\n    static readonly type = '[Cart] Clear Cart Content';\n\n    constructor() {\n    }\n  }\n\n  export class CreateUserCart {\n    static readonly type = '[Cart] Create User Cart';\n\n    constructor() {\n    }\n  }\n\n  export class UpdateCartProductQuantity {\n    static readonly type = '[Cart] Update Cart Product Quantity';\n\n    constructor(public cartId: number, public cartProductId: number, public newQuantity: number) {\n    }\n  }\n\n  export class RemoveCartProduct {\n    static readonly type = '[Cart] Remove Cart Product';\n\n    constructor(public cartId: number, public cartProductId: number) {\n    }\n  }\n\n  export class UpdateCartState {\n    static readonly type = '[Cart] Update Cart State';\n\n    constructor(public cart: CartModel) {\n    }\n  }\n\n  export class CheckoutOnCart {\n    static readonly type = '[Cart] Checkout On Cart';\n\n    constructor(public payload: {\n      createOrderDto: OrderDto,\n      createPaymentDto: CreatePaymentDto\n    }) {\n    }\n  }\n\n  export class RemoveProductsFromCart {\n    static readonly type = '[Cart] Remove Products From Cart';\n\n    constructor(public payload: { cartProducts: RemoveCartItem[] }) {\n    }\n  }\n\n  export class CheckoutOnSingleProduct {\n    static readonly type = '[Cart] Checkout On Single Product';\n\n    constructor(public cartProductId: number,\n                public payload: {\n                  createOrderDto: OrderDto,\n                  createPaymentDto: CreatePaymentDto\n                }) {\n    }\n  }\n\n  export class ClearCartFromStorage {\n    static readonly type = '[Cart] Clear Cart From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrder.html":{"url":"classes/UpdateOrder.html","title":"class - UpdateOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/order/order.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                updateOrderDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, updateOrderDto: OrderDto)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/order/order.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        updateOrderDto\n                                                  \n                                                        \n                                                                        OrderDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Order] Update Order'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateOrderDto\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/order/order.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../../models/Orders/order.model';\nimport {OrderDto} from '../../commons/public-dto/order.dto';\n\nexport interface OrderStateModel {\n  orders: OrderModel[];\n}\n\nexport namespace OrderActions {\n\n  export class FetchUserOrders {\n    static readonly type = '[Order] Fetch User Orders';\n\n    constructor() {\n    }\n  }\n\n  export class FetchOrderById {\n    static readonly type = '[Order] Fetch Order By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n\n  export class UpdateOrder {\n    static readonly type = '[Order] Update Order';\n\n    constructor(public id: number, public updateOrderDto: OrderDto) {\n    }\n  }\n\n  export class PushOrder {\n    static readonly type = '[Order] Push Order';\n\n    constructor(public order: OrderModel) {\n    }\n  }\n\n  export class CancelOrder {\n    static readonly type = '[Order] Cancel Order';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class ClearOrdersFromStorage {\n    static readonly type = '[Order] Clear Orders From Storage';\n\n    constructor() {\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/commons/public-dto/update-product.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPrice\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                quantity\n                            \n                            \n                                references\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/update-product.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/update-product.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/update-product.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/update-product.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            references\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/commons/public-dto/update-product.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateProductDto {\n\n  name: string;\n\n  description: string;\n\n  quantity: number;\n\n  currentPrice: number;\n\n  references: number[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateShopProducts.html":{"url":"classes/UpdateShopProducts.html","title":"class - UpdateShopProducts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateShopProducts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/product/product.actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                products\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(products: ProductModel[])\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/product/product.actions.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        products\n                                                  \n                                                        \n                                                                        ProductModel[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ProductModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Product] Update Shop Products'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/product/product.actions.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ProductModel} from '../../models/Products/product.model';\nimport {ProductsCustomFilterDto} from '../../commons/public-dto/products-custom-filter.dto';\n\nexport interface ProductStateModel {\n  shopProducts: ProductModel[];\n  latestProducts: ProductModel[];\n  mostSalesProducts: ProductModel[];\n}\n\nexport namespace ProductActions {\n  export class FetchShopProducts {\n    static readonly type = '[Product] Fetch Shop Products';\n\n    constructor(public take: number) {\n    }\n  }\n\n  export class UpdateShopProducts {\n    static readonly type = '[Product] Update Shop Products';\n\n    constructor(public products: ProductModel[]) {\n    }\n  }\n\n  export class FetchMostSalesProducts {\n    static readonly type = '[Product] Fetch Most Sales Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchLatestProducts {\n    static readonly type = '[Product] Fetch Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchProductsByTagName {\n    static readonly type = '[Product] Fetch Products By Tag Name';\n\n    constructor(public tagName: string) {\n    }\n  }\n\n  export class FetchProductById {\n    static readonly type = '[Product] Fetch Product By Id';\n\n    constructor(public id: number) {\n    }\n  }\n\n  export class FetchMixLatestProducts {\n    static readonly type = '[Product] Fetch Mix Latest Products';\n\n    constructor() {\n    }\n  }\n\n  export class FetchCustomProducts {\n    static readonly type = '[Product] Fetch Custom Products';\n\n    constructor(public productsCustomFilterDto: ProductsCustomFilterDto) {\n    }\n  }\n\n  export class AddToCart {\n    static readonly type = '[Product] Add To Cart';\n\n    constructor(public productId: number, public cartId: number, public createCartProductDto: { quantity: number }) {\n    }\n  }\n\n\n  export class ClearProducts {\n    static readonly type = '[Product] Clear Products';\n\n    constructor() {\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateToken.html":{"url":"classes/UpdateToken.html","title":"class - UpdateToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                token\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(token: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Update Token'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUser.html":{"url":"classes/UpdateUser.html","title":"class - UpdateUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state-management/auth/auth-actions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: UserModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/state-management/auth/auth-actions.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '[Auth] Update User'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/state-management/auth/auth-actions.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserModel} from '../../models/Auth/user.model';\nimport {AuthCredentialsDto} from '../../commons/public-dto/auth-credentials.dto';\n\nexport interface AuthStateModel {\n  token: string;\n  user: UserModel;\n}\n\nexport class Login {\n  static readonly type = '[Auth] Login';\n\n  constructor(public payload: AuthCredentialsDto) {\n  }\n}\n\nexport class UpdateToken {\n  static readonly type = '[Auth] Update Token';\n\n  constructor(public token: string) {\n  }\n}\n\nexport class UpdateUser {\n  static readonly type = '[Auth] Update User';\n\n  constructor(public user: UserModel) {\n  }\n}\n\n\n\n\nexport class Register {\n  static readonly type = '[Auth] Register';\n\n  constructor(public payload: any) {\n  }\n}\n\n\nexport class Logout {\n  static readonly type = '[Auth] Logout';\n}\n\n\n// For User Data\n\nexport class SetUserProfile {\n  static readonly type = '[Auth] Set User Profile';\n\n  constructor(public profileId: number) {\n  }\n}\n\nexport class SetUserCart {\n  static readonly type = '[Auth] Set User Cart';\n\n  constructor(public cartId: number) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserAuthGuard.html":{"url":"guards/UserAuthGuard.html","title":"guard - UserAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/commons/guards/user-auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/commons/guards/user-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/commons/guards/user-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Store} from '@ngxs/store';\nimport {AuthState} from '../../state-management/auth/auth.state';\nimport {GlobalDataService} from '../../shared/services/global-data.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthGuard implements CanActivate {\n  constructor(private store: Store, private router: Router,\n              private gdService: GlobalDataService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.store.selectSnapshot(AuthState.isAuthenticated)\n      && this.store.selectSnapshot(AuthState.User)) {\n      return true;\n    } else {\n      this.gdService.userLogout();\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCartComponent.html":{"url":"components/UserCartComponent.html","title":"component - UserCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/cart/user-cart/user-cart.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-cart\n            \n\n            \n                styleUrls\n                ./user-cart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorTemplate\n                            \n                            \n                                    Public\n                                gdService\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                selectedItem\n                            \n                            \n                                showSaveChanges\n                            \n                            \n                                showSpinner\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                            \n                                onSubtract\n                            \n                            \n                                removeCartProduct\n                            \n                            \n                                setSelectedItem\n                            \n                            \n                                totalPurchase\n                            \n                            \n                                updateCartProductQuantity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Cart\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, helperService: HelperService, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/cart/user-cart/user-cart.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onAdd\n                        \n                        \n                    \n                \n            \n            \n                \nonAdd(cartProduct: CartProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartProduct\n                                    \n                                                CartProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubtract\n                        \n                        \n                    \n                \n            \n            \n                \nonSubtract(cartProduct: CartProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartProduct\n                                    \n                                                CartProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeCartProduct\n                        \n                        \n                    \n                \n            \n            \n                \nremoveCartProduct(cartProduct: CartProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartProduct\n                                    \n                                                CartProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedItem\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedItem(item: CartProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                CartProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            totalPurchase\n                        \n                        \n                    \n                \n            \n            \n                \ntotalPurchase()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCartProductQuantity\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCartProductQuantity(cartProduct: CartProductModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cartProduct\n                                    \n                                                CartProductModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            gdService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalDataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CartProductModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSaveChanges\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSpinner\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Cart\n                    \n                \n\n                \n                    \n                        getCart()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/cart/user-cart/user-cart.component.ts:64\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {Store} from '@ngxs/store';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {CartActions} from '../../../state-management/cart/cart.actions';\nimport CreateUserCart = CartActions.CreateUserCart;\nimport FetchUserCart = CartActions.FetchUserCart;\nimport {CartProductModel} from '../../../models/Cart/cart-product.model';\nimport UpdateCartProductQuantity = CartActions.UpdateCartProductQuantity;\nimport RemoveCartProduct = CartActions.RemoveCartProduct;\n\n@Component({\n  selector: 'app-user-cart',\n  templateUrl: './user-cart.component.html',\n  styleUrls: ['./user-cart.component.css']\n})\nexport class UserCartComponent implements OnInit {\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  state: string;\n  showSpinner = false;\n  showSaveChanges = false;\n  selectedItem: CartProductModel;\n\n\n  constructor(private store: Store, public helperService: HelperService,\n              public gdService: GlobalDataService) {\n  }\n\n  setSelectedItem(item: CartProductModel) {\n    this.selectedItem = Object.assign({}, item);\n  }\n\n  ngOnInit(): void {\n    if (!this.gdService.User.cartId) {\n      this.state = 'Initializing Cart...';\n      this.helperService.showSpinner();\n      this.store.dispatch(new CreateUserCart()).subscribe(() => {\n        this.helperService.hideSpinner();\n        this.state = null;\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    } else if (!this.gdService.Cart) {\n      this.state = 'Loading Cart...';\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchUserCart()).subscribe(() => {\n        this.helperService.hideSpinner();\n        this.state = null;\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    }\n  }\n\n  totalPurchase() {\n    let total = 0;\n    for (let i = 0; i  {\n      this.helperService.hideModal();\n      this.showSpinner = false;\n      this.selectedItem = null;\n    }, error => {\n      this.helperService.hideModal();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n  removeCartProduct(cartProduct: CartProductModel) {\n    this.state = 'Remove product...';\n    this.helperService.showSpinner();\n    this.store.dispatch(new RemoveCartProduct(this.Cart.id, cartProduct.id)).subscribe(() => {\n      this.state = null;\n      this.helperService.hideSpinner();\n      this.helperService.openSnackbar('Product removed successfully from your cart', 'Close');\n    }, error => {\n      this.helperService.hideModal();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n\n\n  onAdd(cartProduct: CartProductModel) {\n    if (cartProduct.quantity \n    \n\n    \n        \n  \n    \n      \n        \n          \n            oops!! , your cart is empty!\n            You can add products from different categories,\n              or, if you want to a direct shop go over here \n                Shop\n              \n          \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n  =1\">\n    \n    \n      \n        \n          \n          \n\n            \n            \n\n              \n              \n                \n\n                  Cart ({{Cart.totalItems}} items)\n\n                  \n                    \n                      \n                        \n                        \n                          \n                            \n                            \n                          \n                        \n                      \n                    \n                    \n                      \n                        \n                          \n                            {{productCart.name}}\n                            Quantity: {{productCart.quantity}}\n                            Total Price: &nbsp; ${{productCart.totalPrice}}\n                            \n                          \n                          \n                        \n\n                        \n                          \n                            \n                               &nbsp; Remove item\n                            \n                            \n                              \n                                Do you want to remove this product?\n                                Yes\n                                \n                                No\n                                \n                              \n                            \n                            \n                               &nbsp; Update\n                            \n                            \n                              \n                                \n                                  \n                                    Update Item\n                                    \n                                      &times;\n                                    \n                                  \n                                  \n                                    \n                                      \n                                        \n                                          \n                                        \n                                      \n                                      \n                                        \n                                          Name: {{productCart.name}}\n                                        \n                                        \n                                          Quantity: {{productCart.quantity}}\n                                        \n                                        \n                                          \n                                            \n                                              \n                                            \n                                          \n                                          \n                                          \n                                            \n                                              \n                                            \n                                          \n                                          \n                                            \n            \n                                            \n                                          \n                                        \n                                        \n                                          Note: &nbsp;Maximum value for quantity is {{productCart.maxPush}}\n                                          items only\n                                        \n                                      \n\n                                    \n                                  \n                                  \n                                     productCart.maxPush\"\n                                            mdbBtn color=\"default\"\n                                            class=\"waves-light\" mdbWavesEffect>Update State\n                                    \n                                    Close\n                                    \n                                  \n                                \n                              \n                            \n                          \n                        \n                      \n                    \n                  \n                  \n                   Do not delay the purchase, adding\n                    items to your cart does not mean booking them.\n\n                \n              \n              \n\n              \n              \n                \n\n                  Expected shipping delivery\n\n                   Thu., 12.03. - Mon., 16.03.\n                \n              \n              \n\n              \n              \n                \n\n                  We accept\n\n                  \n                  \n                  \n                  \n                \n              \n              \n\n            \n            \n              \n            \n            \n            \n\n              \n              \n                \n\n                  The total amount of\n\n                  \n                    \n                      Shipping\n                      Gratis\n                    \n                    \n                      \n                        The total amount of\n                        \n                          (including VAT)\n                        \n                      \n                      ${{totalPurchase()}}\n                    \n                  \n                  go to checkout\n                  \n                \n              \n            \n          \n        \n      \n    \n\n  \n\n\n\n  \n    {{state}}\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./user-cart.component.css\n                \n                /* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          oops!! , your cart is empty!            You can add products from different categories,              or, if you want to a direct shop go over here                 Shop                                                                                                              =1\">                                                                                                                                Cart ({{Cart.totalItems}} items)                                                                                                                                                                                                                                                                                                                                                                                                                  {{productCart.name}}                            Quantity: {{productCart.quantity}}                            Total Price:   ${{productCart.totalPrice}}                                                                                                                                                                                                                       Remove item                                                                                                                      Do you want to remove this product?                                Yes                                                                No                                                                                                                                                       Update                                                                                                                                                                                            Update Item                                                                          ×                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Name: {{productCart.name}}                                                                                                                          Quantity: {{productCart.quantity}}ote:  Maximum value for quantity is {{productCart.maxPush}}                                          items only                                                                                                                                                                                                                           productCart.maxPush\"                                            mdbBtn color=\"default\"                                            class=\"waves-light\" mdbWavesEffect>Update State                                                                        Close                                                                                                                                                                                                                                                                                                                   Do not delay the purchase, adding                    items to your cart does not mean booking them.                                                                                                          Expected shipping delivery                   Thu., 12.03. - Mon., 16.03.                                                                                                          We accept                                                                                                                                                                                                                                                            The total amount of                                                            Shipping                      Gratis                                                                                      The total amount of                                                  (including VAT)                                                                    ${{totalPurchase()}}                                                        go to checkout                                                                                                {{state}}    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserModel.html":{"url":"classes/UserModel.html","title":"class - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Auth/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                adminId\n                            \n                            \n                                    Public\n                                adminUsername\n                            \n                            \n                                cartId\n                            \n                            \n                                claims\n                            \n                            \n                                email\n                            \n                            \n                                emailVerified\n                            \n                            \n                                id\n                            \n                            \n                                invoices\n                            \n                            \n                                    Public\n                                isEmailVerified\n                            \n                            \n                                orders\n                            \n                            \n                                password\n                            \n                            \n                                payments\n                            \n                            \n                                profileId\n                            \n                            \n                                stripeId\n                            \n                            \n                                subscriberId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminId: number, adminUsername: string, isEmailVerified: boolean, adminEmail: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/Auth/user.model.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminId\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminUsername\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isEmailVerified\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminEmail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            adminId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            adminUsername\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cartId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            claims\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            invoices\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InvoiceModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OrderModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            payments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaymentModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profileId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stripeId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriberId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Auth/user.model.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {OrderModel} from '../Orders/order.model';\nimport {PaymentModel} from '../Payments/payment.model';\nimport {InvoiceModel} from '../Invoice/invoice.model';\nimport {UserRole} from '../../commons/enums/user-role.enum';\n\nexport class UserModel {\n  id: number;\n\n  username: string;\n\n  password: string;\n\n  email: string;\n\n  claims: UserRole[];\n\n  emailVerified: boolean;\n\n  invoices: InvoiceModel[];\n\n  payments: PaymentModel[];\n\n  orders: OrderModel[];\n\n  profileId: number;\n\n  subscriberId: number;\n\n  cartId: number;\n\n  stripeId: string;\n\n  constructor(public adminId: number, public adminUsername: string, public isEmailVerified: boolean,\n              protected adminEmail: string) {\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/dashboard/user-profile/user-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createUserProfile\n                            \n                            \n                                errorMessages\n                            \n                            \n                                errorTemplate\n                            \n                            \n                                formChanged\n                            \n                            \n                                    Public\n                                helperService\n                            \n                            \n                                startUploadingImage\n                            \n                            \n                                state\n                            \n                            \n                                updateProfileForm\n                            \n                            \n                                    Public\n                                uploader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addContact\n                            \n                            \n                                afterCreateUserProfile\n                            \n                            \n                                initializeProfile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onImageSelect\n                            \n                            \n                                updateImage\n                            \n                            \n                                updateProfile\n                            \n                            \n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    Controls\n                                \n                                \n                                    DisplayName\n                                \n                                \n                                    Contacts\n                                \n                                \n                                    Profile\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, store: Store, helperService: HelperService, router: Router, authService: AuthService, gdService: GlobalDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                        HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        gdService\n                                                  \n                                                        \n                                                                        GlobalDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addContact\n                        \n                        \n                    \n                \n            \n            \n                \naddContact(contact: Contact)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contact\n                                    \n                                                Contact\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            afterCreateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nafterCreateUserProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeProfile\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImageSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonImageSelect(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateImage\n                        \n                        \n                    \n                \n            \n            \n                \nupdateImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadImage\n                        \n                        \n                    \n                \n            \n            \n                \nuploadImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createUserProfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('createUserProfile', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ErrorMessages()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorTemplate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('errorTemplate', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            helperService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HelperService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startUploadingImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateProfileForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileUploader\n\n                        \n                    \n                    \n                        \n                            Default value : new FileUploader({})\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        Controls\n                    \n                \n\n                \n                    \n                        getControls()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        DisplayName\n                    \n                \n\n                \n                    \n                        getDisplayName()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Contacts\n                    \n                \n\n                \n                    \n                        getContacts()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:60\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        Profile\n                    \n                \n\n                \n                    \n                        getProfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/dashboard/user-profile/user-profile.component.ts:110\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Store} from '@ngxs/store';\nimport {Router} from '@angular/router';\nimport {HelperService} from '../../../shared/services/helper.service';\nimport {GlobalDataService} from '../../../shared/services/global-data.service';\nimport {ProfileActions} from '../../../state-management/profile/profile.actions';\nimport FetchUserProfile = ProfileActions.FetchUserProfile;\nimport {AuthService} from '../../../services/auth/auth.service';\nimport {FileUploader} from 'ng2-file-upload';\nimport {ErrorMessages} from '../../../commons/helpers/functions/error-messages';\nimport {Contact} from '../../../commons/classes/contact';\nimport EditProfile = ProfileActions.EditProfile;\nimport ChangeProfileImage = ProfileActions.ChangeProfileImage;\nimport SetProfileImage = ProfileActions.SetProfileImage;\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  @ViewChild('createUserProfile', {static: true}) createUserProfile: TemplateRef;\n  state: string;\n  formChanged: boolean;\n  updateProfileForm: FormGroup;\n  errorMessages = new ErrorMessages();\n  public uploader: FileUploader = new FileUploader({});\n  startUploadingImage = false;\n  @ViewChild('errorTemplate', {static: true}) errorTemplate: TemplateRef;\n\n  constructor(private fb: FormBuilder,\n              private store: Store,\n              public helperService: HelperService,\n              private router: Router,\n              private authService: AuthService,\n              private gdService: GlobalDataService) {\n  }\n\n  get Controls() {\n    return this.updateProfileForm.controls;\n  }\n\n  get DisplayName() {\n    return this.updateProfileForm.get('displayName');\n  }\n\n\n  onImageSelect(event) {\n    this.helperService.onImageSelect(event);\n  }\n\n  afterCreateUserProfile() {\n    if (this.Profile) {\n      this.initializeProfile();\n    }\n  }\n\n\n  get Contacts() {\n    return this.updateProfileForm.get('contacts') as FormArray;\n  }\n\n\n  ngOnInit(): void {\n    if (!this.gdService.User.profileId) {\n      this.helperService.openModal(this.createUserProfile);\n    } else if (!this.Profile) {\n      this.state = 'Loading Profile...';\n      this.helperService.showSpinner();\n      this.store.dispatch(new FetchUserProfile()).subscribe(() => {\n        this.initializeProfile();\n        this.state = null;\n        this.helperService.hideSpinner();\n      }, error => {\n        this.helperService.showErrorDialog(error, this.errorTemplate);\n      });\n    } else {\n      this.initializeProfile();\n    }\n  }\n\n  initializeProfile() {\n    this.updateProfileForm = this.fb.group({\n      displayName: new FormControl(this.Profile.displayName, [Validators.required]),\n      city: new FormControl(this.Profile.city, [Validators.required]),\n      country: new FormControl(this.Profile.country, [Validators.required]),\n      gender: new FormControl(this.Profile.gender, [Validators.required]),\n      email: new FormControl({\n        value: this.gdService.User.email,\n        disabled: true\n      }),\n      contacts: this.fb.array([], [Validators.required])\n    });\n    for (let i = 0; i  {\n      this.formChanged = true;\n    });\n  }\n\n  addContact(contact: Contact) {\n    this.Contacts.push(this.fb.group({\n      address: new FormControl(contact.address, [Validators.required]),\n      phone: new FormControl(contact.phone, [Validators.required]),\n    }));\n  }\n\n  get Profile() {\n    return this.gdService.Profile;\n  }\n\n  updateProfile() {\n    this.state = 'Updating Profile...';\n    this.helperService.showSpinner();\n    this.store.dispatch(new EditProfile(this.updateProfileForm.value)).subscribe(() => {\n      this.helperService.hideSpinner();\n      this.state = null;\n      this.helperService.openSnackbar('Profile Updated Successfully', 'Okay');\n    }, error => {\n      this.helperService.hideDialog();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n  updateImage() {\n    this.startUploadingImage = true;\n    this.store.dispatch(new ChangeProfileImage(this.helperService.imageFormData, this.gdService.Username)).subscribe(() => {\n      this.helperService.openSnackbar('Image changed successfully', 'Okay');\n      this.helperService.adjustData();\n      this.startUploadingImage = false;\n    }, error => {\n      this.helperService.hideDialog();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n\n    });\n  }\n\n  uploadImage() {\n    this.startUploadingImage = true;\n    this.store.dispatch(new SetProfileImage(this.helperService.imageFormData, this.gdService.Username)).subscribe(() => {\n      this.helperService.openSnackbar('Image uploaded successfully', 'Okay');\n      this.helperService.adjustData();\n      this.startUploadingImage = false;\n    }, error => {\n      this.helperService.hideDialog();\n      this.helperService.showErrorDialog(error, this.errorTemplate);\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n      \n\n        \n        \n\n          \n          \n            \n              Edit Image\n            \n          \n          \n\n          \n          \n            \n              \n              \n              \n            \n            \n              Change Image\n              \n              Upload New Image\n              \n              \n                \n                  Save &nbsp; \n                  \n                  Cancel &nbsp; \n                  \n                \n                \n                  \n                \n              \n\n\n              \n                \n                  Save &nbsp; \n                  \n                  Cancel &nbsp; \n                  \n                \n                \n                  \n                \n              \n            \n          \n          \n\n        \n\n        \n\n          \n          \n            \n              Latest Orders\n            \n          \n\n          \n          \n            \n              \n                 Order 1\n                 Order 2\n                 Order 3\n                 Order 4\n                 Order 5\n\n              \n            \n          \n          \n            \n              \n                See all orders\n              \n            \n          \n        \n        \n\n      \n      \n\n      \n      \n\n        \n        \n\n          \n          \n            \n              Edit Account\n            \n          \n          \n\n          \n          \n\n            \n            \n              User information\n              \n                \n                  \n                    Display Name\n                    \n\n                    \n                      {{errorMessages.requiredField('Display Name')}}\n                    \n                  \n\n                \n              \n              \n                \n                  \n                    Email\n                    \n                  \n                \n              \n              \n                \n                  \n                    Country\n                    \n                    \n                      {{errorMessages.requiredField('Country')}}\n                    \n                  \n\n                \n              \n              \n                \n                  \n                    City\n                    \n                    \n                      {{errorMessages.requiredField('City')}}\n                    \n                  \n                \n              \n              \n                \n                  \n                    Gender\n                    \n                      {{g}}\n                    \n                    \n                      {{errorMessages.requiredField('Gender')}}\n                    \n                  \n                \n              \n              \n              Contact information\n              \n                \n              \n\n            \n\n          \n          \n            \n              Update Profile\n              \n            \n          \n\n        \n      \n\n    \n\n  \n\n\n\n  \n\n\n  \n    {{state}}\n  \n\n\n  \n    Do you want to confirm?\n    Yes\n    \n    No\n  \n\n\n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      Edit Image                                                                                                                                                Change Image                            Upload New Image                                                              Save                                       Cancel                                                                                                                                                     Save                                       Cancel                                                                                                                                                                                                   Latest Orders                                                                                     Order 1                 Order 2                 Order 3                 Order 4                 Order 5                                                                                        See all orders                                                                                                                                          Edit Account                                                                                          User information                                                                    Display Name                                                              {{errorMessages.requiredField(\\'Display Name\\')}}                                                                                                                                        Email                                                                                                                                        Country                                                              {{errorMessages.requiredField(\\'Country\\')}}                                                                                                                                        City                                                              {{errorMessages.requiredField(\\'City\\')}}                                                                                                                                        Gender                                          {{g}}                                                              {{errorMessages.requiredField(\\'Gender\\')}}                                                                                                Contact information                                                                                                      Update Profile                                                                {{state}}        Do you want to confirm?    Yes        No    '\n    var COMPONENTS = [{'name': 'AddContactsComponent', 'selector': 'app-add-contacts'},{'name': 'AddToCartComponent', 'selector': 'app-add-to-cart'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CartLayoutComponent', 'selector': 'app-cart-layout'},{'name': 'CategoryDetailsComponent', 'selector': 'app-category-details'},{'name': 'CategoryLayoutComponent', 'selector': 'app-category-layout'},{'name': 'ChatbotComponent', 'selector': 'app-chatbot'},{'name': 'CheckoutComponent', 'selector': 'app-checkout'},{'name': 'CommonLayoutComponent', 'selector': 'app-common-layout'},{'name': 'CreateUserProfileComponent', 'selector': 'app-create-user-profile'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvalidCredentialsComponent', 'selector': 'app-invalid-credentials'},{'name': 'InvoiceLayoutComponent', 'selector': 'app-invoice-layout'},{'name': 'InvoicesComponent', 'selector': 'app-invoices'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginFirstComponent', 'selector': 'app-login-first'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NoInternetComponent', 'selector': 'app-no-internet'},{'name': 'OrderDetailsComponent', 'selector': 'app-order-details'},{'name': 'OrderLayoutComponent', 'selector': 'app-order-layout'},{'name': 'OrdersComponent', 'selector': 'app-orders'},{'name': 'PaymentLayoutComponent', 'selector': 'app-payment-layout'},{'name': 'ProductDetailsComponent', 'selector': 'app-product-details'},{'name': 'ProductLayoutComponent', 'selector': 'app-product-layout'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'ShopComponent', 'selector': 'app-shop'},{'name': 'ShopLayoutComponent', 'selector': 'app-shop-layout'},{'name': 'ShowErrorDialogComponent', 'selector': 'app-show-error-dialog'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'StripeCheckoutComponent', 'selector': 'app-stripe-checkout'},{'name': 'SubCategoryDetailsComponent', 'selector': 'app-sub-category-details'},{'name': 'SubCategoryLayoutComponent', 'selector': 'app-sub-category-layout'},{'name': 'TagItemsComponent', 'selector': 'app-tag-items'},{'name': 'TagLayoutComponent', 'selector': 'app-tag-layout'},{'name': 'TagsComponent', 'selector': 'app-tags'},{'name': 'UserCartComponent', 'selector': 'app-user-cart'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/cdk : ^9.0.0\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/localize : ^9.1.12\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            @angular/service-worker : ~9.1.3\n        \n            @fortawesome/fontawesome-free : ^5.15.0\n        \n            @ng-bootstrap/ng-bootstrap : 6.0.0\n        \n            @ngxs/hmr-plugin : ^3.6.2\n        \n            @ngxs/logger-plugin : ^3.6.2\n        \n            @ngxs/storage-plugin : ^3.6.2\n        \n            @ngxs/store : ^3.6.2\n        \n            @popperjs/core : ^2.5.2\n        \n            @rxweb/reactive-form-validators : ^2.1.2\n        \n            @stripe/stripe-js : ^1.9.0\n        \n            @types/chart.js : ^2.9.24\n        \n            angular-bootstrap-md : ^9.2.4\n        \n            animate.css : ^4.1.1\n        \n            aws-sdk : ^2.792.0\n        \n            bcryptjs : ^2.4.3\n        \n            bootstrap : 4.5.2\n        \n            chart.js : ^2.5.0\n        \n            crypto : ^1.0.1\n        \n            express : ^4.17.1\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.5.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            ng2-file-upload : ^1.4.0\n        \n            ngx-bootstrap : ^5.6.1\n        \n            ngx-cookie-service : ^10.1.1\n        \n            ngx-custom-validators : ^9.1.0\n        \n            ngx-image-zoom : ^0.6.0\n        \n            ngx-spinner : ^9.0.2\n        \n            ngx-stripe : ^10.1.2\n        \n            ngx-toastr : ^12.0.1\n        \n            path : ^0.12.7\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivityType   (src/.../activity-type.enum.ts)\n                        \n                        \n                            Gender   (src/.../gender.enum.ts)\n                        \n                        \n                            LoadType   (src/.../shop.component.ts)\n                        \n                        \n                            OrderStatus   (src/.../order-status.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../payment-method.enum.ts)\n                        \n                        \n                            UserRole   (src/.../user-role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/commons/enums/activity-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityType\n                    \n                \n                        \n                            \n                                 CREATING\n                            \n                        \n                        \n                            \n                                Value : CREATION\n                            \n                        \n                        \n                            \n                                 UPDATING\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 LOGIN\n                            \n                        \n                        \n                            \n                                Value : LOGIN\n                            \n                        \n                        \n                            \n                                 LOGOUT\n                            \n                        \n                        \n                            \n                                Value : LOGOUT\n                            \n                        \n                        \n                            \n                                 DELETING\n                            \n                        \n                        \n                            \n                                Value : DELETING\n                            \n                        \n                        \n                            \n                                 PUSHING\n                            \n                        \n                        \n                            \n                                Value : PUSHING\n                            \n                        \n                        \n                            \n                                 SEND_FORGOT_REQUEST_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : SEND_REQUEST_PASSWORD\n                            \n                        \n                        \n                            \n                                 SEND_EMAIL_VERIFICATION_REQUEST\n                            \n                        \n                        \n                            \n                                Value : SEND_EMAIL_VERIFICATION_REQUEST\n                            \n                        \n                        \n                            \n                                 RESET_PASSWORD\n                            \n                        \n                        \n                            \n                                Value : RESET_PASSWORD\n                            \n                        \n                        \n                            \n                                 CHECKOUT\n                            \n                        \n                        \n                            \n                                Value : CHECKOUT\n                            \n                        \n                        \n                            \n                                 SEND_NOTIFICATION\n                            \n                        \n                        \n                            \n                                Value : SEND_NOTIFICATION\n                            \n                        \n                        \n                            \n                                 CHECKOUT_ON_SINGLE_PRODUCT\n                            \n                        \n                        \n                            \n                                Value : CHECKOUT\n                            \n                        \n                        \n                            \n                                 VERIFY_EMAIL\n                            \n                        \n                        \n                            \n                                Value : VERIFY_EMAIL\n                            \n                        \n                        \n                            \n                                 REGISTER\n                            \n                        \n                        \n                            \n                                Value : REGISTER\n                            \n                        \n                        \n                            \n                                 ADD_PRODUCT_TO_CART\n                            \n                        \n                        \n                            \n                                Value : ADD_PRODUCT_TO_CART\n                            \n                        \n                        \n                            \n                                 CLEAR_CART\n                            \n                        \n                        \n                            \n                                Value : CLEAR_CART\n                            \n                        \n                        \n                            \n                                 REMOVE_PRODUCT_FROM_CART\n                            \n                        \n                        \n                            \n                                Value : REMOVE_PRODUCT_FROM_CART\n                            \n                        \n            \n        \n\n    src/app/commons/enums/gender.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n            \n        \n\n    src/app/pages/shop/shop/shop.component.ts\n    \n        \n            \n                \n                    \n                        \n                        LoadType\n                    \n                \n                        \n                            \n                                 TAG\n                            \n                        \n                        \n                            \n                                Value : TAG\n                            \n                        \n                        \n                            \n                                 SHOP_PRODUCTS\n                            \n                        \n                        \n                            \n                                Value : SHOP_PRODUCTS\n                            \n                        \n                        \n                            \n                                 SUB_CATEGORY\n                            \n                        \n                        \n                            \n                                Value : SUBCATEGORY\n                            \n                        \n                        \n                            \n                                 CUSTOM\n                            \n                        \n                        \n                            \n                                Value : CUSTOM\n                            \n                        \n            \n        \n\n    src/app/commons/enums/order-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PROCESSED\n                            \n                        \n                        \n                            \n                                Value : PROCESSED\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : SHIPPED\n                            \n                        \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n            \n        \n\n    src/app/commons/enums/payment-method.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 MASTERCARD\n                            \n                        \n                        \n                            \n                                Value : MASTERCARD\n                            \n                        \n                        \n                            \n                                 VISA\n                            \n                        \n                        \n                            \n                                Value : VISA\n                            \n                        \n                        \n                            \n                                 PAYPAL\n                            \n                        \n                        \n                            \n                                Value : PAYPAL\n                            \n                        \n                        \n                            \n                                 CASH_ON_DELIVERY\n                            \n                        \n                        \n                            \n                                Value : CASH_ON_DELIVERY\n                            \n                        \n            \n        \n\n    src/app/commons/enums/user-role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 WEAK_ADMIN\n                            \n                        \n                        \n                            \n                                Value : WEAK_ADMIN\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 GUEST\n                            \n                        \n                        \n                            \n                                Value : GUEST\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getToken   (src/.../get-token.ts)\n                        \n                        \n                            MustMatch   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/commons/helpers/functions/get-token.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n\n\n        \n    \n    src/app/shared/validators/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            MustMatch\n                        \n                        \n                    \n                \n            \n            \n                \nMustMatch(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGlobalMarketDemo\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatbotModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InvoiceLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MdbModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgxModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentLayoutModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ShopLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StripeIntegrationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubCategoryLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagLayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_CartLayoutModule\n\n\n\ncluster_CartLayoutModule_declarations\n\n\n\ncluster_CategoryLayoutModule\n\n\n\ncluster_CategoryLayoutModule_declarations\n\n\n\ncluster_ChatbotModule\n\n\n\ncluster_ChatbotModule_declarations\n\n\n\ncluster_CommonLayoutModule\n\n\n\ncluster_CommonLayoutModule_declarations\n\n\n\ncluster_CommonLayoutModule_exports\n\n\n\ncluster_ComponentModule\n\n\n\ncluster_ComponentModule_declarations\n\n\n\ncluster_ComponentModule_exports\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_InvoiceLayoutModule\n\n\n\ncluster_InvoiceLayoutModule_declarations\n\n\n\ncluster_OrderLayoutModule\n\n\n\ncluster_OrderLayoutModule_declarations\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_ProductLayoutModule\n\n\n\ncluster_ProductLayoutModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_ShopLayoutModule\n\n\n\ncluster_ShopLayoutModule_declarations\n\n\n\ncluster_StripeIntegrationModule\n\n\n\ncluster_StripeIntegrationModule_declarations\n\n\n\ncluster_StripeIntegrationModule_exports\n\n\n\ncluster_SubCategoryLayoutModule\n\n\n\ncluster_SubCategoryLayoutModule_declarations\n\n\n\ncluster_TagLayoutModule\n\n\n\ncluster_TagLayoutModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nCartLayoutComponent\n\nCartLayoutComponent\n\nAppModule -->\n\nCartLayoutComponent->AppModule\n\n\n\n\n\nCategoryLayoutComponent\n\nCategoryLayoutComponent\n\nAppModule -->\n\nCategoryLayoutComponent->AppModule\n\n\n\n\n\nCommonLayoutComponent\n\nCommonLayoutComponent\n\nAppModule -->\n\nCommonLayoutComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nAppModule -->\n\nErrorComponent->AppModule\n\n\n\n\n\nInvoiceLayoutComponent\n\nInvoiceLayoutComponent\n\nAppModule -->\n\nInvoiceLayoutComponent->AppModule\n\n\n\n\n\nOrderLayoutComponent\n\nOrderLayoutComponent\n\nAppModule -->\n\nOrderLayoutComponent->AppModule\n\n\n\n\n\nPaymentLayoutComponent\n\nPaymentLayoutComponent\n\nAppModule -->\n\nPaymentLayoutComponent->AppModule\n\n\n\n\n\nProductLayoutComponent\n\nProductLayoutComponent\n\nAppModule -->\n\nProductLayoutComponent->AppModule\n\n\n\n\n\nShopLayoutComponent\n\nShopLayoutComponent\n\nAppModule -->\n\nShopLayoutComponent->AppModule\n\n\n\n\n\nSubCategoryLayoutComponent\n\nSubCategoryLayoutComponent\n\nAppModule -->\n\nSubCategoryLayoutComponent->AppModule\n\n\n\n\n\nTagLayoutComponent\n\nTagLayoutComponent\n\nAppModule -->\n\nTagLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStripeIntegrationModule\n\nStripeIntegrationModule\n\nStripeIntegrationModule -->\n\nSharedModule->StripeIntegrationModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nCartLayoutModule\n\nCartLayoutModule\n\nCartLayoutModule -->\n\nSharedModule->CartLayoutModule\n\n\n\n\n\nCategoryLayoutModule\n\nCategoryLayoutModule\n\nCategoryLayoutModule -->\n\nSharedModule->CategoryLayoutModule\n\n\n\n\n\nCommonLayoutModule\n\nCommonLayoutModule\n\nCommonLayoutModule -->\n\nSharedModule->CommonLayoutModule\n\n\n\n\n\nComponentModule\n\nComponentModule\n\nComponentModule -->\n\nSharedModule->ComponentModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\nInvoiceLayoutModule\n\nInvoiceLayoutModule\n\nInvoiceLayoutModule -->\n\nSharedModule->InvoiceLayoutModule\n\n\n\n\n\nOrderLayoutModule\n\nOrderLayoutModule\n\nOrderLayoutModule -->\n\nSharedModule->OrderLayoutModule\n\n\n\n\n\nProductLayoutModule\n\nProductLayoutModule\n\nProductLayoutModule -->\n\nSharedModule->ProductLayoutModule\n\n\n\n\n\nAddContactsComponent \n\nAddContactsComponent \n\nAddContactsComponent  -->\n\nSharedModule->AddContactsComponent \n\n\n\n\n\nAddToCartComponent \n\nAddToCartComponent \n\nAddToCartComponent  -->\n\nSharedModule->AddToCartComponent \n\n\n\n\n\nFileModule \n\nFileModule \n\nFileModule  -->\n\nSharedModule->FileModule \n\n\n\n\n\nInvalidCredentialsComponent \n\nInvalidCredentialsComponent \n\nInvalidCredentialsComponent  -->\n\nSharedModule->InvalidCredentialsComponent \n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\nMdbModule \n\nMdbModule \n\nMdbModule  -->\n\nSharedModule->MdbModule \n\n\n\n\n\nNgxModule \n\nNgxModule \n\nNgxModule  -->\n\nSharedModule->NgxModule \n\n\n\n\n\nShowErrorDialogComponent \n\nShowErrorDialogComponent \n\nShowErrorDialogComponent  -->\n\nSharedModule->ShowErrorDialogComponent \n\n\n\n\n\nShopLayoutModule\n\nShopLayoutModule\n\nShopLayoutModule -->\n\nSharedModule->ShopLayoutModule\n\n\n\n\n\nSubCategoryLayoutModule\n\nSubCategoryLayoutModule\n\nSubCategoryLayoutModule -->\n\nSharedModule->SubCategoryLayoutModule\n\n\n\n\n\nTagLayoutModule\n\nTagLayoutModule\n\nTagLayoutModule -->\n\nSharedModule->TagLayoutModule\n\n\n\nAppModule -->\n\nStripeIntegrationModule->AppModule\n\n\n\nCartLayoutModule -->\n\nStripeIntegrationModule->CartLayoutModule\n\n\n\n\n\nStripeCheckoutComponent \n\nStripeCheckoutComponent \n\nStripeCheckoutComponent  -->\n\nStripeIntegrationModule->StripeCheckoutComponent \n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nTokenInterceptor\n\nTokenInterceptor\n\nAppModule -->\n\nTokenInterceptor->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nCheckoutComponent\n\nCheckoutComponent\n\nCartLayoutModule -->\n\nCheckoutComponent->CartLayoutModule\n\n\n\n\n\nUserCartComponent\n\nUserCartComponent\n\nCartLayoutModule -->\n\nUserCartComponent->CartLayoutModule\n\n\n\n\n\nCategoryDetailsComponent\n\nCategoryDetailsComponent\n\nCategoryLayoutModule -->\n\nCategoryDetailsComponent->CategoryLayoutModule\n\n\n\n\n\nChatBot\n\nChatBot\n\n\n\nChatbotModule\n\nChatbotModule\n\nChatbotModule -->\n\nChatBot->ChatbotModule\n\n\n\n\n\nChatbotComponent\n\nChatbotComponent\n\nChatbotModule -->\n\nChatbotComponent->ChatbotModule\n\n\n\n\n\nSearchBarComponent\n\nSearchBarComponent\n\nCommonLayoutModule -->\n\nSearchBarComponent->CommonLayoutModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nCommonLayoutModule -->\n\nSearchComponent->CommonLayoutModule\n\n\n\n\n\nSearchBarComponent \n\nSearchBarComponent \n\nSearchBarComponent  -->\n\nCommonLayoutModule->SearchBarComponent \n\n\n\nComponentModule -->\n\nCommonLayoutModule->ComponentModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nComponentModule -->\n\nFooterComponent->ComponentModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nComponentModule -->\n\nNavbarComponent->ComponentModule\n\n\n\n\n\nSidebarComponent\n\nSidebarComponent\n\nComponentModule -->\n\nSidebarComponent->ComponentModule\n\n\n\n\n\nFooterComponent \n\nFooterComponent \n\nFooterComponent  -->\n\nComponentModule->FooterComponent \n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nComponentModule->NavbarComponent \n\n\n\n\n\nSidebarComponent \n\nSidebarComponent \n\nSidebarComponent  -->\n\nComponentModule->SidebarComponent \n\n\n\n\n\nCreateUserProfileComponent\n\nCreateUserProfileComponent\n\nDashboardModule -->\n\nCreateUserProfileComponent->DashboardModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nDashboardModule -->\n\nHomeComponent->DashboardModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nDashboardModule -->\n\nUserProfileComponent->DashboardModule\n\n\n\n\n\nNoInternetComponent\n\nNoInternetComponent\n\nErrorModule -->\n\nNoInternetComponent->ErrorModule\n\n\n\n\n\nInvoicesComponent\n\nInvoicesComponent\n\nInvoiceLayoutModule -->\n\nInvoicesComponent->InvoiceLayoutModule\n\n\n\n\n\nOrderDetailsComponent\n\nOrderDetailsComponent\n\nOrderLayoutModule -->\n\nOrderDetailsComponent->OrderLayoutModule\n\n\n\n\n\nOrdersComponent\n\nOrdersComponent\n\nOrderLayoutModule -->\n\nOrdersComponent->OrderLayoutModule\n\n\n\n\n\nCategoryPipe\n\nCategoryPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nCategoryPipe->PipesModule\n\n\n\n\n\nGeneralPipe\n\nGeneralPipe\n\nPipesModule -->\n\nGeneralPipe->PipesModule\n\n\n\n\n\nProductFilterPipe\n\nProductFilterPipe\n\nPipesModule -->\n\nProductFilterPipe->PipesModule\n\n\n\n\n\nTagPipe\n\nTagPipe\n\nPipesModule -->\n\nTagPipe->PipesModule\n\n\n\n\n\nCategoryPipe \n\nCategoryPipe \n\nCategoryPipe  -->\n\nPipesModule->CategoryPipe \n\n\n\n\n\nGeneralPipe \n\nGeneralPipe \n\nGeneralPipe  -->\n\nPipesModule->GeneralPipe \n\n\n\n\n\nProductFilterPipe \n\nProductFilterPipe \n\nProductFilterPipe  -->\n\nPipesModule->ProductFilterPipe \n\n\n\n\n\nTagPipe \n\nTagPipe \n\nTagPipe  -->\n\nPipesModule->TagPipe \n\n\n\n\n\nProductDetailsComponent\n\nProductDetailsComponent\n\nProductLayoutModule -->\n\nProductDetailsComponent->ProductLayoutModule\n\n\n\n\n\nAddContactsComponent\n\nAddContactsComponent\n\nSharedModule -->\n\nAddContactsComponent->SharedModule\n\n\n\n\n\nAddToCartComponent\n\nAddToCartComponent\n\nSharedModule -->\n\nAddToCartComponent->SharedModule\n\n\n\n\n\nInvalidCredentialsComponent\n\nInvalidCredentialsComponent\n\nSharedModule -->\n\nInvalidCredentialsComponent->SharedModule\n\n\n\n\n\nLoginFirstComponent\n\nLoginFirstComponent\n\nSharedModule -->\n\nLoginFirstComponent->SharedModule\n\n\n\n\n\nShowErrorDialogComponent\n\nShowErrorDialogComponent\n\nSharedModule -->\n\nShowErrorDialogComponent->SharedModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nSharedModule -->\n\nFileModule->SharedModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nMdbModule\n\nMdbModule\n\nSharedModule -->\n\nMdbModule->SharedModule\n\n\n\n\n\nNgxModule\n\nNgxModule\n\nSharedModule -->\n\nNgxModule->SharedModule\n\n\n\n\n\nShopComponent\n\nShopComponent\n\nShopLayoutModule -->\n\nShopComponent->ShopLayoutModule\n\n\n\n\n\nStripeCheckoutComponent\n\nStripeCheckoutComponent\n\nStripeIntegrationModule -->\n\nStripeCheckoutComponent->StripeIntegrationModule\n\n\n\n\n\nSubCategoryDetailsComponent\n\nSubCategoryDetailsComponent\n\nSubCategoryLayoutModule -->\n\nSubCategoryDetailsComponent->SubCategoryLayoutModule\n\n\n\n\n\nTagItemsComponent\n\nTagItemsComponent\n\nTagLayoutModule -->\n\nTagItemsComponent->TagLayoutModule\n\n\n\n\n\nTagsComponent\n\nTagsComponent\n\nTagLayoutModule -->\n\nTagsComponent->TagLayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    44 Components\n                \n            \n        \n        \n            \n                \n                    \n                    26 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    109 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        52 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiEndpoints   (src/.../api-endpoints.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            Countries   (src/.../countries.ts)\n                        \n                        \n                            EmailPattern   (src/.../constants.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            materialModules   (src/.../material.module.ts)\n                        \n                        \n                            mdbModules   (src/.../mdb.module.ts)\n                        \n                        \n                            ngxComponents   (src/.../ngx.module.ts)\n                        \n                        \n                            prefixRoute   (src/.../api-endpoints.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            States   (src/.../states.ts)\n                        \n                        \n                            StatesNames   (src/.../states.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/commons/api-endpoints.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiEndpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  AuthEndpoints: {\n    registerUser: `${prefixRoute}/auth/register/user`,\n    registerAdmin: `${prefixRoute}/auth/register/admin`,\n    loginUser: `${prefixRoute}/auth/login/user`,\n    sendEmailVerification: `${prefixRoute}/auth/email/send-email-verification`,\n    verifyEmail: `${prefixRoute}/auth/email/verify`,\n    forgotPassword: `${prefixRoute}/auth/email/forgot-password`,\n    resetPassword: `${prefixRoute}/auth/email/reset-password`,\n    deleteUserAccount: `${prefixRoute}/auth/delete-user-account`,\n    checkUsername: `${prefixRoute}/auth/check-username`,\n    getUserById: `${prefixRoute}/auth/users`,\n    getSystemUsers: `${prefixRoute}/auth/system-users`,\n    editUserRoles: `${prefixRoute}/auth/edit-user-roles`,\n    globalData: `${prefixRoute}/auth/global-data`,\n    updateToken: `${prefixRoute}/auth/update-token`\n  },\n  ProfileEndpoints: {\n    rootProfile: `${prefixRoute}/profiles`\n  },\n\n  ActivityEndpoints: {\n    rootActivities: `${prefixRoute}/activities`\n  },\n  ProductEndpoints: {\n    rootProducts: `${prefixRoute}/products`,\n    filteredByRange: `${prefixRoute}/products/filtered-by-range`,\n    filteredByStockExistence: `${prefixRoute}/products/filtered-by-stock-existence`,\n    searchByTagName: `${prefixRoute}/search-by-tag-name`,\n  },\n  CategoryEndpoints: {\n    rootCategories: `${prefixRoute}/categories`,\n  },\n  SubCategoryEndpoints: {\n    rootSubCategories: `${prefixRoute}/sub-categories`\n  },\n  PaymentEndpoints: {\n    rootPayments: `${prefixRoute}/payments`\n  },\n  InvoiceEndpoints: {\n    rootInvoices: `${prefixRoute}/invoices`\n  },\n  OrderEndpoints: {\n    rootOrders: `${prefixRoute}/orders`\n  },\n  CartEndpoints: {\n    rootCart: `${prefixRoute}/cart`\n  },\n  TagEndpoints: {\n    rootTags: `${prefixRoute}/tags`\n  },\n  NotificationEndpoints: {\n    Notifications: `${prefixRoute}/notifications`,\n    Subscribers: `${prefixRoute}/notifications/subscribers`,\n    newSubscriber: `${prefixRoute}/notifications/subscribers/new`,\n    sendNotification: `${prefixRoute}/notifications/send-notification`\n  },\n  Search: {\n    searchByName: `${prefixRoute}/search`\n  },\n  Contact: {\n    messageUri: `${prefixRoute}/email/contact`\n  },\n  VapidKeys: {\n    publicKey: 'BKmeS0raBK4YrI7tiG3FaQ-TQJJjq-b4YsqxbiNgcTidYR3yvEkfLRFrFiljjAcXuNcVLErufWJ2pvhsN0O7uN8',\n    privateKey: 'Psk8q_qyekL2hrPwnYF8k-ckTmb8JRmjBUBsmv9FquY',\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prefixRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://global-store-api.herokuapp.com'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/commons/constants/countries.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Countries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'Jordan',\n  'Syria',\n  'Egypt',\n  'Iraq',\n  'Yaman',\n  'Pelistine',\n  'Tunis',\n  'Morooco',\n  'Algeria'\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/commons/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmailPattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(?:[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  stripePublishedKey: 'pk_test_NGZldNb6iALz1pXcygYAYYZv000hYAH7Lb'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  stripePublishedKey: 'pk_test_NGZldNb6iALz1pXcygYAYYZv000hYAH7Lb',\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/material.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatButtonModule,\n  CdkAccordionModule,\n  BidiModule,\n  OverlayModule,\n  PlatformModule,\n  ObserversModule,\n  MatIconModule,\n  MatButtonToggleModule,\n  MatBadgeModule,\n  MatProgressSpinnerModule,\n  MatToolbarModule,\n  MatSidenavModule,\n  MatMenuModule,\n  MatListModule,\n  MatTabsModule,\n  MatDividerModule,\n  MatGridListModule,\n  MatExpansionModule,\n  MatCardModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatAutocompleteModule,\n  MatCheckboxModule,\n  MatRadioModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatTooltipModule,\n  MatSnackBarModule,\n  MatDialogModule,\n  MatTableModule,\n  A11yModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  PortalModule,\n  ScrollingModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/mdb.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mdbModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MDBBootstrapModule.forRoot(),\n  BadgeModule,\n  BreadcrumbModule,\n  MDBRootModule,\n  ModalModule.forRoot(),\n  ButtonsModule.forRoot(),\n  WavesModule.forRoot(),\n  TooltipModule.forRoot(),\n  TableModule,\n  PopoverModule.forRoot(),\n  NavbarModule,\n  CardsModule.forRoot(),\n  DropdownModule.forRoot(),\n  IconsModule,\n  CheckboxModule,\n  InputUtilitiesModule,\n  CarouselModule.forRoot(),\n  CollapseModule.forRoot(),\n  ChartsModule,\n  StickyHeaderModule,\n  InputsModule.forRoot(),\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/modules/ngx.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ngxComponents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CarouselModule.forRoot(),\n  TooltipModule.forRoot(),\n  ModalModule.forRoot(),\n  PopoverModule.forRoot(),\n  AccordionModule.forRoot(),\n  PaginationModule.forRoot(),\n  BsDropdownModule.forRoot(),\n  NgxImageZoomModule\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/state-management/states.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            States\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  AuthState,\n  CartState,\n  ProductState,\n  CategoryState,\n  PaymentState,\n  SubCategoryState,\n  TagState,\n  InvoiceState,\n  ProfileState,\n  OrderState\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StatesNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  'auth',\n  'profile',\n  'cart',\n  'categories',\n  'orders',\n  'invoices',\n  'tags',\n  'subCategories',\n  'payments',\n  'products'\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
